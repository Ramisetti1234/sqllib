--------------------------------------------------------
--  File created - Friday-May-03-2024   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Type DIRECTOR_LIBRARY
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TYPE "DIRECTOR_LIBRARY" AS OBJECT(
employeeid NUMBER,
name VARCHAR2(40),
address VARCHAR2(50),
phone INT(9),
paycheck NUMBER(10,2),
extrapaycheck NUMBER(10,2)
);
--------------------------------------------------------
--  DDL for Type LOGMNR$COL_GG_REC
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TYPE "LOGMNR$COL_GG_REC" as object
(
LOGMNR_UID NUMBER,
OBJ# NUMBER,
MD_COL_NAME VARCHAR2(384),
MD_COL_NUM NUMBER,                 /* col# */
MD_COL_SEGCOL NUMBER,              /* segcol# */
MD_COL_TYPE NUMBER,                /* type# */
MD_COL_LEN NUMBER,
MD_COL_PREC NUMBER,                /* precision */
MD_COL_SCALE NUMBER,
MD_COL_CHARSETID NUMBER,           /* character set id */
MD_COL_CHARSETFORM NUMBER,         /* character set form */
MD_COL_ALT_TYPE VARCHAR2(4000),    /* adt type if any */
MD_COL_ALT_PREC NUMBER,            /* precision of the adt attribute */
MD_COL_ALT_CHAR_USED VARCHAR2(2),  /* charset used by the adt attribute */
MD_COL_ALT_LENGTH NUMBER,          /* length of the adt attribute */
MD_COL_ALT_XML_TYPE NUMBER,        /* 0/1. is xml_type column */
MD_COL_ALT_BINARYXML_TYPE NUMBER,  /* 0/1. is xml_type stored as binary */
MD_COL_ENC_ISENC VARCHAR2(3) ,     /* 'YES'/'NO' */
MD_COL_ENC_NOSALT VARCHAR2(3) ,    /* 'YES'/'NO' */
MD_COL_ENC_ISLOB VARCHAR2(3) ,     /* 'YES'/'NO' */
MD_COL_ALT_OBJECTXML_TYPE NUMBER,  /* 0/1 xml_type stored as object */
MD_COL_HASNOTNULLDEFAULT VARCHAR2(3) ,   /* 'YES'/'NO' */
MD_COL_ALT_TYPE_OWNER VARCHAR2(384),  /* owner of the adt type if any */
PROPERTY NUMBER,
XCOLTYPEFLAGS NUMBER,
XOPQTYPEFLAGS NUMBER,
EAFLAGS NUMBER,
XFQCOLNAME VARCHAR2(4000),
SPARE1  NUMBER,
SPARE2  NUMBER,
SPARE3  NUMBER,
SPARE4  VARCHAR2(4000),
SPARE5  VARCHAR2(4000),
SPARE6  VARCHAR2(4000),
/* Following fields added in 12.1.0.2 */
OBJV# NUMBER,
INTCOL# NUMBER,
INTERVAL_LEADING_PRECISION NUMBER,
INTERVAL_TRAILING_PRECISION NUMBER,
TOID RAW(16),
TYPENAME VARCHAR2(384),
NUMINTCOLS NUMBER,
NUMATTRS NUMBER,
ADTORDER NUMBER,
LOGMNR_SPARE1 NUMBER,
LOGMNR_SPARE2 NUMBER,
LOGMNR_SPARE3 VARCHAR2(1000),
LOGMNR_SPARE4 DATE,
LOGMNR_SPARE5 NUMBER,
LOGMNR_SPARE6 NUMBER,
LOGMNR_SPARE7 NUMBER,
LOGMNR_SPARE8 NUMBER,
LOGMNR_SPARE9 NUMBER,
XTYPENAME VARCHAR2(4000),
XTOPINTCOL NUMBER,
XREFFEDTABLEOBJN NUMBER,
XREFFEDTABLEOBJV NUMBER,
XOPQTYPETYPE NUMBER,
XOPQLOBINTCOL NUMBER,
XOPQOBJINTCOL NUMBER,
XXMLINTCOL    NUMBER,
LOGMNRDERIVEDFLAGS NUMBER,
/* Following fields added in 12.2 */
COLLID      NUMBER,
COLLINTCOL#  NUMBER,
ACDRRESCOL# NUMBER
);
--------------------------------------------------------
--  DDL for Type LOGMNR$COL_GG_RECS
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TYPE "LOGMNR$COL_GG_RECS" AS TABLE OF  SYSTEM.LOGMNR$COL_GG_REC;
--------------------------------------------------------
--  DDL for Type LOGMNR$GSBA_GG_REC
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TYPE "LOGMNR$GSBA_GG_REC" AS OBJECT
(
LOGMNR_UID NUMBER,
NAME           VARCHAR2(384),
VALUE          VARCHAR2(4000),
LOGMNR_SPARE1  NUMBER,
LOGMNR_SPARE2  NUMBER,
LOGMNR_SPARE3  VARCHAR2(4000),
LOGMNR_SPARE4  DATE
);
--------------------------------------------------------
--  DDL for Type LOGMNR$GSBA_GG_RECS
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TYPE "LOGMNR$GSBA_GG_RECS" AS TABLE OF  SYSTEM.LOGMNR$GSBA_GG_REC;
--------------------------------------------------------
--  DDL for Type LOGMNR$KEY_GG_REC
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TYPE "LOGMNR$KEY_GG_REC" as object
(
LOGMNR_UID NUMBER,
KEY# NUMBER,                   /* index obj# or con# */
KEY_FLAGS NUMBER,              /* index or constraint */
KEY_NAME VARCHAR2(384),        /* index name or constraint name */
INDEX_OWNER# NUMBER,
INDEX_OWNERNAME VARCHAR2(384),
COLNAME VARCHAR2(384),
INTCOL# NUMBER,
which number,
KEY_ORDER VARCHAR2(10),              /* asc or desc */
KEYCOL_FLAGS NUMBER,           /* Column properties such as is_null */
SPARE1  NUMBER,
SPARE2  NUMBER,
SPARE3  NUMBER,
SPARE4  VARCHAR2(4000),
SPARE5  VARCHAR2(4000),
SPARE6  VARCHAR2(4000)
);
--------------------------------------------------------
--  DDL for Type LOGMNR$KEY_GG_RECS
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TYPE "LOGMNR$KEY_GG_RECS" AS TABLE OF  SYSTEM.LOGMNR$KEY_GG_REC;
--------------------------------------------------------
--  DDL for Type LOGMNR$SEQ_GG_REC
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TYPE "LOGMNR$SEQ_GG_REC" as object
(
LOGMNR_UID NUMBER,
OBJ# NUMBER,
NAME VARCHAR2(384),
OWNER# NUMBER,
OWNERNAME VARCHAR2(384),
FLAGS NUMBER,
MD_TAB_SEQCACHE NUMBER,
MD_TAB_SEQINCREMENTBY NUMBER,
SPARE1  NUMBER,
SPARE2  NUMBER,
SPARE3  NUMBER,
SPARE4  VARCHAR2(4000),
SPARE5  VARCHAR2(4000),
SPARE6  VARCHAR2(4000)
);
--------------------------------------------------------
--  DDL for Type LOGMNR$SEQ_GG_RECS
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TYPE "LOGMNR$SEQ_GG_RECS" AS TABLE OF  SYSTEM.LOGMNR$SEQ_GG_REC;
--------------------------------------------------------
--  DDL for Type LOGMNR$TAB_GG_REC
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TYPE "LOGMNR$TAB_GG_REC" as object
(
LOGMNR_UID NUMBER,
OBJ# NUMBER,
BASEOBJV# NUMBER,
MD_TAB_USERID NUMBER,                /* owner# */
MD_TAB_COLCOUNT NUMBER,              /* user column count */
MD_TAB_TOTAL_COL_NUM NUMBER,         /* kernal column count */
MD_TAB_LOG_GROUP_EXISTS NUMBER,      /* Any log group exists for this table */
MD_TAB_IOT VARCHAR2(3) ,             /* 'YES'/'NO' IS IOT? */
MD_TAB_IOT_OVERFLOW VARCHAR2(3) ,    /* 'YES'/'NO' IOT with overflow ? */
MD_TAB_PARTITION  VARCHAR2(3) ,      /* 'YES'/'NO' is partitioned ? */
MD_TAB_SUBPARTITION VARCHAR2(3) ,    /* 'YES'/'NO' is sub partitioned? */
MD_TAB_XMLTYPETABLE VARCHAR2(3) ,    /* 'YES'/'NO' is xmltype table? */
MD_TAB_OBJECTID NUMBER,              /* object id if table object */
MD_TAB_OWNER VARCHAR2(384),     /* owner name */
MD_TAB_NAME VARCHAR2(384),      /* table name */
MD_TAB_OBJTYPE VARCHAR2(384),   /* Object type name */
MD_TAB_SCN NUMBER,                   /* COMMIT_SCN of this table version */
TAB_FLAGS NUMBER,
TRIGFLAG NUMBER,
OBJ_FLAGS NUMBER,
PROPERTY NUMBER,
PARTTYPE NUMBER,
SUBPARTTYPE NUMBER,
SPARE1  NUMBER,
SPARE2  NUMBER,
SPARE3  NUMBER,
SPARE4  VARCHAR2(4000),
SPARE5  VARCHAR2(4000),
SPARE6  VARCHAR2(4000),
/* Following fields added in 12.1.0.2 */
LVLCNT NUMBER,
LVL1OBJ# NUMBER,
LVL2OBJ# NUMBER,
LVL1TYPE# NUMBER,
LVL2TYPE# NUMBER,
LVL1NAME  VARCHAR2(384),
LVL2NAME  VARCHAR2(384),
INTCOLS   NUMBER,
ASSOC#    NUMBER,
XIDUSN    NUMBER,
XIDSLT    NUMBER,
XIDSQN    NUMBER,
DROP_SCN  NUMBER,
FLAGS     NUMBER,
LOGMNR_SPARE1   NUMBER,
LOGMNR_SPARE2   NUMBER,
LOGMNR_SPARE3   VARCHAR2(1000),
LOGMNR_SPARE4   DATE,
LOGMNR_SPARE5   NUMBER,
LOGMNR_SPARE6   NUMBER,
LOGMNR_SPARE7   NUMBER,
LOGMNR_SPARE8   NUMBER,
LOGMNR_SPARE9   NUMBER,
UNSUPPORTEDCOLS  NUMBER,
COMPLEXTYPECOLS  NUMBER,
NTPARENTOBJNUM   NUMBER,
NTPARENTOBJVERSION NUMBER,
NTPARENTINTCOLNUM  NUMBER,
LOGMNRTLOFLAGS    NUMBER,
LOGMNRMCV VARCHAR2(30),
/* Following fields added in 12.2 */
ACDRFLAGS        NUMBER,                                    /* automatic CDR */
ACDRTSOBJ#       NUMBER,                                    /* automatic CDR */
ACDRROWTSINTCOL# NUMBER                                     /* automatic CDR */
);
--------------------------------------------------------
--  DDL for Type LOGMNR$TAB_GG_RECS
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TYPE "LOGMNR$TAB_GG_RECS" AS TABLE OF  SYSTEM.LOGMNR$TAB_GG_REC;
--------------------------------------------------------
--  DDL for Type LOGMNR$USER_GG_REC
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TYPE "LOGMNR$USER_GG_REC" AS OBJECT
(
LOGMNR_UID     NUMBER,
USERNAME       VARCHAR2(384),
USERID         NUMBER,
LOGMNR_SPARE1  NUMBER,
LOGMNR_SPARE2  NUMBER,
LOGMNR_SPARE3  VARCHAR2(4000),
LOGMNR_SPARE4  DATE
);
--------------------------------------------------------
--  DDL for Type LOGMNR$USER_GG_RECS
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TYPE "LOGMNR$USER_GG_RECS" AS TABLE OF  SYSTEM.LOGMNR$USER_GG_REC;
--------------------------------------------------------
--  DDL for Sequence LOGMNR_DIDS$
--------------------------------------------------------

   CREATE SEQUENCE  "LOGMNR_DIDS$"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  ORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------
--  DDL for Sequence LOGMNR_EVOLVE_SEQ$
--------------------------------------------------------

   CREATE SEQUENCE  "LOGMNR_EVOLVE_SEQ$"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  ORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------
--  DDL for Sequence LOGMNR_SEQ$
--------------------------------------------------------

   CREATE SEQUENCE  "LOGMNR_SEQ$"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  ORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------
--  DDL for Sequence LOGMNR_UIDS$
--------------------------------------------------------

   CREATE SEQUENCE  "LOGMNR_UIDS$"  MINVALUE 100 MAXVALUE 99999 INCREMENT BY 1 START WITH 100 NOCACHE  ORDER  CYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------
--  DDL for Sequence MVIEW$_ADVSEQ_GENERIC
--------------------------------------------------------

   CREATE SEQUENCE  "MVIEW$_ADVSEQ_GENERIC"  MINVALUE 1 MAXVALUE 4294967295 INCREMENT BY 1 START WITH 1 CACHE 50 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------
--  DDL for Sequence MVIEW$_ADVSEQ_ID
--------------------------------------------------------

   CREATE SEQUENCE  "MVIEW$_ADVSEQ_ID"  MINVALUE 1 MAXVALUE 4294967295 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------
--  DDL for Sequence ROLLING_EVENT_SEQ$
--------------------------------------------------------

   CREATE SEQUENCE  "ROLLING_EVENT_SEQ$"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  ORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------
--  DDL for Sequence SEQ_APP_ID
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_APP_ID"  MINVALUE 1 MAXVALUE 10000 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL
--------------------------------------------------------
--  DDL for Table ACCOUNT
--------------------------------------------------------

  CREATE TABLE "ACCOUNT" ("ACC_ID" NUMBER(10,0), "CUST_ID" NUMBER(10,0), "ACCOUNT_NUMBER" NUMBER(10,0), "ACCOUNT_TYPE" VARCHAR2(1), "CARD_ISSUED_DATE" DATE, "ACCOUNT_ACTIVATED" VARCHAR2(1), "ACCOUNT_ACTIVATION_DATE" DATE, "ACCOUNT_BALANCE" NUMBER(30,10), "ACC_SUB_TYPE" VARCHAR2(10), "UPI_ADDRESS" VARCHAR2(10), "UPI_ACTIVE" VARCHAR2(1))
--------------------------------------------------------
--  DDL for Table ACCOUNT_1
--------------------------------------------------------

  CREATE TABLE "ACCOUNT_1" ("ACCOUNT_NUMBER" NUMBER, "NAME" VARCHAR2(100), "JOINING_DATE" DATE, "DEBIT" NUMBER, "CREDIT" NUMBER, "BALANCE" NUMBER(10,2), "INTEREST" NUMBER(10,2))
--------------------------------------------------------
--  DDL for Table ACCOUNT_12345
--------------------------------------------------------

  CREATE TABLE "ACCOUNT_12345" ("ACCOUNT_NUMBER" NUMBER, "NAME" VARCHAR2(100), "JOINING_DATE" DATE, "DEBIT" NUMBER, "CREDIT" NUMBER, "BALANCE" NUMBER(10,2), "INTEREST" NUMBER(10,2))
--------------------------------------------------------
--  DDL for Table ACCOUNT_12346
--------------------------------------------------------

  CREATE TABLE "ACCOUNT_12346" ("ACCOUNT_NUMBER" NUMBER, "NAME" VARCHAR2(100), "JOINING_DATE" DATE, "DEBIT" NUMBER, "CREDIT" NUMBER, "BALANCE" NUMBER(10,2), "INTEREST" NUMBER(10,2))
--------------------------------------------------------
--  DDL for Table ACCOUNT_12347
--------------------------------------------------------

  CREATE TABLE "ACCOUNT_12347" ("ACCOUNT_NUMBER" NUMBER, "NAME" VARCHAR2(100), "JOINING_DATE" DATE, "DEBIT" NUMBER, "CREDIT" NUMBER, "BALANCE" NUMBER(10,2), "INTEREST" NUMBER(10,2))
--------------------------------------------------------
--  DDL for Table ACCOUNT_12348
--------------------------------------------------------

  CREATE TABLE "ACCOUNT_12348" ("ACCOUNT_NUMBER" NUMBER, "NAME" VARCHAR2(100), "JOINING_DATE" DATE, "DEBIT" NUMBER, "CREDIT" NUMBER, "BALANCE" NUMBER(10,2), "INTEREST" NUMBER(10,2))
--------------------------------------------------------
--  DDL for Table ACCOUNT_12349
--------------------------------------------------------

  CREATE TABLE "ACCOUNT_12349" ("ACCOUNT_NUMBER" NUMBER, "NAME" VARCHAR2(100), "JOINING_DATE" DATE, "DEBIT" NUMBER, "CREDIT" NUMBER, "BALANCE" NUMBER(10,2), "INTEREST" NUMBER(10,2))
--------------------------------------------------------
--  DDL for Table ACCOUNT_2
--------------------------------------------------------

  CREATE TABLE "ACCOUNT_2" ("ACCOUNT_NUMBER" NUMBER, "NAME" VARCHAR2(100), "JOINING_DATE" DATE, "DEBIT" NUMBER, "CREDIT" NUMBER, "BALANCE" NUMBER(10,2), "INTEREST" NUMBER(10,2))
--------------------------------------------------------
--  DDL for Table ACCOUNT_3
--------------------------------------------------------

  CREATE TABLE "ACCOUNT_3" ("ACCOUNT_NUMBER" NUMBER, "NAME" VARCHAR2(100), "JOINING_DATE" DATE, "DEBIT" NUMBER, "CREDIT" NUMBER, "BALANCE" NUMBER(10,2), "INTEREST" NUMBER(10,2))
--------------------------------------------------------
--  DDL for Table ACCOUNT_4
--------------------------------------------------------

  CREATE TABLE "ACCOUNT_4" ("ACCOUNT_NUMBER" NUMBER, "NAME" VARCHAR2(100), "JOINING_DATE" DATE, "DEBIT" NUMBER, "CREDIT" NUMBER, "BALANCE" NUMBER(10,2), "INTEREST" NUMBER(10,2))
--------------------------------------------------------
--  DDL for Table ACCOUNT_5
--------------------------------------------------------

  CREATE TABLE "ACCOUNT_5" ("ACCOUNT_NUMBER" NUMBER, "NAME" VARCHAR2(100), "JOINING_DATE" DATE, "DEBIT" NUMBER, "CREDIT" NUMBER, "BALANCE" NUMBER(10,2), "INTEREST" NUMBER(10,2))
--------------------------------------------------------
--  DDL for Table ACCOUNT_8
--------------------------------------------------------

  CREATE TABLE "ACCOUNT_8" ("ACCOUNT_ID" NUMBER, "ACCOUNT_NAME" VARCHAR2(16), "ACCOUNT_BALANCE" NUMBER(12,2))
--------------------------------------------------------
--  DDL for Table ADDRESS
--------------------------------------------------------

  CREATE TABLE "ADDRESS" ("CITY_ID" NUMBER, "CITY" VARCHAR2(15), "PINCODE" VARCHAR2(10))
--------------------------------------------------------
--  DDL for Table AQ$_INTERNET_AGENTS
--------------------------------------------------------

  CREATE TABLE "AQ$_INTERNET_AGENTS" SHARING=METADATA ("AGENT_NAME" VARCHAR2(512), "PROTOCOL" NUMBER(*,0), "SPARE1" VARCHAR2(128))
--------------------------------------------------------
--  DDL for Table AQ$_INTERNET_AGENT_PRIVS
--------------------------------------------------------

  CREATE TABLE "AQ$_INTERNET_AGENT_PRIVS" SHARING=METADATA ("AGENT_NAME" VARCHAR2(512), "DB_USERNAME" VARCHAR2(128))
--------------------------------------------------------
--  DDL for Table AQ$_KEY_SHARD_MAP
--------------------------------------------------------

  CREATE TABLE "AQ$_KEY_SHARD_MAP" SHARING=METADATA ("QUEUE" NUMBER, "KEY" VARCHAR2(128), "SHARD" NUMBER, "DELAY_SHARD" NUMBER)
--------------------------------------------------------
--  DDL for Table AQ$_QUEUES
--------------------------------------------------------

  CREATE TABLE "AQ$_QUEUES" SHARING=METADATA ("OID" RAW(16), "EVENTID" NUMBER, "NAME" VARCHAR2(128), "TABLE_OBJNO" NUMBER, "USAGE" NUMBER, "ENABLE_FLAG" NUMBER, "MAX_RETRIES" NUMBER, "RETRY_DELAY" NUMBER, "PROPERTIES" NUMBER, "RET_TIME" NUMBER, "QUEUE_COMMENT" VARCHAR2(2000), "SUBSCRIBERS" "AQ$_SUBSCRIBERS" , "MEMORY_THRESHOLD" NUMBER, "SERVICE_NAME" VARCHAR2(64), "NETWORK_NAME" VARCHAR2(256), "SUB_OID" RAW(16), "SHARDED" NUMBER, "BASE_QUEUE" NUMBER DEFAULT 0)
--------------------------------------------------------
--  DDL for Table AQ$_QUEUE_TABLES
--------------------------------------------------------

  CREATE TABLE "AQ$_QUEUE_TABLES" SHARING=METADATA ("SCHEMA" VARCHAR2(128), "NAME" VARCHAR2(128), "UDATA_TYPE" NUMBER, "OBJNO" NUMBER, "FLAGS" NUMBER, "SORT_COLS" NUMBER, "TIMEZONE" VARCHAR2(64), "TABLE_COMMENT" VARCHAR2(2000))
--------------------------------------------------------
--  DDL for Table AQ$_SCHEDULES
--------------------------------------------------------

  CREATE TABLE "AQ$_SCHEDULES" SHARING=METADATA ("OID" RAW(16), "DESTINATION" VARCHAR2(390), "START_TIME" DATE, "DURATION" VARCHAR2(8), "NEXT_TIME" VARCHAR2(128), "LATENCY" VARCHAR2(8), "LAST_TIME" DATE, "JOBNO" NUMBER)
--------------------------------------------------------
--  DDL for Table BANK
--------------------------------------------------------

  CREATE TABLE "BANK" ("BANK_ID" NUMBER, "BANK_NAME" VARCHAR2(100), "BANK_IFSC_CODE" VARCHAR2(100), "BRANCH" VARCHAR2(100))
--------------------------------------------------------
--  DDL for Table BANK_ACCOUNT_1
--------------------------------------------------------

  CREATE TABLE "BANK_ACCOUNT_1" ("ACCOUNT_NUMBER" NUMBER, "NAME" VARCHAR2(100), "JOINING_DATE" DATE, "MOBILE_NUMBER" NUMBER, "DEBIT" NUMBER, "CREDIT" NUMBER, "BALANCE" NUMBER(10,2), "INREST" NUMBER(10,2))
--------------------------------------------------------
--  DDL for Table BANK_ACCOUNT_2
--------------------------------------------------------

  CREATE TABLE "BANK_ACCOUNT_2" ("ACCOUNT_NUMBER" NUMBER, "NAME" VARCHAR2(100), "JOINING_DATE" DATE, "MOBILE_NUMBER" NUMBER, "DEBIT" NUMBER, "CREDIT" NUMBER, "BALANCE" NUMBER(10,2), "INREST" NUMBER(10,2))
--------------------------------------------------------
--  DDL for Table BANK_ACCOUNT_3
--------------------------------------------------------

  CREATE TABLE "BANK_ACCOUNT_3" ("ACCOUNT_NUMBER" NUMBER, "NAME" VARCHAR2(100), "JOINING_DATE" DATE, "MOBILE_NUMBER" NUMBER, "DEBIT" NUMBER, "CREDIT" NUMBER, "BALANCE" NUMBER(10,2), "INREST" NUMBER(10,2))
--------------------------------------------------------
--  DDL for Table BANK_ACCOUNT_4
--------------------------------------------------------

  CREATE TABLE "BANK_ACCOUNT_4" ("ACCOUNT_NUMBER" NUMBER, "NAME" VARCHAR2(100), "JOINING_DATE" DATE, "MOBILE_NUMBER" NUMBER, "DEBIT" NUMBER, "CREDIT" NUMBER, "BALANCE" NUMBER(10,2), "INREST" NUMBER(10,2))
--------------------------------------------------------
--  DDL for Table BANK_ACCOUNT_5
--------------------------------------------------------

  CREATE TABLE "BANK_ACCOUNT_5" ("ACCOUNT_NUMBER" NUMBER, "NAME" VARCHAR2(100), "JOINING_DATE" DATE, "MOBILE_NUMBER" NUMBER, "DEBIT" NUMBER, "CREDIT" NUMBER, "BALANCE" NUMBER(10,2), "INREST" NUMBER(10,2))
--------------------------------------------------------
--  DDL for Table BIN_RANGE
--------------------------------------------------------

  CREATE TABLE "BIN_RANGE" ("BIN_ID" NUMBER, "BIN_RANGE_FROM" NUMBER(6,0), "BIN_RANGE_TO" NUMBER(6,0), "BIN_TYPE" VARCHAR2(10))
--------------------------------------------------------
--  DDL for Table BIN_SUBSCRIPTION
--------------------------------------------------------

  CREATE TABLE "BIN_SUBSCRIPTION" ("BIN_NAME" VARCHAR2(100), "BIN_ID" NUMBER, "STATUS" VARCHAR2(1))
--------------------------------------------------------
--  DDL for Table BOOK
--------------------------------------------------------

  CREATE TABLE "BOOK" ("ISBN" VARCHAR2(4), "BOOKID" VARCHAR2(6), "STATE" VARCHAR2(10), "AVALABILITY" VARCHAR2(1), "DEBYCOST" NUMBER(10,2), "LOSTCOST" NUMBER(10,2), "ADDRESS" VARCHAR2(50))
--------------------------------------------------------
--  DDL for Table BRANCH
--------------------------------------------------------

  CREATE TABLE "BRANCH" ("NAME" VARCHAR2(40), "ADDRESS" VARCHAR2(50), "PHONE" NUMBER(9,0))
--------------------------------------------------------
--  DDL for Table BRANCHES
--------------------------------------------------------

  CREATE TABLE "BRANCHES" ("BRANCH_ID" NUMBER(*,0), "BRANCH_NAME" VARCHAR2(100), "CLIENT_ID" NUMBER(*,0))
--------------------------------------------------------
--  DDL for Table CARD
--------------------------------------------------------

  CREATE TABLE "CARD" ("CARDID" NUMBER, "STATUS" VARCHAR2(1), "FINES" NUMBER)
--------------------------------------------------------
--  DDL for Table CLASS
--------------------------------------------------------

  CREATE TABLE "CLASS" ("STUD_ID" NUMBER(*,0), "NAME" VARCHAR2(25), "BR_ID" NUMBER(*,0), "EMAIL" VARCHAR2(20), "CITY_ID" NUMBER(*,0))
--------------------------------------------------------
--  DDL for Table CLIENTS
--------------------------------------------------------

  CREATE TABLE "CLIENTS" ("CLIENT_ID" NUMBER(*,0), "CLIENT_NAME" VARCHAR2(100))
--------------------------------------------------------
--  DDL for Table COUNTRIES
--------------------------------------------------------

  CREATE TABLE "COUNTRIES" ("COUNTRY_ID" CHAR(2), "COUNTRY_NAME" VARCHAR2(40), "REGION_ID" NUMBER)
--------------------------------------------------------
--  DDL for Table CUSTOMER
--------------------------------------------------------

  CREATE TABLE "CUSTOMER" ("CUSTOMERID" NUMBER, "NAME" VARCHAR2(40), "CUSTOMERADDRESS" VARCHAR2(50), "PHONE" NUMBER(9,0), "PASSWORD" VARCHAR2(20), "USERNAME" VARCHAR2(10), "DATESIGNUP" DATE, "CARDNUMBER" NUMBER)
--------------------------------------------------------
--  DDL for Table CUSTOMERS
--------------------------------------------------------

  CREATE TABLE "CUSTOMERS" ("CUST_ID" NUMBER(*,0), "NAME" VARCHAR2(100), "CITY" VARCHAR2(100), "INDUSTRY_ID" NUMBER(*,0))
--------------------------------------------------------
--  DDL for Table CUST_ADDRESS
--------------------------------------------------------

  CREATE TABLE "CUST_ADDRESS" ("CUST_ID" NUMBER, "VILLAGE" VARCHAR2(100), "CITY" VARCHAR2(100), "STATE" VARCHAR2(100), "COUNTRY" VARCHAR2(100), "PIN_CODE" NUMBER(6,0))
--------------------------------------------------------
--  DDL for Table CUST_NEW_APPLICATION
--------------------------------------------------------

  CREATE TABLE "CUST_NEW_APPLICATION" ("FIRST_NAME" VARCHAR2(50), "MIDDLE_NAME" VARCHAR2(50), "LAST_NAME" VARCHAR2(50), "EMAIL_ID" VARCHAR2(50), "MOBILE_NUM" NUMBER, "GENDER" VARCHAR2(50), "IFSC_CODE" VARCHAR2(50), "D_ID" NUMBER, "DOC_ID" NUMBER, "APP_ID" NUMBER, "STATUS" VARCHAR2(1) DEFAULT 'p', "CMNT" VARCHAR2(100))
--------------------------------------------------------
--  DDL for Table DEPARTMENTS
--------------------------------------------------------

  CREATE TABLE "DEPARTMENTS" ("DEPARTMENT_ID" NUMBER(4,0), "DEPARTMENT_NAME" VARCHAR2(30), "MANAGER_ID" NUMBER(6,0), "LOCATION_ID" NUMBER(4,0))
--------------------------------------------------------
--  DDL for Table EMP
--------------------------------------------------------

  CREATE TABLE "EMP" ("EMPNO" NUMBER(4,0), "ENAME" VARCHAR2(10), "JOB" VARCHAR2(9), "MGR" NUMBER(4,0), "HIREDATE" DATE, "SAL" NUMBER(7,2), "COMM" NUMBER(7,2), "DEPTNO" NUMBER(2,0))
--------------------------------------------------------
--  DDL for Table EMPLOYEE
--------------------------------------------------------

  CREATE TABLE "EMPLOYEE" ("EMPLOYEEID" NUMBER, "NAME" VARCHAR2(40), "EMPLOYEEADDRESS" VARCHAR2(50), "PHONE" NUMBER(9,0), "PASSWORD" VARCHAR2(20), "USERNAME" VARCHAR2(10), "PAYCHECK" NUMBER(8,2), "BRANCHNAME" VARCHAR2(40), "CARDNUMBER" NUMBER)
--------------------------------------------------------
--  DDL for Table EMPLOYEES
--------------------------------------------------------

  CREATE TABLE "EMPLOYEES" ("EMPLOYEE_ID" NUMBER(6,0), "FIRST_NAME" VARCHAR2(20), "LAST_NAME" VARCHAR2(25), "EMAIL" VARCHAR2(25), "PHONE_NUMBER" VARCHAR2(20), "HIRE_DATE" DATE, "JOB_ID" VARCHAR2(10), "SALARY" NUMBER(8,2), "COMMISSION_PCT" NUMBER(2,2), "MANAGER_ID" NUMBER(6,0), "DEPARTMENT_ID" NUMBER(4,0))
--------------------------------------------------------
--  DDL for Table HELP
--------------------------------------------------------

  CREATE TABLE "HELP" SHARING=METADATA ("TOPIC" VARCHAR2(50), "SEQ" NUMBER, "INFO" VARCHAR2(80))
--------------------------------------------------------
--  DDL for Table INVOICES
--------------------------------------------------------

  CREATE TABLE "INVOICES" ("INVOICE_ID" NUMBER(*,0), "YEAR" NUMBER(*,0), "BRANCH_ID" NUMBER(*,0), "AMOUNT" NUMBER(10,2))
--------------------------------------------------------
--  DDL for Table JOBS
--------------------------------------------------------

  CREATE TABLE "JOBS" ("JOB_ID" VARCHAR2(10), "JOB_TITLE" VARCHAR2(35), "MIN_SALARY" NUMBER(6,0), "MAX_SALARY" NUMBER(6,0))
--------------------------------------------------------
--  DDL for Table LOCATION
--------------------------------------------------------

  CREATE TABLE "LOCATION" ("ADDRESS" VARCHAR2(50))
--------------------------------------------------------
--  DDL for Table LOCATIONS
--------------------------------------------------------

  CREATE TABLE "LOCATIONS" ("LOCATION_ID" NUMBER(4,0), "STREET_ADDRESS" VARCHAR2(40), "POSTAL_CODE" VARCHAR2(12), "CITY" VARCHAR2(30), "STATE_PROVINCE" VARCHAR2(25), "COUNTRY_ID" CHAR(2))
--------------------------------------------------------
--  DDL for Table LOGMNRC_CONCOL_GG
--------------------------------------------------------

  CREATE TABLE "LOGMNRC_CONCOL_GG" SHARING=METADATA ("LOGMNR_UID" NUMBER, "CON#" NUMBER, "COMMIT_SCN" NUMBER, "INTCOL#" NUMBER, "POS#" NUMBER, "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" VARCHAR2(4000))
--------------------------------------------------------
--  DDL for Table LOGMNRC_CON_GG
--------------------------------------------------------

  CREATE TABLE "LOGMNRC_CON_GG" SHARING=METADATA ("LOGMNR_UID" NUMBER, "CON#" NUMBER, "NAME" VARCHAR2(384), "COMMIT_SCN" NUMBER, "DROP_SCN" NUMBER, "BASEOBJ#" NUMBER, "BASEOBJV#" NUMBER, "FLAGS" NUMBER, "INDEXOBJ#" NUMBER, "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" NUMBER, "SPARE4" VARCHAR2(4000), "SPARE5" VARCHAR2(4000), "SPARE6" VARCHAR2(4000))
--------------------------------------------------------
--  DDL for Table LOGMNRC_DBNAME_UID_MAP
--------------------------------------------------------

  CREATE TABLE "LOGMNRC_DBNAME_UID_MAP" SHARING=METADATA ("GLOBAL_NAME" VARCHAR2(384), "LOGMNR_UID" NUMBER, "FLAGS" NUMBER, "PDB_NAME" VARCHAR2(384), "LOGMNR_MDH" NUMBER)
--------------------------------------------------------
--  DDL for Table LOGMNRC_GSBA
--------------------------------------------------------

  CREATE TABLE "LOGMNRC_GSBA" SHARING=METADATA ("LOGMNR_UID" NUMBER, "AS_OF_SCN" NUMBER, "FDO_LENGTH" NUMBER, "FDO_VALUE" RAW(255), "CHARSETID" NUMBER, "NCHARSETID" NUMBER, "DBTIMEZONE_LEN" NUMBER, "DBTIMEZONE_VALUE" VARCHAR2(192), "LOGMNR_SPARE1" NUMBER, "LOGMNR_SPARE2" NUMBER, "LOGMNR_SPARE3" VARCHAR2(1000), "LOGMNR_SPARE4" DATE, "DB_GLOBAL_NAME" VARCHAR2(384))
--------------------------------------------------------
--  DDL for Table LOGMNRC_GSII
--------------------------------------------------------

  CREATE TABLE "LOGMNRC_GSII" SHARING=METADATA ("LOGMNR_UID" NUMBER, "OBJ#" NUMBER, "BO#" NUMBER, "INDTYPE#" NUMBER, "DROP_SCN" NUMBER, "LOGMNR_SPARE1" NUMBER, "LOGMNR_SPARE2" NUMBER, "LOGMNR_SPARE3" VARCHAR2(1000), "LOGMNR_SPARE4" DATE)
--------------------------------------------------------
--  DDL for Table LOGMNRC_GTCS
--------------------------------------------------------

  CREATE TABLE "LOGMNRC_GTCS" SHARING=METADATA ("LOGMNR_UID" NUMBER, "OBJ#" NUMBER, "OBJV#" NUMBER, "SEGCOL#" NUMBER, "INTCOL#" NUMBER, "COLNAME" VARCHAR2(384), "TYPE#" NUMBER, "LENGTH" NUMBER, "PRECISION" NUMBER, "SCALE" NUMBER, "INTERVAL_LEADING_PRECISION" NUMBER, "INTERVAL_TRAILING_PRECISION" NUMBER, "PROPERTY" NUMBER, "TOID" RAW(16), "CHARSETID" NUMBER, "CHARSETFORM" NUMBER, "TYPENAME" VARCHAR2(384), "FQCOLNAME" VARCHAR2(4000), "NUMINTCOLS" NUMBER, "NUMATTRS" NUMBER, "ADTORDER" NUMBER, "LOGMNR_SPARE1" NUMBER, "LOGMNR_SPARE2" NUMBER, "LOGMNR_SPARE3" VARCHAR2(1000), "LOGMNR_SPARE4" DATE, "LOGMNR_SPARE5" NUMBER, "LOGMNR_SPARE6" NUMBER, "LOGMNR_SPARE7" NUMBER, "LOGMNR_SPARE8" NUMBER, "LOGMNR_SPARE9" NUMBER, "COL#" NUMBER, "XTYPESCHEMANAME" VARCHAR2(384), "XTYPENAME" VARCHAR2(4000), "XFQCOLNAME" VARCHAR2(4000), "XTOPINTCOL" NUMBER, "XREFFEDTABLEOBJN" NUMBER, "XREFFEDTABLEOBJV" NUMBER, "XCOLTYPEFLAGS" NUMBER, "XOPQTYPETYPE" NUMBER, "XOPQTYPEFLAGS" NUMBER, "XOPQLOBINTCOL" NUMBER, "XOPQOBJINTCOL" NUMBER, "XXMLINTCOL" NUMBER, "EAOWNER#" NUMBER, "EAMKEYID" VARCHAR2(192), "EAENCALG" NUMBER, "EAINTALG" NUMBER, "EACOLKLC" RAW(2000), "EAKLCLEN" NUMBER, "EAFLAGS" NUMBER, "LOGMNRDERIVEDFLAGS" NUMBER, "COLLID" NUMBER, "COLLINTCOL#" NUMBER, "ACDRRESCOL#" NUMBER)
--------------------------------------------------------
--  DDL for Table LOGMNRC_GTLO
--------------------------------------------------------

  CREATE TABLE "LOGMNRC_GTLO" SHARING=METADATA ("LOGMNR_UID" NUMBER, "KEYOBJ#" NUMBER, "LVLCNT" NUMBER, "BASEOBJ#" NUMBER, "BASEOBJV#" NUMBER, "LVL1OBJ#" NUMBER, "LVL2OBJ#" NUMBER, "LVL0TYPE#" NUMBER, "LVL1TYPE#" NUMBER, "LVL2TYPE#" NUMBER, "OWNER#" NUMBER, "OWNERNAME" VARCHAR2(384), "LVL0NAME" VARCHAR2(384), "LVL1NAME" VARCHAR2(384), "LVL2NAME" VARCHAR2(384), "INTCOLS" NUMBER, "COLS" NUMBER, "KERNELCOLS" NUMBER, "TAB_FLAGS" NUMBER, "TRIGFLAG" NUMBER, "ASSOC#" NUMBER, "OBJ_FLAGS" NUMBER, "TS#" NUMBER, "TSNAME" VARCHAR2(90), "PROPERTY" NUMBER, "START_SCN" NUMBER, "DROP_SCN" NUMBER, "XIDUSN" NUMBER, "XIDSLT" NUMBER, "XIDSQN" NUMBER, "FLAGS" NUMBER, "LOGMNR_SPARE1" NUMBER, "LOGMNR_SPARE2" NUMBER, "LOGMNR_SPARE3" VARCHAR2(1000), "LOGMNR_SPARE4" DATE, "LOGMNR_SPARE5" NUMBER, "LOGMNR_SPARE6" NUMBER, "LOGMNR_SPARE7" NUMBER, "LOGMNR_SPARE8" NUMBER, "LOGMNR_SPARE9" NUMBER, "PARTTYPE" NUMBER, "SUBPARTTYPE" NUMBER, "UNSUPPORTEDCOLS" NUMBER, "COMPLEXTYPECOLS" NUMBER, "NTPARENTOBJNUM" NUMBER, "NTPARENTOBJVERSION" NUMBER, "NTPARENTINTCOLNUM" NUMBER, "LOGMNRTLOFLAGS" NUMBER, "LOGMNRMCV" VARCHAR2(30), "ACDRFLAGS" NUMBER, "ACDRTSOBJ#" NUMBER, "ACDRROWTSINTCOL#" NUMBER)
--------------------------------------------------------
--  DDL for Table LOGMNRC_INDCOL_GG
--------------------------------------------------------

  CREATE TABLE "LOGMNRC_INDCOL_GG" SHARING=METADATA ("LOGMNR_UID" NUMBER, "OBJ#" NUMBER, "COMMIT_SCN" NUMBER, "INTCOL#" NUMBER, "POS#" NUMBER, "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" VARCHAR2(4000))
--------------------------------------------------------
--  DDL for Table LOGMNRC_IND_GG
--------------------------------------------------------

  CREATE TABLE "LOGMNRC_IND_GG" SHARING=METADATA ("LOGMNR_UID" NUMBER, "OBJ#" NUMBER, "NAME" VARCHAR2(384), "COMMIT_SCN" NUMBER, "DROP_SCN" NUMBER, "BASEOBJ#" NUMBER, "BASEOBJV#" NUMBER, "FLAGS" NUMBER, "OWNER#" NUMBER, "OWNERNAME" VARCHAR2(384), "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" NUMBER, "SPARE4" VARCHAR2(4000), "SPARE5" VARCHAR2(4000), "SPARE6" VARCHAR2(4000))
--------------------------------------------------------
--  DDL for Table LOGMNRC_SEQ_GG
--------------------------------------------------------

  CREATE TABLE "LOGMNRC_SEQ_GG" SHARING=METADATA ("LOGMNR_UID" NUMBER, "OBJ#" NUMBER, "COMMIT_SCN" NUMBER, "DROP_SCN" NUMBER, "SEQ_FLAGS" NUMBER, "OWNER#" NUMBER, "OWNERNAME" VARCHAR2(384), "OBJNAME" VARCHAR2(384), "SEQCACHE" NUMBER, "SEQINC" NUMBER, "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" VARCHAR2(4000), "SPARE4" VARCHAR2(4000))
--------------------------------------------------------
--  DDL for Table LOGMNRC_SHARD_TS
--------------------------------------------------------

  CREATE TABLE "LOGMNRC_SHARD_TS" SHARING=METADATA ("LOGMNR_UID" NUMBER, "TABLESPACE_NAME" VARCHAR2(90), "CHUNK_NUMBER" NUMBER, "START_SCN" NUMBER, "DROP_SCN" NUMBER, "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" VARCHAR2(4000))
--------------------------------------------------------
--  DDL for Table LOGMNRC_TS
--------------------------------------------------------

  CREATE TABLE "LOGMNRC_TS" SHARING=METADATA ("LOGMNR_UID" NUMBER, "TS#" NUMBER(22,0), "NAME" VARCHAR2(90), "START_SCN" NUMBER, "DROP_SCN" NUMBER, "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" VARCHAR2(4000))
--------------------------------------------------------
--  DDL for Table LOGMNRC_TSPART
--------------------------------------------------------

  CREATE TABLE "LOGMNRC_TSPART" SHARING=METADATA ("LOGMNR_UID" NUMBER, "OBJ#" NUMBER, "TS#" NUMBER, "START_SCN" NUMBER, "DROP_SCN" NUMBER, "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" VARCHAR2(4000))
--------------------------------------------------------
--  DDL for Table LOGMNRGGC_GTCS
--------------------------------------------------------

  CREATE TABLE "LOGMNRGGC_GTCS" SHARING=METADATA ("LOGMNR_UID" NUMBER, "OBJ#" NUMBER, "OBJV#" NUMBER, "SEGCOL#" NUMBER, "INTCOL#" NUMBER, "COLNAME" VARCHAR2(384), "TYPE#" NUMBER, "LENGTH" NUMBER, "PRECISION" NUMBER, "SCALE" NUMBER, "INTERVAL_LEADING_PRECISION" NUMBER, "INTERVAL_TRAILING_PRECISION" NUMBER, "PROPERTY" NUMBER, "TOID" RAW(16), "CHARSETID" NUMBER, "CHARSETFORM" NUMBER, "TYPENAME" VARCHAR2(384), "FQCOLNAME" VARCHAR2(4000), "NUMINTCOLS" NUMBER, "NUMATTRS" NUMBER, "ADTORDER" NUMBER, "LOGMNR_SPARE1" NUMBER, "LOGMNR_SPARE2" NUMBER, "LOGMNR_SPARE3" VARCHAR2(1000), "LOGMNR_SPARE4" DATE, "LOGMNR_SPARE5" NUMBER, "LOGMNR_SPARE6" NUMBER, "LOGMNR_SPARE7" NUMBER, "LOGMNR_SPARE8" NUMBER, "LOGMNR_SPARE9" NUMBER, "COL#" NUMBER, "XTYPESCHEMANAME" VARCHAR2(384), "XTYPENAME" VARCHAR2(4000), "XFQCOLNAME" VARCHAR2(4000), "XTOPINTCOL" NUMBER, "XREFFEDTABLEOBJN" NUMBER, "XREFFEDTABLEOBJV" NUMBER, "XCOLTYPEFLAGS" NUMBER, "XOPQTYPETYPE" NUMBER, "XOPQTYPEFLAGS" NUMBER, "XOPQLOBINTCOL" NUMBER, "XOPQOBJINTCOL" NUMBER, "XXMLINTCOL" NUMBER, "EAOWNER#" NUMBER, "EAMKEYID" VARCHAR2(192), "EAENCALG" NUMBER, "EAINTALG" NUMBER, "EACOLKLC" RAW(2000), "EAKLCLEN" NUMBER, "EAFLAGS" NUMBER, "LOGMNRDERIVEDFLAGS" NUMBER, "COLLID" NUMBER, "COLLINTCOL#" NUMBER, "ACDRRESCOL#" NUMBER)
--------------------------------------------------------
--  DDL for Table LOGMNRGGC_GTLO
--------------------------------------------------------

  CREATE TABLE "LOGMNRGGC_GTLO" SHARING=METADATA ("LOGMNR_UID" NUMBER, "KEYOBJ#" NUMBER, "LVLCNT" NUMBER, "BASEOBJ#" NUMBER, "BASEOBJV#" NUMBER, "LVL1OBJ#" NUMBER, "LVL2OBJ#" NUMBER, "LVL0TYPE#" NUMBER, "LVL1TYPE#" NUMBER, "LVL2TYPE#" NUMBER, "OWNER#" NUMBER, "OWNERNAME" VARCHAR2(384), "LVL0NAME" VARCHAR2(384), "LVL1NAME" VARCHAR2(384), "LVL2NAME" VARCHAR2(384), "INTCOLS" NUMBER, "COLS" NUMBER, "KERNELCOLS" NUMBER, "TAB_FLAGS" NUMBER, "TRIGFLAG" NUMBER, "ASSOC#" NUMBER, "OBJ_FLAGS" NUMBER, "TS#" NUMBER, "TSNAME" VARCHAR2(90), "PROPERTY" NUMBER, "START_SCN" NUMBER, "DROP_SCN" NUMBER, "XIDUSN" NUMBER, "XIDSLT" NUMBER, "XIDSQN" NUMBER, "FLAGS" NUMBER, "LOGMNR_SPARE1" NUMBER, "LOGMNR_SPARE2" NUMBER, "LOGMNR_SPARE3" VARCHAR2(1000), "LOGMNR_SPARE4" DATE, "LOGMNR_SPARE5" NUMBER, "LOGMNR_SPARE6" NUMBER, "LOGMNR_SPARE7" NUMBER, "LOGMNR_SPARE8" NUMBER, "LOGMNR_SPARE9" NUMBER, "PARTTYPE" NUMBER, "SUBPARTTYPE" NUMBER, "UNSUPPORTEDCOLS" NUMBER, "COMPLEXTYPECOLS" NUMBER, "NTPARENTOBJNUM" NUMBER, "NTPARENTOBJVERSION" NUMBER, "NTPARENTINTCOLNUM" NUMBER, "LOGMNRTLOFLAGS" NUMBER, "LOGMNRMCV" VARCHAR2(30), "ACDRFLAGS" NUMBER, "ACDRTSOBJ#" NUMBER, "ACDRROWTSINTCOL#" NUMBER)
--------------------------------------------------------
--  DDL for Table LOGMNRP_CTAS_PART_MAP
--------------------------------------------------------

  CREATE TABLE "LOGMNRP_CTAS_PART_MAP" SHARING=METADATA ("LOGMNR_UID" NUMBER, "BASEOBJ#" NUMBER, "BASEOBJV#" NUMBER, "KEYOBJ#" NUMBER, "PART#" NUMBER, "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" VARCHAR2(1000))
--------------------------------------------------------
--  DDL for Table LOGMNRT_MDDL$
--------------------------------------------------------

  CREATE GLOBAL TEMPORARY TABLE "LOGMNRT_MDDL$" SHARING=METADATA ("SOURCE_OBJ#" NUMBER, "SOURCE_ROWID" ROWID, "DEST_ROWID" ROWID) ON COMMIT DELETE ROWS
--------------------------------------------------------
--  DDL for Table LOGMNR_AGE_SPILL$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_AGE_SPILL$" SHARING=METADATA ("SESSION#" NUMBER, "XIDUSN" NUMBER, "XIDSLT" NUMBER, "XIDSQN" NUMBER, "CHUNK" NUMBER, "SEQUENCE#" NUMBER, "OFFSET" NUMBER, "SPILL_DATA" BLOB, "SPARE1" NUMBER, "SPARE2" NUMBER, "PDBID" NUMBER)
--------------------------------------------------------
--  DDL for Table LOGMNR_ATTRCOL$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_ATTRCOL$" SHARING=METADATA ("INTCOL#" NUMBER, "NAME" VARCHAR2(4000), "OBJ#" NUMBER, "LOGMNR_UID" NUMBER(22,0), "LOGMNR_FLAGS" NUMBER(22,0))
--------------------------------------------------------
--  DDL for Table LOGMNR_ATTRIBUTE$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_ATTRIBUTE$" SHARING=METADATA ("VERSION#" NUMBER, "NAME" VARCHAR2(384), "ATTRIBUTE#" NUMBER, "ATTR_TOID" RAW(16), "ATTR_VERSION#" NUMBER, "SYNOBJ#" NUMBER, "PROPERTIES" NUMBER, "CHARSETID" NUMBER, "CHARSETFORM" NUMBER, "LENGTH" NUMBER, "PRECISION#" NUMBER, "SCALE" NUMBER, "EXTERNNAME" VARCHAR2(4000), "XFLAGS" NUMBER, "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" NUMBER, "SPARE4" NUMBER, "SPARE5" NUMBER, "SETTER" NUMBER, "GETTER" NUMBER, "TOID" RAW(16), "LOGMNR_UID" NUMBER(22,0), "LOGMNR_FLAGS" NUMBER(22,0))
--------------------------------------------------------
--  DDL for Table LOGMNR_CCOL$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_CCOL$" SHARING=METADATA ("CON#" NUMBER, "OBJ#" NUMBER, "COL#" NUMBER, "POS#" NUMBER, "INTCOL#" NUMBER, "LOGMNR_UID" NUMBER(22,0), "LOGMNR_FLAGS" NUMBER(22,0))
--------------------------------------------------------
--  DDL for Table LOGMNR_CDEF$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_CDEF$" SHARING=METADATA ("CON#" NUMBER, "COLS" NUMBER, "TYPE#" NUMBER, "ROBJ#" NUMBER, "RCON#" NUMBER, "ENABLED" NUMBER, "DEFER" NUMBER, "OBJ#" NUMBER, "LOGMNR_UID" NUMBER(22,0), "LOGMNR_FLAGS" NUMBER(22,0))
--------------------------------------------------------
--  DDL for Table LOGMNR_COL$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_COL$" SHARING=METADATA ("COL#" NUMBER(22,0), "SEGCOL#" NUMBER(22,0), "NAME" VARCHAR2(384), "TYPE#" NUMBER(22,0), "LENGTH" NUMBER(22,0), "PRECISION#" NUMBER(22,0), "SCALE" NUMBER(22,0), "NULL$" NUMBER(22,0), "INTCOL#" NUMBER(22,0), "PROPERTY" NUMBER(22,0), "CHARSETID" NUMBER(22,0), "CHARSETFORM" NUMBER(22,0), "SPARE1" NUMBER(22,0), "SPARE2" NUMBER(22,0), "OBJ#" NUMBER(22,0), "LOGMNR_UID" NUMBER(22,0), "LOGMNR_FLAGS" NUMBER(22,0), "COLLID" NUMBER, "COLLINTCOL#" NUMBER, "ACDRRESCOL#" NUMBER)
--------------------------------------------------------
--  DDL for Table LOGMNR_COLTYPE$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_COLTYPE$" SHARING=METADATA ("COL#" NUMBER, "INTCOL#" NUMBER, "TOID" RAW(16), "VERSION#" NUMBER, "PACKED" NUMBER, "INTCOLS" NUMBER, "INTCOL#S" RAW(2000), "FLAGS" NUMBER, "TYPIDCOL#" NUMBER, "SYNOBJ#" NUMBER, "OBJ#" NUMBER, "LOGMNR_UID" NUMBER(22,0), "LOGMNR_FLAGS" NUMBER(22,0))
--------------------------------------------------------
--  DDL for Table LOGMNR_CON$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_CON$" SHARING=METADATA ("OWNER#" NUMBER, "NAME" VARCHAR2(384), "CON#" NUMBER, "LOGMNR_UID" NUMBER(22,0), "LOGMNR_FLAGS" NUMBER(22,0), "START_SCNBAS" NUMBER, "START_SCNWRP" NUMBER)
--------------------------------------------------------
--  DDL for Table LOGMNR_CONTAINER$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_CONTAINER$" SHARING=METADATA ("OBJ#" NUMBER, "CON_ID#" NUMBER, "DBID" NUMBER, "CON_UID" NUMBER, "CREATE_SCNWRP" NUMBER, "CREATE_SCNBAS" NUMBER, "FLAGS" NUMBER, "STATUS" NUMBER, "LOGMNR_UID" NUMBER(22,0), "LOGMNR_FLAGS" NUMBER(22,0), "VSN" NUMBER, "FED_ROOT_CON_ID#" NUMBER)
--------------------------------------------------------
--  DDL for Table LOGMNR_DICTIONARY$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_DICTIONARY$" SHARING=METADATA ("DB_NAME" VARCHAR2(27), "DB_ID" NUMBER(20,0), "DB_CREATED" VARCHAR2(20), "DB_DICT_CREATED" VARCHAR2(20), "DB_DICT_SCN" NUMBER(22,0), "DB_THREAD_MAP" RAW(8), "DB_TXN_SCNBAS" NUMBER(22,0), "DB_TXN_SCNWRP" NUMBER(22,0), "DB_RESETLOGS_CHANGE#" NUMBER(22,0), "DB_RESETLOGS_TIME" VARCHAR2(20), "DB_VERSION_TIME" VARCHAR2(20), "DB_REDO_TYPE_ID" VARCHAR2(8), "DB_REDO_RELEASE" VARCHAR2(60), "DB_CHARACTER_SET" VARCHAR2(192), "DB_VERSION" VARCHAR2(240), "DB_STATUS" VARCHAR2(240), "DB_GLOBAL_NAME" VARCHAR2(384), "DB_DICT_MAXOBJECTS" NUMBER(22,0), "DB_DICT_OBJECTCOUNT" NUMBER(22,0), "LOGMNR_UID" NUMBER(22,0), "LOGMNR_FLAGS" NUMBER(22,0), "PDB_NAME" VARCHAR2(384), "PDB_ID" NUMBER, "PDB_UID" NUMBER, "PDB_DBID" NUMBER, "PDB_GUID" RAW(16), "PDB_CREATE_SCN" NUMBER, "PDB_COUNT" NUMBER, "PDB_GLOBAL_NAME" VARCHAR2(384), "FED_ROOT_CON_ID#" NUMBER)
--------------------------------------------------------
--  DDL for Table LOGMNR_DICTSTATE$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_DICTSTATE$" SHARING=METADATA ("LOGMNR_UID" NUMBER(22,0), "START_SCNBAS" NUMBER, "START_SCNWRP" NUMBER, "END_SCNBAS" NUMBER, "END_SCNWRP" NUMBER, "REDO_THREAD" NUMBER, "RBASQN" NUMBER, "RBABLK" NUMBER, "RBABYTE" NUMBER, "LOGMNR_FLAGS" NUMBER(22,0))
--------------------------------------------------------
--  DDL for Table LOGMNR_DID$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_DID$" SHARING=METADATA ("SESSION#" NUMBER, "LOGMNR_DID" NUMBER, "FLAGS" NUMBER DEFAULT 0, "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" VARCHAR2(4000), "SPARE4" TIMESTAMP (6))
--------------------------------------------------------
--  DDL for Table LOGMNR_ENC$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_ENC$" SHARING=METADATA ("OBJ#" NUMBER, "OWNER#" NUMBER, "ENCALG" NUMBER, "INTALG" NUMBER, "COLKLC" RAW(2000), "KLCLEN" NUMBER, "FLAG" NUMBER, "MKEYID" VARCHAR2(192), "LOGMNR_UID" NUMBER(22,0), "LOGMNR_FLAGS" NUMBER(22,0))
--------------------------------------------------------
--  DDL for Table LOGMNR_ERROR$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_ERROR$" SHARING=METADATA ("SESSION#" NUMBER, "TIME_OF_ERROR" DATE, "CODE" NUMBER, "MESSAGE" VARCHAR2(4000), "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" NUMBER, "SPARE4" VARCHAR2(4000), "SPARE5" VARCHAR2(4000))
--------------------------------------------------------
--  DDL for Table LOGMNR_FILTER$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_FILTER$" SHARING=METADATA ("SESSION#" NUMBER, "FILTER_TYPE" VARCHAR2(30), "ATTR1" NUMBER, "ATTR2" NUMBER, "ATTR3" NUMBER, "ATTR4" NUMBER, "ATTR5" NUMBER, "ATTR6" NUMBER, "FILTER_SCN" NUMBER, "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" DATE, "ATTR7" VARCHAR2(128), "ATTR8" VARCHAR2(128), "ATTR9" VARCHAR2(128), "ATTR10" VARCHAR2(128), "ATTR11" VARCHAR2(128))
--------------------------------------------------------
--  DDL for Table LOGMNR_GLOBAL$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_GLOBAL$" SHARING=METADATA ("HIGH_RECID_FOREIGN" NUMBER, "HIGH_RECID_DELETED" NUMBER, "LOCAL_RESET_SCN" NUMBER, "LOCAL_RESET_TIMESTAMP" NUMBER, "VERSION_TIMESTAMP" NUMBER, "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" NUMBER, "SPARE4" VARCHAR2(2000), "SPARE5" DATE, "SESSION#" NUMBER)
--------------------------------------------------------
--  DDL for Table LOGMNR_GT_TAB_INCLUDE$
--------------------------------------------------------

  CREATE GLOBAL TEMPORARY TABLE "LOGMNR_GT_TAB_INCLUDE$" SHARING=METADATA ("SCHEMA_NAME" VARCHAR2(390), "TABLE_NAME" VARCHAR2(390), "PDB_NAME" VARCHAR2(390), "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" VARCHAR2(4000)) ON COMMIT PRESERVE ROWS
--------------------------------------------------------
--  DDL for Table LOGMNR_GT_USER_INCLUDE$
--------------------------------------------------------

  CREATE GLOBAL TEMPORARY TABLE "LOGMNR_GT_USER_INCLUDE$" SHARING=METADATA ("USER_NAME" VARCHAR2(390), "USER_TYPE" NUMBER, "PDB_NAME" VARCHAR2(390), "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" VARCHAR2(4000)) ON COMMIT PRESERVE ROWS
--------------------------------------------------------
--  DDL for Table LOGMNR_GT_XID_INCLUDE$
--------------------------------------------------------

  CREATE GLOBAL TEMPORARY TABLE "LOGMNR_GT_XID_INCLUDE$" SHARING=METADATA ("XIDUSN" NUMBER, "XIDSLT" NUMBER, "XIDSQN" NUMBER, "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" VARCHAR2(4000), "PDBID" NUMBER, "PDB_NAME" VARCHAR2(390)) ON COMMIT PRESERVE ROWS
--------------------------------------------------------
--  DDL for Table LOGMNR_ICOL$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_ICOL$" SHARING=METADATA ("OBJ#" NUMBER, "BO#" NUMBER, "COL#" NUMBER, "POS#" NUMBER, "SEGCOL#" NUMBER, "INTCOL#" NUMBER, "LOGMNR_UID" NUMBER(22,0), "LOGMNR_FLAGS" NUMBER(22,0))
--------------------------------------------------------
--  DDL for Table LOGMNR_IDNSEQ$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_IDNSEQ$" SHARING=METADATA ("OBJ#" NUMBER, "INTCOL#" NUMBER, "SEQOBJ#" NUMBER, "STARTWITH" NUMBER, "LOGMNR_UID" NUMBER(22,0), "LOGMNR_FLAGS" NUMBER(22,0))
--------------------------------------------------------
--  DDL for Table LOGMNR_IND$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_IND$" SHARING=METADATA ("BO#" NUMBER(22,0), "COLS" NUMBER(22,0), "TYPE#" NUMBER(22,0), "FLAGS" NUMBER, "PROPERTY" NUMBER, "OBJ#" NUMBER(22,0), "LOGMNR_UID" NUMBER(22,0), "LOGMNR_FLAGS" NUMBER(22,0))
--------------------------------------------------------
--  DDL for Table LOGMNR_INDCOMPART$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_INDCOMPART$" SHARING=METADATA ("OBJ#" NUMBER, "DATAOBJ#" NUMBER, "BO#" NUMBER, "PART#" NUMBER, "LOGMNR_UID" NUMBER(22,0), "LOGMNR_FLAGS" NUMBER(22,0))
--------------------------------------------------------
--  DDL for Table LOGMNR_INDPART$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_INDPART$" SHARING=METADATA ("OBJ#" NUMBER, "BO#" NUMBER, "PART#" NUMBER, "TS#" NUMBER, "LOGMNR_UID" NUMBER(22,0), "LOGMNR_FLAGS" NUMBER(22,0))
--------------------------------------------------------
--  DDL for Table LOGMNR_INDSUBPART$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_INDSUBPART$" SHARING=METADATA ("OBJ#" NUMBER(22,0), "DATAOBJ#" NUMBER(22,0), "POBJ#" NUMBER(22,0), "SUBPART#" NUMBER(22,0), "TS#" NUMBER(22,0), "LOGMNR_UID" NUMBER(22,0), "LOGMNR_FLAGS" NUMBER(22,0))
--------------------------------------------------------
--  DDL for Table LOGMNR_KOPM$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_KOPM$" SHARING=METADATA ("LENGTH" NUMBER, "METADATA" RAW(255), "NAME" VARCHAR2(384), "LOGMNR_UID" NUMBER(22,0), "LOGMNR_FLAGS" NUMBER(22,0))
--------------------------------------------------------
--  DDL for Table LOGMNR_LOB$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_LOB$" SHARING=METADATA ("OBJ#" NUMBER, "INTCOL#" NUMBER, "COL#" NUMBER, "LOBJ#" NUMBER, "CHUNK" NUMBER, "LOGMNR_UID" NUMBER(22,0), "LOGMNR_FLAGS" NUMBER(22,0))
--------------------------------------------------------
--  DDL for Table LOGMNR_LOBFRAG$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_LOBFRAG$" SHARING=METADATA ("FRAGOBJ#" NUMBER, "PARENTOBJ#" NUMBER, "TABFRAGOBJ#" NUMBER, "INDFRAGOBJ#" NUMBER, "FRAG#" NUMBER, "LOGMNR_UID" NUMBER(22,0), "LOGMNR_FLAGS" NUMBER(22,0))
--------------------------------------------------------
--  DDL for Table LOGMNR_LOG$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_LOG$" SHARING=METADATA ("SESSION#" NUMBER, "THREAD#" NUMBER, "SEQUENCE#" NUMBER, "FIRST_CHANGE#" NUMBER, "NEXT_CHANGE#" NUMBER, "FIRST_TIME" DATE, "NEXT_TIME" DATE, "FILE_NAME" VARCHAR2(513), "STATUS" NUMBER, "INFO" VARCHAR2(32), "TIMESTAMP" DATE, "DICT_BEGIN" VARCHAR2(3), "DICT_END" VARCHAR2(3), "STATUS_INFO" VARCHAR2(32), "DB_ID" NUMBER, "RESETLOGS_CHANGE#" NUMBER, "RESET_TIMESTAMP" NUMBER, "PREV_RESETLOGS_CHANGE#" NUMBER, "PREV_RESET_TIMESTAMP" NUMBER, "BLOCKS" NUMBER, "BLOCK_SIZE" NUMBER, "FLAGS" NUMBER, "CONTENTS" NUMBER, "RECID" NUMBER, "RECSTAMP" NUMBER, "MARK_DELETE_TIMESTAMP" NUMBER, "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" NUMBER, "SPARE4" NUMBER, "SPARE5" NUMBER)
--------------------------------------------------------
--  DDL for Table LOGMNR_LOGMNR_BUILDLOG
--------------------------------------------------------

  CREATE TABLE "LOGMNR_LOGMNR_BUILDLOG" SHARING=METADATA ("BUILD_DATE" VARCHAR2(20), "DB_TXN_SCNBAS" NUMBER, "DB_TXN_SCNWRP" NUMBER, "CURRENT_BUILD_STATE" NUMBER, "COMPLETION_STATUS" NUMBER, "MARKED_LOG_FILE_LOW_SCN" NUMBER, "INITIAL_XID" VARCHAR2(22), "LOGMNR_UID" NUMBER(22,0), "LOGMNR_FLAGS" NUMBER(22,0), "CDB_XID" VARCHAR2(22), "SPARE1" NUMBER, "SPARE2" VARCHAR2(4000))
--------------------------------------------------------
--  DDL for Table LOGMNR_NTAB$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_NTAB$" SHARING=METADATA ("COL#" NUMBER, "INTCOL#" NUMBER, "NTAB#" NUMBER, "NAME" VARCHAR2(4000), "OBJ#" NUMBER, "LOGMNR_UID" NUMBER(22,0), "LOGMNR_FLAGS" NUMBER(22,0))
--------------------------------------------------------
--  DDL for Table LOGMNR_OBJ$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_OBJ$" SHARING=METADATA ("OBJV#" NUMBER(22,0), "OWNER#" NUMBER(22,0), "NAME" VARCHAR2(384), "NAMESPACE" NUMBER(22,0), "SUBNAME" VARCHAR2(384), "TYPE#" NUMBER(22,0), "OID$" RAW(16), "REMOTEOWNER" VARCHAR2(384), "LINKNAME" VARCHAR2(384), "FLAGS" NUMBER(22,0), "SPARE3" NUMBER(22,0), "STIME" DATE, "OBJ#" NUMBER(22,0), "LOGMNR_UID" NUMBER(22,0), "LOGMNR_FLAGS" NUMBER(22,0), "START_SCNBAS" NUMBER, "START_SCNWRP" NUMBER)
--------------------------------------------------------
--  DDL for Table LOGMNR_OPQTYPE$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_OPQTYPE$" SHARING=METADATA ("INTCOL#" NUMBER, "TYPE" NUMBER, "FLAGS" NUMBER, "LOBCOL" NUMBER, "OBJCOL" NUMBER, "EXTRACOL" NUMBER, "SCHEMAOID" RAW(16), "ELEMNUM" NUMBER, "SCHEMAURL" VARCHAR2(4000), "OBJ#" NUMBER, "LOGMNR_UID" NUMBER(22,0), "LOGMNR_FLAGS" NUMBER(22,0))
--------------------------------------------------------
--  DDL for Table LOGMNR_PARAMETER$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_PARAMETER$" SHARING=METADATA ("SESSION#" NUMBER, "NAME" VARCHAR2(384), "VALUE" VARCHAR2(2000), "TYPE" NUMBER, "SCN" NUMBER, "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" VARCHAR2(2000))
--------------------------------------------------------
--  DDL for Table LOGMNR_PARTOBJ$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_PARTOBJ$" SHARING=METADATA ("PARTTYPE" NUMBER, "PARTCNT" NUMBER, "PARTKEYCOLS" NUMBER, "FLAGS" NUMBER, "DEFTS#" NUMBER, "DEFPCTFREE" NUMBER, "DEFPCTUSED" NUMBER, "DEFPCTTHRES" NUMBER, "DEFINITRANS" NUMBER, "DEFMAXTRANS" NUMBER, "DEFTINIEXTS" NUMBER, "DEFEXTSIZE" NUMBER, "DEFMINEXTS" NUMBER, "DEFMAXEXTS" NUMBER, "DEFEXTPCT" NUMBER, "DEFLISTS" NUMBER, "DEFGROUPS" NUMBER, "DEFLOGGING" NUMBER, "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" NUMBER, "DEFINCLCOL" NUMBER, "PARAMETERS" VARCHAR2(3000), "OBJ#" NUMBER, "LOGMNR_UID" NUMBER(22,0), "LOGMNR_FLAGS" NUMBER(22,0))
--------------------------------------------------------
--  DDL for Table LOGMNR_PDB_INFO$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_PDB_INFO$" SHARING=METADATA ("LOGMNR_DID" NUMBER, "LOGMNR_MDH" NUMBER, "PDB_NAME" VARCHAR2(384), "PDB_ID" NUMBER, "PDB_UID" NUMBER, "PLUGIN_SCN" NUMBER, "UNPLUG_SCN" NUMBER, "FLAGS" NUMBER, "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" VARCHAR2(4000), "SPARE4" TIMESTAMP (6), "PDB_GLOBAL_NAME" VARCHAR2(384))
--------------------------------------------------------
--  DDL for Table LOGMNR_PROCESSED_LOG$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_PROCESSED_LOG$" SHARING=METADATA ("SESSION#" NUMBER, "THREAD#" NUMBER, "SEQUENCE#" NUMBER, "FIRST_CHANGE#" NUMBER, "NEXT_CHANGE#" NUMBER, "FIRST_TIME" DATE, "NEXT_TIME" DATE, "FILE_NAME" VARCHAR2(513), "STATUS" NUMBER, "INFO" VARCHAR2(32), "TIMESTAMP" DATE)
--------------------------------------------------------
--  DDL for Table LOGMNR_PROFILE_PLSQL_STATS$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_PROFILE_PLSQL_STATS$" SHARING=METADATA ("PKGOWNER" VARCHAR2(384), "PKGNAME" VARCHAR2(384), "NAME" NUMBER, "PRAGMAOP" NUMBER, "OPNUM" NUMBER, "TLSBYUNSUPPOPNUM" NUMBER, "OGGUNSUPPOPNUM" NUMBER, "REDOSIZE" NUMBER, "REDORATE" NUMBER, "SPARE1" VARCHAR2(384), "SPARE2" VARCHAR2(384), "SPARE3" NUMBER, "SPARE4" NUMBER, "SPARE5" NUMBER, "SPARE6" NUMBER)
--------------------------------------------------------
--  DDL for Table LOGMNR_PROFILE_TABLE_STATS$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_PROFILE_TABLE_STATS$" SHARING=METADATA ("OWNER" VARCHAR2(384), "NAME" VARCHAR2(384), "OBJID" NUMBER, "OPNUM" NUMBER, "TLSBYUNSUPPOPNUM" NUMBER, "OGGUNSUPPOPNUM" NUMBER, "OGGFETCHOPNUM" NUMBER, "OGGPLSQLOPNUM" NUMBER, "PARTNUM" NUMBER, "INSERTNUM" NUMBER, "UPDATENUM" NUMBER, "DELETENUM" NUMBER, "DDLNUM" NUMBER, "PROPERTY1" NUMBER, "PROPERTY2" NUMBER, "PARTITIONATTR" NUMBER, "REDOSIZE" NUMBER, "MAXLOBSIZE" NUMBER, "REDORATE" NUMBER, "SPARE1" VARCHAR2(384), "SPARE2" VARCHAR2(384), "SPARE3" NUMBER, "SPARE4" NUMBER, "SPARE5" NUMBER, "SPARE6" NUMBER)
--------------------------------------------------------
--  DDL for Table LOGMNR_PROPS$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_PROPS$" SHARING=METADATA ("VALUE$" VARCHAR2(4000), "COMMENT$" VARCHAR2(4000), "NAME" VARCHAR2(384), "LOGMNR_UID" NUMBER(22,0), "LOGMNR_FLAGS" NUMBER(22,0))
--------------------------------------------------------
--  DDL for Table LOGMNR_REFCON$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_REFCON$" SHARING=METADATA ("COL#" NUMBER, "INTCOL#" NUMBER, "REFTYP" NUMBER, "STABID" RAW(16), "EXPCTOID" RAW(16), "OBJ#" NUMBER, "LOGMNR_UID" NUMBER(22,0), "LOGMNR_FLAGS" NUMBER(22,0))
--------------------------------------------------------
--  DDL for Table LOGMNR_RESTART_CKPT$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_RESTART_CKPT$" SHARING=METADATA ("SESSION#" NUMBER, "VALID" NUMBER, "CKPT_SCN" NUMBER, "XIDUSN" NUMBER, "XIDSLT" NUMBER, "XIDSQN" NUMBER, "SESSION_NUM" NUMBER, "SERIAL_NUM" NUMBER, "CKPT_INFO" BLOB, "FLAG" NUMBER, "OFFSET" NUMBER, "CLIENT_DATA" BLOB, "SPARE1" NUMBER, "SPARE2" NUMBER, "PDBID" NUMBER)
--------------------------------------------------------
--  DDL for Table LOGMNR_RESTART_CKPT_TXINFO$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_RESTART_CKPT_TXINFO$" SHARING=METADATA ("SESSION#" NUMBER, "XIDUSN" NUMBER, "XIDSLT" NUMBER, "XIDSQN" NUMBER, "SESSION_NUM" NUMBER, "SERIAL_NUM" NUMBER, "FLAG" NUMBER, "START_SCN" NUMBER, "EFFECTIVE_SCN" NUMBER, "OFFSET" NUMBER, "TX_DATA" BLOB)
--------------------------------------------------------
--  DDL for Table LOGMNR_SEED$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_SEED$" SHARING=METADATA ("SEED_VERSION" NUMBER(22,0), "GATHER_VERSION" NUMBER(22,0), "SCHEMANAME" VARCHAR2(384), "OBJ#" NUMBER, "OBJV#" NUMBER(22,0), "TABLE_NAME" VARCHAR2(384), "COL_NAME" VARCHAR2(384), "COL#" NUMBER, "INTCOL#" NUMBER, "SEGCOL#" NUMBER, "TYPE#" NUMBER, "LENGTH" NUMBER, "PRECISION#" NUMBER, "SCALE" NUMBER, "NULL$" NUMBER, "LOGMNR_UID" NUMBER(22,0), "LOGMNR_FLAGS" NUMBER(22,0))
--------------------------------------------------------
--  DDL for Table LOGMNR_SESSION$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_SESSION$" SHARING=METADATA ("SESSION#" NUMBER, "CLIENT#" NUMBER, "SESSION_NAME" VARCHAR2(128), "DB_ID" NUMBER, "RESETLOGS_CHANGE#" NUMBER, "SESSION_ATTR" NUMBER, "SESSION_ATTR_VERBOSE" VARCHAR2(400), "START_SCN" NUMBER, "END_SCN" NUMBER, "SPILL_SCN" NUMBER, "SPILL_TIME" DATE, "OLDEST_SCN" NUMBER, "RESUME_SCN" NUMBER, "GLOBAL_DB_NAME" VARCHAR2(384) DEFAULT null, "RESET_TIMESTAMP" NUMBER, "BRANCH_SCN" NUMBER, "VERSION" VARCHAR2(64), "REDO_COMPAT" VARCHAR2(20), "SPARE1" NUMBER, "PURGE_SCN" NUMBER, "SPARE3" NUMBER, "SPARE4" NUMBER, "SPARE5" NUMBER, "SPARE6" DATE, "SPARE7" VARCHAR2(1000), "SPARE8" VARCHAR2(1000), "SPARE9" NUMBER)
--------------------------------------------------------
--  DDL for Table LOGMNR_SESSION_ACTIONS$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_SESSION_ACTIONS$" SHARING=METADATA ("FLAGSRUNTIME" NUMBER DEFAULT 0, "DROPSCN" NUMBER, "MODIFYTIME" TIMESTAMP (6), "DISPATCHTIME" TIMESTAMP (6), "DROPTIME" TIMESTAMP (6), "LCRCOUNT" NUMBER DEFAULT 0, "ACTIONNAME" VARCHAR2(30), "LOGMNRSESSION#" NUMBER, "PROCESSROLE#" NUMBER, "ACTIONTYPE#" NUMBER, "FLAGSDEFINETIME" NUMBER, "CREATETIME" TIMESTAMP (6), "XIDUSN" NUMBER, "XIDSLT" NUMBER, "XIDSQN" NUMBER, "THREAD#" NUMBER, "STARTSCN" NUMBER, "STARTSUBSCN" NUMBER, "ENDSCN" NUMBER, "ENDSUBSCN" NUMBER, "RBASQN" NUMBER, "RBABLK" NUMBER, "RBABYTE" NUMBER, "SESSION#" NUMBER, "OBJ#" NUMBER, "ATTR1" NUMBER, "ATTR2" NUMBER, "ATTR3" NUMBER, "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" TIMESTAMP (6), "SPARE4" VARCHAR2(2000), "PDBID" NUMBER, "PDB_NAME" VARCHAR2(390))
--------------------------------------------------------
--  DDL for Table LOGMNR_SESSION_EVOLVE$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_SESSION_EVOLVE$" SHARING=METADATA ("BRANCH_LEVEL" NUMBER, "SESSION#" NUMBER, "DB_ID" NUMBER, "RESET_SCN" NUMBER, "RESET_TIMESTAMP" NUMBER, "PREV_RESET_SCN" NUMBER, "PREV_RESET_TIMESTAMP" NUMBER, "STATUS" NUMBER, "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" NUMBER, "SPARE4" DATE)
--------------------------------------------------------
--  DDL for Table LOGMNR_SHARD_TS
--------------------------------------------------------

  CREATE TABLE "LOGMNR_SHARD_TS" SHARING=METADATA ("LOGMNR_UID" NUMBER, "TABLESPACE_NAME" VARCHAR2(90), "CHUNK_NUMBER" NUMBER, "START_SCNBAS" NUMBER, "START_SCNWRP" NUMBER)
--------------------------------------------------------
--  DDL for Table LOGMNR_SPILL$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_SPILL$" SHARING=METADATA ("SESSION#" NUMBER, "XIDUSN" NUMBER, "XIDSLT" NUMBER, "XIDSQN" NUMBER, "CHUNK" NUMBER, "STARTIDX" NUMBER, "ENDIDX" NUMBER, "FLAG" NUMBER, "SEQUENCE#" NUMBER, "SPILL_DATA" BLOB, "SPARE1" NUMBER, "SPARE2" NUMBER, "PDBID" NUMBER)
--------------------------------------------------------
--  DDL for Table LOGMNR_SUBCOLTYPE$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_SUBCOLTYPE$" SHARING=METADATA ("INTCOL#" NUMBER, "TOID" RAW(16), "VERSION#" NUMBER, "INTCOLS" NUMBER, "INTCOL#S" RAW(2000), "FLAGS" NUMBER, "SYNOBJ#" NUMBER, "OBJ#" NUMBER, "LOGMNR_UID" NUMBER(22,0), "LOGMNR_FLAGS" NUMBER(22,0))
--------------------------------------------------------
--  DDL for Table LOGMNR_TAB$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_TAB$" SHARING=METADATA ("TS#" NUMBER(22,0), "COLS" NUMBER(22,0), "PROPERTY" NUMBER, "INTCOLS" NUMBER(22,0), "KERNELCOLS" NUMBER(22,0), "BOBJ#" NUMBER(22,0), "TRIGFLAG" NUMBER(22,0), "FLAGS" NUMBER(22,0), "OBJ#" NUMBER(22,0), "LOGMNR_UID" NUMBER(22,0), "LOGMNR_FLAGS" NUMBER(22,0), "ACDRFLAGS" NUMBER, "ACDRTSOBJ#" NUMBER, "ACDRROWTSINTCOL#" NUMBER)
--------------------------------------------------------
--  DDL for Table LOGMNR_TABCOMPART$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_TABCOMPART$" SHARING=METADATA ("OBJ#" NUMBER(22,0), "BO#" NUMBER(22,0), "PART#" NUMBER(22,0), "LOGMNR_UID" NUMBER(22,0), "LOGMNR_FLAGS" NUMBER(22,0))
--------------------------------------------------------
--  DDL for Table LOGMNR_TABPART$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_TABPART$" SHARING=METADATA ("OBJ#" NUMBER(22,0), "TS#" NUMBER(22,0), "PART#" NUMBER, "BO#" NUMBER(22,0), "LOGMNR_UID" NUMBER(22,0), "LOGMNR_FLAGS" NUMBER(22,0))
--------------------------------------------------------
--  DDL for Table LOGMNR_TABSUBPART$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_TABSUBPART$" SHARING=METADATA ("OBJ#" NUMBER(22,0), "DATAOBJ#" NUMBER(22,0), "POBJ#" NUMBER(22,0), "SUBPART#" NUMBER(22,0), "TS#" NUMBER(22,0), "LOGMNR_UID" NUMBER(22,0), "LOGMNR_FLAGS" NUMBER(22,0))
--------------------------------------------------------
--  DDL for Table LOGMNR_TS$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_TS$" SHARING=METADATA ("TS#" NUMBER(22,0), "NAME" VARCHAR2(90), "OWNER#" NUMBER(22,0), "BLOCKSIZE" NUMBER(22,0), "LOGMNR_UID" NUMBER(22,0), "LOGMNR_FLAGS" NUMBER(22,0), "START_SCNBAS" NUMBER, "START_SCNWRP" NUMBER)
--------------------------------------------------------
--  DDL for Table LOGMNR_TYPE$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_TYPE$" SHARING=METADATA ("VERSION#" NUMBER, "VERSION" VARCHAR2(384), "TVOID" RAW(16), "TYPECODE" NUMBER, "PROPERTIES" NUMBER, "ATTRIBUTES" NUMBER, "METHODS" NUMBER, "HIDDENMETHODS" NUMBER, "SUPERTYPES" NUMBER, "SUBTYPES" NUMBER, "EXTERNTYPE" NUMBER, "EXTERNNAME" VARCHAR2(4000), "HELPERCLASSNAME" VARCHAR2(4000), "LOCAL_ATTRS" NUMBER, "LOCAL_METHODS" NUMBER, "TYPEID" RAW(16), "ROOTTOID" RAW(16), "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" NUMBER, "SUPERTOID" RAW(16), "HASHCODE" RAW(17), "TOID" RAW(16), "LOGMNR_UID" NUMBER(22,0), "LOGMNR_FLAGS" NUMBER(22,0))
--------------------------------------------------------
--  DDL for Table LOGMNR_UID$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_UID$" SHARING=METADATA ("LOGMNR_UID" NUMBER(22,0), "LOGMNR_DID" NUMBER, "LOGMNR_MDH" NUMBER, "PDB_NAME" VARCHAR2(384), "PDB_ID" NUMBER, "PDB_UID" NUMBER, "START_SCN" NUMBER, "END_SCN" NUMBER, "FLAGS" NUMBER, "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" VARCHAR2(4000), "SPARE4" TIMESTAMP (6))
--------------------------------------------------------
--  DDL for Table LOGMNR_USER$
--------------------------------------------------------

  CREATE TABLE "LOGMNR_USER$" SHARING=METADATA ("USER#" NUMBER(22,0), "NAME" VARCHAR2(384), "LOGMNR_UID" NUMBER(22,0), "LOGMNR_FLAGS" NUMBER(22,0))
--------------------------------------------------------
--  DDL for Table LOGSTDBY$APPLY_MILESTONE
--------------------------------------------------------

  CREATE TABLE "LOGSTDBY$APPLY_MILESTONE" SHARING=METADATA ("SESSION_ID" NUMBER, "COMMIT_SCN" NUMBER, "COMMIT_TIME" DATE, "SYNCH_SCN" NUMBER, "EPOCH" NUMBER, "PROCESSED_SCN" NUMBER, "PROCESSED_TIME" DATE, "FETCHLWM_SCN" NUMBER DEFAULT (0), "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" VARCHAR2(2000), "FLAGS" NUMBER, "LWM_UPD_TIME" DATE, "SPARE4" NUMBER, "SPARE5" NUMBER, "SPARE6" NUMBER, "SPARE7" DATE, "PTO_RECOVERY_SCN" NUMBER, "PTO_RECOVERY_INCARNATION" NUMBER)
--------------------------------------------------------
--  DDL for Table LOGSTDBY$APPLY_PROGRESS
--------------------------------------------------------

  CREATE TABLE "LOGSTDBY$APPLY_PROGRESS" SHARING=METADATA ("XIDUSN" NUMBER, "XIDSLT" NUMBER, "XIDSQN" NUMBER, "COMMIT_SCN" NUMBER, "COMMIT_TIME" DATE, "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" VARCHAR2(2000))
--------------------------------------------------------
--  DDL for Table LOGSTDBY$EDS_TABLES
--------------------------------------------------------

  CREATE TABLE "LOGSTDBY$EDS_TABLES" SHARING=METADATA ("OWNER" VARCHAR2(128), "TABLE_NAME" VARCHAR2(128), "SHADOW_TABLE_NAME" VARCHAR2(128), "BASE_TRIGGER_NAME" VARCHAR2(128), "SHADOW_TRIGGER_NAME" VARCHAR2(128), "DBLINK" VARCHAR2(255), "FLAGS" NUMBER, "STATE" VARCHAR2(255), "OBJV" NUMBER, "OBJ#" NUMBER, "SOBJ#" NUMBER, "CTIME" TIMESTAMP (6), "SPARE1" NUMBER, "SPARE2" VARCHAR2(255), "SPARE3" NUMBER, "MVIEW_NAME" VARCHAR2(128), "MVIEW_LOG_NAME" VARCHAR2(128), "MVIEW_TRIGGER_NAME" VARCHAR2(128))
--------------------------------------------------------
--  DDL for Table LOGSTDBY$EVENTS
--------------------------------------------------------

  CREATE TABLE "LOGSTDBY$EVENTS" SHARING=METADATA ("EVENT_TIME" TIMESTAMP (6), "CURRENT_SCN" NUMBER, "COMMIT_SCN" NUMBER, "XIDUSN" NUMBER, "XIDSLT" NUMBER, "XIDSQN" NUMBER, "ERRVAL" NUMBER, "EVENT" VARCHAR2(2000), "FULL_EVENT" CLOB, "ERROR" VARCHAR2(2000), "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" VARCHAR2(2000), "CON_NAME" VARCHAR2(30), "CON_ID" NUMBER)
--------------------------------------------------------
--  DDL for Table LOGSTDBY$FLASHBACK_SCN
--------------------------------------------------------

  CREATE TABLE "LOGSTDBY$FLASHBACK_SCN" SHARING=METADATA ("PRIMARY_SCN" NUMBER, "PRIMARY_TIME" DATE, "STANDBY_SCN" NUMBER, "STANDBY_TIME" DATE, "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" DATE)
--------------------------------------------------------
--  DDL for Table LOGSTDBY$HISTORY
--------------------------------------------------------

  CREATE TABLE "LOGSTDBY$HISTORY" SHARING=METADATA ("STREAM_SEQUENCE#" NUMBER, "LMNR_SID" NUMBER, "DBID" NUMBER, "FIRST_CHANGE#" NUMBER, "LAST_CHANGE#" NUMBER, "SOURCE" NUMBER, "STATUS" NUMBER, "FIRST_TIME" DATE, "LAST_TIME" DATE, "DGNAME" VARCHAR2(255), "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" VARCHAR2(2000))
--------------------------------------------------------
--  DDL for Table LOGSTDBY$PARAMETERS
--------------------------------------------------------

  CREATE TABLE "LOGSTDBY$PARAMETERS" SHARING=METADATA ("NAME" VARCHAR2(30), "VALUE" VARCHAR2(2000), "TYPE" NUMBER, "SCN" NUMBER, "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" VARCHAR2(2000))
--------------------------------------------------------
--  DDL for Table LOGSTDBY$PLSQL
--------------------------------------------------------

  CREATE TABLE "LOGSTDBY$PLSQL" SHARING=METADATA ("SESSION_ID" NUMBER, "START_FINISH" NUMBER, "CALL_TEXT" CLOB, "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" VARCHAR2(2000))
--------------------------------------------------------
--  DDL for Table LOGSTDBY$SCN
--------------------------------------------------------

  CREATE TABLE "LOGSTDBY$SCN" SHARING=METADATA ("OBJ#" NUMBER, "OBJNAME" VARCHAR2(4000), "SCHEMA" VARCHAR2(128), "TYPE" VARCHAR2(20), "SCN" NUMBER, "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" VARCHAR2(2000))
--------------------------------------------------------
--  DDL for Table LOGSTDBY$SKIP
--------------------------------------------------------

  CREATE TABLE "LOGSTDBY$SKIP" SHARING=METADATA ("ERROR" NUMBER, "STATEMENT_OPT" VARCHAR2(128), "SCHEMA" VARCHAR2(128), "NAME" VARCHAR2(261), "USE_LIKE" NUMBER, "ESC" VARCHAR2(1), "PROC" VARCHAR2(392), "ACTIVE" NUMBER, "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" VARCHAR2(2000))
--------------------------------------------------------
--  DDL for Table LOGSTDBY$SKIP_SUPPORT
--------------------------------------------------------

  CREATE TABLE "LOGSTDBY$SKIP_SUPPORT" SHARING=METADATA ("ACTION" NUMBER, "NAME" VARCHAR2(128), "NAME2" VARCHAR2(128), "NAME3" VARCHAR2(128), "NAME4" VARCHAR2(128), "NAME5" VARCHAR2(128), "REG" NUMBER(*,0), "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" VARCHAR2(2000))
--------------------------------------------------------
--  DDL for Table LOGSTDBY$SKIP_TRANSACTION
--------------------------------------------------------

  CREATE TABLE "LOGSTDBY$SKIP_TRANSACTION" SHARING=METADATA ("XIDUSN" NUMBER, "XIDSLT" NUMBER, "XIDSQN" NUMBER, "ACTIVE" NUMBER, "COMMIT_SCN" NUMBER, "SPARE2" NUMBER, "SPARE3" VARCHAR2(2000), "CON_NAME" VARCHAR2(384))
--------------------------------------------------------
--  DDL for Table MVIEW$_ADV_AJG
--------------------------------------------------------

  CREATE TABLE "MVIEW$_ADV_AJG" SHARING=METADATA ("AJGID#" NUMBER, "RUNID#" NUMBER, "AJGDESLEN" NUMBER, "AJGDES" LONG RAW, "HASHVALUE" NUMBER, "FREQUENCY" NUMBER) 

   COMMENT ON TABLE "MVIEW$_ADV_AJG"  IS 'Anchor-join graph representation'
--------------------------------------------------------
--  DDL for Table MVIEW$_ADV_BASETABLE
--------------------------------------------------------

  CREATE TABLE "MVIEW$_ADV_BASETABLE" SHARING=METADATA ("COLLECTIONID#" NUMBER, "QUERYID#" NUMBER, "OWNER" VARCHAR2(128), "TABLE_NAME" VARCHAR2(128), "TABLE_TYPE" NUMBER) 

   COMMENT ON TABLE "MVIEW$_ADV_BASETABLE"  IS 'Base tables refered by a query'
--------------------------------------------------------
--  DDL for Table MVIEW$_ADV_CLIQUE
--------------------------------------------------------

  CREATE TABLE "MVIEW$_ADV_CLIQUE" SHARING=METADATA ("CLIQUEID#" NUMBER, "RUNID#" NUMBER, "CLIQUEDESLEN" NUMBER, "CLIQUEDES" LONG RAW, "HASHVALUE" NUMBER, "FREQUENCY" NUMBER, "BYTECOST" NUMBER, "ROWSIZE" NUMBER, "NUMROWS" NUMBER) 

   COMMENT ON TABLE "MVIEW$_ADV_CLIQUE"  IS 'Table for storing canonical form of Clique queries'
--------------------------------------------------------
--  DDL for Table MVIEW$_ADV_ELIGIBLE
--------------------------------------------------------

  CREATE TABLE "MVIEW$_ADV_ELIGIBLE" SHARING=METADATA ("SUMOBJN#" NUMBER, "RUNID#" NUMBER, "BYTECOST" NUMBER, "FLAGS" NUMBER, "FREQUENCY" NUMBER) 

   COMMENT ON TABLE "MVIEW$_ADV_ELIGIBLE"  IS 'Summary management rewrite eligibility information'
--------------------------------------------------------
--  DDL for Table MVIEW$_ADV_EXCEPTIONS
--------------------------------------------------------

  CREATE TABLE "MVIEW$_ADV_EXCEPTIONS" SHARING=METADATA ("RUNID#" NUMBER, "OWNER" VARCHAR2(128), "TABLE_NAME" VARCHAR2(128), "DIMENSION_NAME" VARCHAR2(128), "RELATIONSHIP" VARCHAR2(11), "BAD_ROWID" ROWID) 

   COMMENT ON TABLE "MVIEW$_ADV_EXCEPTIONS"  IS 'Output table for dimension validations'
--------------------------------------------------------
--  DDL for Table MVIEW$_ADV_FILTER
--------------------------------------------------------

  CREATE TABLE "MVIEW$_ADV_FILTER" SHARING=METADATA ("FILTERID#" NUMBER, "SUBFILTERNUM#" NUMBER, "SUBFILTERTYPE" NUMBER, "STR_VALUE" VARCHAR2(1028), "NUM_VALUE1" NUMBER, "NUM_VALUE2" NUMBER, "DATE_VALUE1" DATE, "DATE_VALUE2" DATE) 

   COMMENT ON TABLE "MVIEW$_ADV_FILTER"  IS 'Table for workload filter definition'
--------------------------------------------------------
--  DDL for Table MVIEW$_ADV_FILTERINSTANCE
--------------------------------------------------------

  CREATE TABLE "MVIEW$_ADV_FILTERINSTANCE" SHARING=METADATA ("RUNID#" NUMBER, "FILTERID#" NUMBER, "SUBFILTERNUM#" NUMBER, "SUBFILTERTYPE" NUMBER, "STR_VALUE" VARCHAR2(1028), "NUM_VALUE1" NUMBER, "NUM_VALUE2" NUMBER, "DATE_VALUE1" DATE, "DATE_VALUE2" DATE) 

   COMMENT ON TABLE "MVIEW$_ADV_FILTERINSTANCE"  IS 'Table for workload filter instance definition'
--------------------------------------------------------
--  DDL for Table MVIEW$_ADV_FJG
--------------------------------------------------------

  CREATE TABLE "MVIEW$_ADV_FJG" SHARING=METADATA ("FJGID#" NUMBER, "AJGID#" NUMBER, "FJGDESLEN" NUMBER, "FJGDES" LONG RAW, "HASHVALUE" NUMBER, "FREQUENCY" NUMBER) 

   COMMENT ON TABLE "MVIEW$_ADV_FJG"  IS 'Representation for query join sub-graph not in AJG '
--------------------------------------------------------
--  DDL for Table MVIEW$_ADV_GC
--------------------------------------------------------

  CREATE TABLE "MVIEW$_ADV_GC" SHARING=METADATA ("GCID#" NUMBER, "FJGID#" NUMBER, "GCDESLEN" NUMBER, "GCDES" LONG RAW, "HASHVALUE" NUMBER, "FREQUENCY" NUMBER) 

   COMMENT ON TABLE "MVIEW$_ADV_GC"  IS 'Group-by columns of a query'
--------------------------------------------------------
--  DDL for Table MVIEW$_ADV_INFO
--------------------------------------------------------

  CREATE TABLE "MVIEW$_ADV_INFO" SHARING=METADATA ("RUNID#" NUMBER, "SEQ#" NUMBER, "TYPE" NUMBER, "INFOLEN" NUMBER, "INFO" LONG RAW, "STATUS" NUMBER, "FLAG" NUMBER) 

   COMMENT ON TABLE "MVIEW$_ADV_INFO"  IS 'Internal table for passing information from the SQL analyzer'
--------------------------------------------------------
--  DDL for Table MVIEW$_ADV_JOURNAL
--------------------------------------------------------

  CREATE TABLE "MVIEW$_ADV_JOURNAL" SHARING=METADATA ("RUNID#" NUMBER, "SEQ#" NUMBER, "TIMESTAMP" DATE, "FLAGS" NUMBER, "NUM" NUMBER, "TEXT" LONG, "TEXTLEN" NUMBER) 

   COMMENT ON TABLE "MVIEW$_ADV_JOURNAL"  IS 'Summary advisor journal table for debugging and information'
--------------------------------------------------------
--  DDL for Table MVIEW$_ADV_LEVEL
--------------------------------------------------------

  CREATE TABLE "MVIEW$_ADV_LEVEL" SHARING=METADATA ("RUNID#" NUMBER, "LEVELID#" NUMBER, "DIMOBJ#" NUMBER, "FLAGS" NUMBER, "TBLOBJ#" NUMBER, "COLUMNLIST" RAW(70), "LEVELNAME" VARCHAR2(128)) 

   COMMENT ON TABLE "MVIEW$_ADV_LEVEL"  IS 'Level definition'
--------------------------------------------------------
--  DDL for Table MVIEW$_ADV_LOG
--------------------------------------------------------

  CREATE TABLE "MVIEW$_ADV_LOG" SHARING=METADATA ("RUNID#" NUMBER, "FILTERID#" NUMBER, "RUN_BEGIN" DATE, "RUN_END" DATE, "RUN_TYPE" NUMBER, "UNAME" VARCHAR2(128), "STATUS" NUMBER, "MESSAGE" VARCHAR2(2000), "COMPLETED" NUMBER, "TOTAL" NUMBER, "ERROR_CODE" VARCHAR2(20)) 

   COMMENT ON TABLE "MVIEW$_ADV_LOG"  IS 'Log all calls to summary advisory functions'
--------------------------------------------------------
--  DDL for Table MVIEW$_ADV_OUTPUT
--------------------------------------------------------

  CREATE TABLE "MVIEW$_ADV_OUTPUT" SHARING=METADATA ("RUNID#" NUMBER, "OUTPUT_TYPE" NUMBER, "RANK#" NUMBER, "ACTION_TYPE" VARCHAR2(6), "SUMMARY_OWNER" VARCHAR2(128), "SUMMARY_NAME" VARCHAR2(128), "GROUP_BY_COLUMNS" VARCHAR2(2000), "WHERE_CLAUSE" VARCHAR2(2000), "FROM_CLAUSE" VARCHAR2(2000), "MEASURES_LIST" VARCHAR2(2000), "FACT_TABLES" VARCHAR2(1000), "GROUPING_LEVELS" VARCHAR2(2000), "QUERYLEN" NUMBER, "QUERY_TEXT" LONG, "STORAGE_IN_BYTES" NUMBER, "PCT_PERFORMANCE_GAIN" NUMBER, "FREQUENCY" NUMBER, "CUMULATIVE_BENEFIT" NUMBER, "BENEFIT_TO_COST_RATIO" NUMBER, "VALIDATED" NUMBER) 

   COMMENT ON TABLE "MVIEW$_ADV_OUTPUT"  IS 'Output table for summary recommendations and evaluations'
--------------------------------------------------------
--  DDL for Table MVIEW$_ADV_PARAMETERS
--------------------------------------------------------

  CREATE TABLE "MVIEW$_ADV_PARAMETERS" SHARING=METADATA ("PARAMETER_NAME" VARCHAR2(128), "PARAMETER_TYPE" NUMBER, "STRING_VALUE" VARCHAR2(30), "DATE_VALUE" DATE, "NUMERICAL_VALUE" NUMBER) 

   COMMENT ON TABLE "MVIEW$_ADV_PARAMETERS"  IS 'Summary advisor tuning parameters'
--------------------------------------------------------
--  DDL for Table MVIEW$_ADV_PLAN
--------------------------------------------------------

  CREATE TABLE "MVIEW$_ADV_PLAN" SHARING=METADATA ("STATEMENT_ID" VARCHAR2(30), "TIMESTAMP" DATE, "REMARKS" VARCHAR2(80), "OPERATION" VARCHAR2(30), "OPTIONS" VARCHAR2(255), "OBJECT_NODE" VARCHAR2(128), "OBJECT_OWNER" VARCHAR2(128), "OBJECT_NAME" VARCHAR2(128), "OBJECT_INSTANCE" NUMBER(*,0), "OBJECT_TYPE" VARCHAR2(30), "OPTIMIZER" VARCHAR2(255), "SEARCH_COLUMNS" NUMBER, "ID" NUMBER(*,0), "PARENT_ID" NUMBER(*,0), "POSITION" NUMBER(*,0), "COST" NUMBER(*,0), "CARDINALITY" NUMBER(*,0), "BYTES" NUMBER(*,0), "OTHER_TAG" VARCHAR2(255), "PARTITION_START" VARCHAR2(255), "PARTITION_STOP" VARCHAR2(255), "PARTITION_ID" NUMBER(*,0), "OTHER" LONG, "DISTRIBUTION" VARCHAR2(30), "CPU_COST" NUMBER(*,0), "IO_COST" NUMBER(*,0), "TEMP_SPACE" NUMBER(*,0)) 

   COMMENT ON TABLE "MVIEW$_ADV_PLAN"  IS 'Private plan table for estimate_mview_size operations'
--------------------------------------------------------
--  DDL for Table MVIEW$_ADV_PRETTY
--------------------------------------------------------

  CREATE TABLE "MVIEW$_ADV_PRETTY" SHARING=METADATA ("QUERYID#" NUMBER, "SQL_TEXT" LONG) 

   COMMENT ON TABLE "MVIEW$_ADV_PRETTY"  IS 'Table for sql parsing'
--------------------------------------------------------
--  DDL for Table MVIEW$_ADV_ROLLUP
--------------------------------------------------------

  CREATE TABLE "MVIEW$_ADV_ROLLUP" SHARING=METADATA ("RUNID#" NUMBER, "CLEVELID#" NUMBER, "PLEVELID#" NUMBER, "FLAGS" NUMBER) 

   COMMENT ON TABLE "MVIEW$_ADV_ROLLUP"  IS 'Each row repesents either a functional dependency or join-key relationship'
--------------------------------------------------------
--  DDL for Table MVIEW$_ADV_SQLDEPEND
--------------------------------------------------------

  CREATE TABLE "MVIEW$_ADV_SQLDEPEND" SHARING=METADATA ("COLLECTIONID#" NUMBER, "INST_ID" NUMBER, "FROM_ADDRESS" RAW(16), "FROM_HASH" NUMBER, "TO_OWNER" VARCHAR2(128), "TO_NAME" VARCHAR2(1000), "TO_TYPE" NUMBER, "CARDINALITY" NUMBER) 

   COMMENT ON TABLE "MVIEW$_ADV_SQLDEPEND"  IS 'Temporary table for workload collections'
--------------------------------------------------------
--  DDL for Table MVIEW$_ADV_TEMP
--------------------------------------------------------

  CREATE TABLE "MVIEW$_ADV_TEMP" SHARING=METADATA ("ID#" NUMBER, "SEQ#" NUMBER, "TEXT" LONG) 

   COMMENT ON TABLE "MVIEW$_ADV_TEMP"  IS 'Table for temporary data'
--------------------------------------------------------
--  DDL for Table MVIEW$_ADV_WORKLOAD
--------------------------------------------------------

  CREATE TABLE "MVIEW$_ADV_WORKLOAD" SHARING=METADATA ("QUERYID#" NUMBER, "COLLECTIONID#" NUMBER, "COLLECTTIME" DATE, "APPLICATION" VARCHAR2(128), "CARDINALITY" NUMBER, "RESULTSIZE" NUMBER, "UNAME" VARCHAR2(128), "QDATE" DATE, "PRIORITY" NUMBER, "EXEC_TIME" NUMBER, "SQL_TEXT" LONG, "SQL_TEXTLEN" NUMBER, "SQL_HASH" NUMBER, "SQL_ADDR" RAW(16), "FREQUENCY" NUMBER) 

   COMMENT ON TABLE "MVIEW$_ADV_WORKLOAD"  IS 'Shared workload repository for DBA users of summary advisor'
--------------------------------------------------------
--  DDL for Table NAME
--------------------------------------------------------

  CREATE TABLE "NAME" ("NAME" VARCHAR2(12))
--------------------------------------------------------
--  DDL for Table OL$
--------------------------------------------------------

  CREATE GLOBAL TEMPORARY TABLE "OL$" SHARING=METADATA ("OL_NAME" VARCHAR2(128), "SQL_TEXT" LONG, "TEXTLEN" NUMBER, "SIGNATURE" RAW(16), "HASH_VALUE" NUMBER, "HASH_VALUE2" NUMBER, "CATEGORY" VARCHAR2(128), "VERSION" VARCHAR2(64), "CREATOR" VARCHAR2(128), "TIMESTAMP" DATE, "FLAGS" NUMBER, "HINTCOUNT" NUMBER, "SPARE1" NUMBER, "SPARE2" VARCHAR2(1000)) ON COMMIT PRESERVE ROWS
--------------------------------------------------------
--  DDL for Table OL$HINTS
--------------------------------------------------------

  CREATE GLOBAL TEMPORARY TABLE "OL$HINTS" SHARING=METADATA ("OL_NAME" VARCHAR2(128), "HINT#" NUMBER, "CATEGORY" VARCHAR2(128), "HINT_TYPE" NUMBER, "HINT_TEXT" VARCHAR2(512), "STAGE#" NUMBER, "NODE#" NUMBER, "TABLE_NAME" VARCHAR2(128), "TABLE_TIN" NUMBER, "TABLE_POS" NUMBER, "REF_ID" NUMBER, "USER_TABLE_NAME" VARCHAR2(260), "COST" FLOAT(126), "CARDINALITY" FLOAT(126), "BYTES" FLOAT(126), "HINT_TEXTOFF" NUMBER, "HINT_TEXTLEN" NUMBER, "JOIN_PRED" VARCHAR2(2000), "SPARE1" NUMBER, "SPARE2" NUMBER, "HINT_STRING" CLOB) ON COMMIT PRESERVE ROWS
--------------------------------------------------------
--  DDL for Table OL$NODES
--------------------------------------------------------

  CREATE GLOBAL TEMPORARY TABLE "OL$NODES" SHARING=METADATA ("OL_NAME" VARCHAR2(128), "CATEGORY" VARCHAR2(128), "NODE_ID" NUMBER, "PARENT_ID" NUMBER, "NODE_TYPE" NUMBER, "NODE_TEXTLEN" NUMBER, "NODE_TEXTOFF" NUMBER, "NODE_NAME" VARCHAR2(64)) ON COMMIT PRESERVE ROWS
--------------------------------------------------------
--  DDL for Table ORDERS
--------------------------------------------------------

  CREATE TABLE "ORDERS" ("ORDER_ID" NUMBER(*,0), "ORDER_DATE" DATE, "CUST_ID" NUMBER(*,0), "SALESMAN_ID" NUMBER(*,0), "PRODUCT" VARCHAR2(100), "AMOUNT" NUMBER(10,2))
--------------------------------------------------------
--  DDL for Table PRODUCTS
--------------------------------------------------------

  CREATE TABLE "PRODUCTS" ("PRODUCT_ID" NUMBER, "PRODUCT_NAME" VARCHAR2(100), "PRICE" NUMBER(10,2), "STOCK_QUANTITY" NUMBER)
--------------------------------------------------------
--  DDL for Table REDO_DB
--------------------------------------------------------

  CREATE TABLE "REDO_DB" SHARING=METADATA ("DBID" NUMBER, "GLOBAL_DBNAME" VARCHAR2(129), "DBUNAME" VARCHAR2(32), "VERSION" VARCHAR2(32), "THREAD#" NUMBER, "RESETLOGS_SCN_BAS" NUMBER, "RESETLOGS_SCN_WRP" NUMBER, "RESETLOGS_TIME" NUMBER, "PRESETLOGS_SCN_BAS" NUMBER, "PRESETLOGS_SCN_WRP" NUMBER, "PRESETLOGS_TIME" NUMBER, "SEQNO_RCV_CUR" NUMBER, "SEQNO_RCV_LO" NUMBER, "SEQNO_RCV_HI" NUMBER, "SEQNO_DONE_CUR" NUMBER, "SEQNO_DONE_LO" NUMBER, "SEQNO_DONE_HI" NUMBER, "GAP_SEQNO" NUMBER, "GAP_RET" NUMBER, "GAP_DONE" NUMBER, "APPLY_SEQNO" NUMBER, "APPLY_DONE" NUMBER, "PURGE_DONE" NUMBER, "HAS_CHILD" NUMBER, "ERROR1" NUMBER, "STATUS" NUMBER, "CREATE_DATE" DATE, "TS1" NUMBER, "TS2" NUMBER, "GAP_NEXT_SCN" NUMBER, "GAP_NEXT_TIME" NUMBER, "CURSCN_TIME" NUMBER, "RESETLOGS_SCN" NUMBER, "PRESETLOGS_SCN" NUMBER, "GAP_RET2" NUMBER, "CURLOG" NUMBER, "ENDIAN" NUMBER, "ENQIDX" NUMBER, "SPARE4" NUMBER, "SPARE5" DATE, "SPARE6" VARCHAR2(65), "SPARE7" VARCHAR2(129), "TS3" NUMBER, "CURBLKNO" NUMBER, "SPARE8" NUMBER, "SPARE9" NUMBER, "SPARE10" NUMBER, "SPARE11" NUMBER, "SPARE12" NUMBER)
--------------------------------------------------------
--  DDL for Table REDO_LOG
--------------------------------------------------------

  CREATE TABLE "REDO_LOG" SHARING=METADATA ("DBID" NUMBER, "GLOBAL_DBNAME" VARCHAR2(129), "DBUNAME" VARCHAR2(32), "VERSION" VARCHAR2(32), "THREAD#" NUMBER, "RESETLOGS_SCN_BAS" NUMBER, "RESETLOGS_SCN_WRP" NUMBER, "RESETLOGS_TIME" NUMBER, "PRESETLOGS_SCN_BAS" NUMBER, "PRESETLOGS_SCN_WRP" NUMBER, "PRESETLOGS_TIME" NUMBER, "SEQUENCE#" NUMBER, "DUPID" NUMBER, "STATUS1" NUMBER, "STATUS2" NUMBER, "CREATE_TIME" VARCHAR2(32), "CLOSE_TIME" VARCHAR2(32), "DONE_TIME" VARCHAR2(32), "FIRST_SCN_BAS" NUMBER, "FIRST_SCN_WRP" NUMBER, "FIRST_TIME" NUMBER, "NEXT_SCN_BAS" NUMBER, "NEXT_SCN_WRP" NUMBER, "NEXT_TIME" NUMBER, "FIRST_SCN" NUMBER, "NEXT_SCN" NUMBER, "RESETLOGS_SCN" NUMBER, "BLOCKS" NUMBER, "BLOCK_SIZE" NUMBER, "OLD_BLOCKS" NUMBER, "CREATE_DATE" DATE, "ERROR1" NUMBER, "ERROR2" NUMBER, "FILENAME" VARCHAR2(513), "TS1" NUMBER, "TS2" NUMBER, "ENDIAN" NUMBER, "SPARE2" NUMBER, "SPARE3" NUMBER, "SPARE4" NUMBER, "SPARE5" DATE, "SPARE6" VARCHAR2(65), "SPARE7" VARCHAR2(129), "TS3" NUMBER, "PRESETLOGS_SCN" NUMBER, "SPARE8" NUMBER, "SPARE9" NUMBER, "SPARE10" NUMBER, "OLD_STATUS1" NUMBER, "OLD_STATUS2" NUMBER, "OLD_FILENAME" VARCHAR2(513))
--------------------------------------------------------
--  DDL for Table REGIONS
--------------------------------------------------------

  CREATE TABLE "REGIONS" ("REGION_ID" NUMBER, "REGION_NAME" VARCHAR2(25))
--------------------------------------------------------
--  DDL for Table RENT
--------------------------------------------------------

  CREATE TABLE "RENT" ("CARDID" NUMBER, "ITEMID" VARCHAR2(6), "APPORPRIATIONDATE" DATE, "RETURNDATE" DATE)
--------------------------------------------------------
--  DDL for Table ROLLING$CONNECTIONS
--------------------------------------------------------

  CREATE TABLE "ROLLING$CONNECTIONS" SHARING=METADATA ("SOURCE_RDBID" NUMBER, "DEST_RDBID" NUMBER, "ATTRIBUTES" NUMBER, "SERVICE_NAME" VARCHAR2(256), "CONN_HANDLE" NUMBER, "CONNECT_TIME" TIMESTAMP (6), "SEND_TIME" TIMESTAMP (6), "DISCONNECT_TIME" TIMESTAMP (6), "UPDATE_TIME" TIMESTAMP (6), "SOURCE_PID" NUMBER, "DEST_PID" NUMBER, "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" VARCHAR2(128))
--------------------------------------------------------
--  DDL for Table ROLLING$DATABASES
--------------------------------------------------------

  CREATE TABLE "ROLLING$DATABASES" SHARING=METADATA ("RDBID" NUMBER, "ATTRIBUTES" NUMBER, "ATTRIBUTES2" NUMBER, "DBUN" VARCHAR2(128), "DBID" NUMBER, "PROD_RSCN" NUMBER, "PROD_RID" NUMBER, "PROD_SCN" NUMBER, "CONS_RSCN" NUMBER, "CONS_RID" NUMBER, "CONS_SCN" NUMBER, "ENGINE_STATUS" NUMBER, "VERSION" VARCHAR2(128), "REDO_SOURCE" NUMBER, "UPDATE_TIME" TIMESTAMP (6), "REVISION" NUMBER, "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" VARCHAR2(128))
--------------------------------------------------------
--  DDL for Table ROLLING$DIRECTIVES
--------------------------------------------------------

  CREATE TABLE "ROLLING$DIRECTIVES" SHARING=METADATA ("DIRECTID" NUMBER, "PHASE" NUMBER, "TASKID" NUMBER, "FEATURE" VARCHAR2(32), "DESCRIPTION" VARCHAR2(256), "TARGET" NUMBER, "FLAGS" VARCHAR2(64), "OPCODE" NUMBER, "P1" VARCHAR2(256), "P2" VARCHAR2(256), "P3" VARCHAR2(256), "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" VARCHAR2(256))
--------------------------------------------------------
--  DDL for Table ROLLING$EVENTS
--------------------------------------------------------

  CREATE TABLE "ROLLING$EVENTS" SHARING=METADATA ("EVENTID" NUMBER, "INSTID" NUMBER, "REVISION" NUMBER, "EVENT_TIME" TIMESTAMP (6), "TYPE" VARCHAR2(16), "STATUS" NUMBER, "MESSAGE" VARCHAR2(256), "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" VARCHAR2(128))
--------------------------------------------------------
--  DDL for Table ROLLING$PARAMETERS
--------------------------------------------------------

  CREATE TABLE "ROLLING$PARAMETERS" SHARING=METADATA ("SCOPE" NUMBER, "NAME" VARCHAR2(32), "ID" NUMBER, "DESCRIP" VARCHAR2(256), "TYPE" NUMBER, "DATATYPE" NUMBER, "ATTRIBUTES" NUMBER, "CURVAL" VARCHAR2(1024), "LSTVAL" VARCHAR2(1024), "DEFVAL" VARCHAR2(1024), "MINVAL" NUMBER, "MAXVAL" NUMBER, "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" VARCHAR2(128))
--------------------------------------------------------
--  DDL for Table ROLLING$PLAN
--------------------------------------------------------

  CREATE TABLE "ROLLING$PLAN" SHARING=METADATA ("INSTID" NUMBER, "BATCHID" NUMBER, "DIRECTID" NUMBER, "TASKID" NUMBER, "REVISION" NUMBER, "PHASE" NUMBER, "STATUS" NUMBER, "PROGRESS" NUMBER, "SOURCE" NUMBER, "TARGET" NUMBER, "RFLAGS" NUMBER, "OPCODE" NUMBER, "P1" VARCHAR2(256), "P2" VARCHAR2(256), "P3" VARCHAR2(256), "P4" VARCHAR2(256), "DESCRIPTION" VARCHAR2(256), "EXEC_STATUS" NUMBER, "EXEC_INFO" VARCHAR2(256), "EXEC_TIME" TIMESTAMP (6), "FINISH_TIME" TIMESTAMP (6), "POST_STATUS" NUMBER, "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" VARCHAR2(256))
--------------------------------------------------------
--  DDL for Table ROLLING$STATISTICS
--------------------------------------------------------

  CREATE TABLE "ROLLING$STATISTICS" SHARING=METADATA ("STATID" NUMBER, "RDBID" NUMBER, "ATTRIBUTES" NUMBER, "TYPE" NUMBER, "NAME" VARCHAR2(256), "VALUESTR" VARCHAR2(256), "VALUENUM" NUMBER, "VALUETS" TIMESTAMP (6), "VALUEINT" INTERVAL DAY (3) TO SECOND (2), "UPDATE_TIME" TIMESTAMP (6), "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" VARCHAR2(128))
--------------------------------------------------------
--  DDL for Table ROLLING$STATUS
--------------------------------------------------------

  CREATE TABLE "ROLLING$STATUS" SHARING=METADATA ("REVISION" NUMBER, "PHASE" NUMBER, "BATCHID" NUMBER, "STATUS" NUMBER, "COORDID" NUMBER, "OPRIMARY" NUMBER, "FPRIMARY" NUMBER, "PID" NUMBER, "INSTANCE" NUMBER, "DBTOTAL" NUMBER, "DBACTIVE" NUMBER, "LOCATION" VARCHAR2(128), "INIT_TIME" TIMESTAMP (6), "BUILD_TIME" TIMESTAMP (6), "START_TIME" TIMESTAMP (6), "SWITCH_TIME" TIMESTAMP (6), "FINISH_TIME" TIMESTAMP (6), "LAST_INSTID" NUMBER, "LAST_BATCHID" NUMBER, "SPARE1" NUMBER, "SPARE2" NUMBER, "SPARE3" VARCHAR2(128))
--------------------------------------------------------
--  DDL for Table SALESMEN
--------------------------------------------------------

  CREATE TABLE "SALESMEN" ("SALESMAN_ID" NUMBER(*,0), "NAME" VARCHAR2(100), "AGE" NUMBER(*,0), "SALARY" NUMBER(10,2))
--------------------------------------------------------
--  DDL for Table SCHEDULER_JOB_ARGS_TBL
--------------------------------------------------------

  CREATE TABLE "SCHEDULER_JOB_ARGS_TBL" SHARING=METADATA ("OWNER" VARCHAR2(128), "JOB_NAME" VARCHAR2(128), "ARGUMENT_NAME" VARCHAR2(128), "ARGUMENT_POSITION" NUMBER, "ARGUMENT_TYPE" VARCHAR2(257), "VALUE" VARCHAR2(4000), "ANYDATA_VALUE" "ANYDATA" , "OUT_ARGUMENT" VARCHAR2(5))
--------------------------------------------------------
--  DDL for Table SCHEDULER_PROGRAM_ARGS_TBL
--------------------------------------------------------

  CREATE TABLE "SCHEDULER_PROGRAM_ARGS_TBL" SHARING=METADATA ("OWNER" VARCHAR2(128), "PROGRAM_NAME" VARCHAR2(128), "ARGUMENT_NAME" VARCHAR2(128), "ARGUMENT_POSITION" NUMBER, "ARGUMENT_TYPE" VARCHAR2(257), "METADATA_ATTRIBUTE" VARCHAR2(19), "DEFAULT_VALUE" VARCHAR2(4000), "DEFAULT_ANYDATA_VALUE" "ANYDATA" , "OUT_ARGUMENT" VARCHAR2(5))
--------------------------------------------------------
--  DDL for Table SQLPLUS_PRODUCT_PROFILE
--------------------------------------------------------

  CREATE TABLE "SQLPLUS_PRODUCT_PROFILE" SHARING=METADATA ("PRODUCT" VARCHAR2(30), "USERID" VARCHAR2(128), "ATTRIBUTE" VARCHAR2(240), "SCOPE" VARCHAR2(240), "NUMERIC_VALUE" NUMBER(15,2), "CHAR_VALUE" VARCHAR2(240), "DATE_VALUE" DATE, "LONG_VALUE" LONG)
--------------------------------------------------------
--  DDL for Table STUDENT
--------------------------------------------------------

  CREATE TABLE "STUDENT" ("STUD_ID" NUMBER(*,0), "NAME" VARCHAR2(25), "BR_ID" NUMBER(*,0), "EMAIL" VARCHAR2(20), "CITY_ID" NUMBER(*,0))
--------------------------------------------------------
--  DDL for Table STUDENTS
--------------------------------------------------------

  CREATE TABLE "STUDENTS" ("ROLL_NUMBER" NUMBER(*,0), "NAME" VARCHAR2(100), "TELUGU" NUMBER(3,0), "ENGLISH" NUMBER(3,0), "MATHS" NUMBER(3,0), "HINDI" NUMBER(3,0), "SCIENCE" NUMBER(3,0), "SOCIAL" NUMBER(3,0), "TOTAL_MARKS" NUMBER(4,0))
--------------------------------------------------------
--  DDL for Table TRNS
--------------------------------------------------------

  CREATE TABLE "TRNS" ("TRN_ID" NUMBER, "TRANS_CHANNEL" VARCHAR2(10), "TRANS_TIMESTAMP" TIMESTAMP (6), "TRANS_TYPE" VARCHAR2(10), "CARD_ID" NUMBER, "UPD_OFFICER" VARCHAR2(10), "UPD_TIMESTAMP" TIMESTAMP (6))
--------------------------------------------------------
--  DDL for Table VIDEO
--------------------------------------------------------

  CREATE TABLE "VIDEO" ("TITLE" VARCHAR2(50), "YEAR" NUMBER(*,0), "VIDEOID" VARCHAR2(6), "STATE" VARCHAR2(10), "AVALABILITY" VARCHAR2(1), "DEBYCOST" NUMBER(10,2), "LOSTCOST" NUMBER(10,2), "ADDRESS" VARCHAR2(50))
REM INSERTING into ACCOUNT
SET DEFINE OFF;
REM INSERTING into ACCOUNT_1
SET DEFINE OFF;
Insert into ACCOUNT_1 (ACCOUNT_NUMBER,NAME,JOINING_DATE,DEBIT,CREDIT,BALANCE,INTEREST) values (12345,'satya',to_date('01-01-24','DD-MM-RR'),1000,500,2000,100);
Insert into ACCOUNT_1 (ACCOUNT_NUMBER,NAME,JOINING_DATE,DEBIT,CREDIT,BALANCE,INTEREST) values (12345,'satya',to_date('01-01-24','DD-MM-RR'),1000,500,2000,100);
Insert into ACCOUNT_1 (ACCOUNT_NUMBER,NAME,JOINING_DATE,DEBIT,CREDIT,BALANCE,INTEREST) values (12345,'satya',to_date('01-01-24','DD-MM-RR'),1000,500,2000,100);
REM INSERTING into ACCOUNT_12345
SET DEFINE OFF;
REM INSERTING into ACCOUNT_12346
SET DEFINE OFF;
REM INSERTING into ACCOUNT_12347
SET DEFINE OFF;
REM INSERTING into ACCOUNT_12348
SET DEFINE OFF;
REM INSERTING into ACCOUNT_12349
SET DEFINE OFF;
REM INSERTING into ACCOUNT_2
SET DEFINE OFF;
Insert into ACCOUNT_2 (ACCOUNT_NUMBER,NAME,JOINING_DATE,DEBIT,CREDIT,BALANCE,INTEREST) values (12346,'sai',to_date('01-02-24','DD-MM-RR'),2000,1000,3000,150);
REM INSERTING into ACCOUNT_3
SET DEFINE OFF;
Insert into ACCOUNT_3 (ACCOUNT_NUMBER,NAME,JOINING_DATE,DEBIT,CREDIT,BALANCE,INTEREST) values (12347,'ramesh',to_date('01-03-24','DD-MM-RR'),1500,800,2500,200);
REM INSERTING into ACCOUNT_4
SET DEFINE OFF;
Insert into ACCOUNT_4 (ACCOUNT_NUMBER,NAME,JOINING_DATE,DEBIT,CREDIT,BALANCE,INTEREST) values (12348,'raju',to_date('01-04-24','DD-MM-RR'),1800,1200,3000,250);
REM INSERTING into ACCOUNT_5
SET DEFINE OFF;
Insert into ACCOUNT_5 (ACCOUNT_NUMBER,NAME,JOINING_DATE,DEBIT,CREDIT,BALANCE,INTEREST) values (12349,'rambabu',to_date('01-05-24','DD-MM-RR'),1200,700,2000,120);
REM INSERTING into ACCOUNT_8
SET DEFINE OFF;
REM INSERTING into ADDRESS
SET DEFINE OFF;
Insert into ADDRESS (CITY_ID,CITY,PINCODE) values (1,'Mumbai','400121');
Insert into ADDRESS (CITY_ID,CITY,PINCODE) values (2,'Pune','450011');
Insert into ADDRESS (CITY_ID,CITY,PINCODE) values (3,'Lucknow','553001');
Insert into ADDRESS (CITY_ID,CITY,PINCODE) values (4,'HYDERABAD','443221');
REM INSERTING into AQ$_INTERNET_AGENTS
SET DEFINE OFF;
Insert into AQ$_INTERNET_AGENTS (AGENT_NAME,PROTOCOL,SPARE1) values ('SCHEDULER$_EVENT_AGENT',0,null);
Insert into AQ$_INTERNET_AGENTS (AGENT_NAME,PROTOCOL,SPARE1) values ('SCHEDULER$_REMDB_AGENT',0,null);
Insert into AQ$_INTERNET_AGENTS (AGENT_NAME,PROTOCOL,SPARE1) values ('SERVER_ALERT',0,null);
Insert into AQ$_INTERNET_AGENTS (AGENT_NAME,PROTOCOL,SPARE1) values ('HAE_SUB',0,null);
Insert into AQ$_INTERNET_AGENTS (AGENT_NAME,PROTOCOL,SPARE1) values ('ILM_AGENT',0,null);
Insert into AQ$_INTERNET_AGENTS (AGENT_NAME,PROTOCOL,SPARE1) values ('SCHEDULER$_LBAGT',0,null);
REM INSERTING into AQ$_INTERNET_AGENT_PRIVS
SET DEFINE OFF;
Insert into AQ$_INTERNET_AGENT_PRIVS (AGENT_NAME,DB_USERNAME) values ('SCHEDULER$_EVENT_AGENT','SYS');
Insert into AQ$_INTERNET_AGENT_PRIVS (AGENT_NAME,DB_USERNAME) values ('SCHEDULER$_LBAGT','SYS');
Insert into AQ$_INTERNET_AGENT_PRIVS (AGENT_NAME,DB_USERNAME) values ('SCHEDULER$_REMDB_AGENT','SYS');
Insert into AQ$_INTERNET_AGENT_PRIVS (AGENT_NAME,DB_USERNAME) values ('SERVER_ALERT','SYS');
REM INSERTING into AQ$_KEY_SHARD_MAP
SET DEFINE OFF;
REM INSERTING into AQ$_QUEUES
SET DEFINE OFF;
Insert into AQ$_QUEUES (OID,EVENTID,NAME,TABLE_OBJNO,USAGE,ENABLE_FLAG,MAX_RETRIES,RETRY_DELAY,PROPERTIES,RET_TIME,QUEUE_COMMENT,SUBSCRIBERS,MEMORY_THRESHOLD,SERVICE_NAME,NETWORK_NAME,SUB_OID,SHARDED,BASE_QUEUE) values ('A47690EB861F494FB3FF0BC72D746B17',19668,'AQ$_SCHEDULER$_EVENT_QTAB_E',19646,1,0,0,0,0,0,'exception queue',null,null,null,null,null,0,0);
Insert into AQ$_QUEUES (OID,EVENTID,NAME,TABLE_OBJNO,USAGE,ENABLE_FLAG,MAX_RETRIES,RETRY_DELAY,PROPERTIES,RET_TIME,QUEUE_COMMENT,SUBSCRIBERS,MEMORY_THRESHOLD,SERVICE_NAME,NETWORK_NAME,SUB_OID,SHARDED,BASE_QUEUE) values ('0CC5EF1FCF0C47B39567CAD19745BE54',19669,'SCHEDULER$_EVENT_QUEUE',19646,0,3,5,0,0,3600,'Scheduler event queue',null,null,null,null,null,0,0);
Insert into AQ$_QUEUES (OID,EVENTID,NAME,TABLE_OBJNO,USAGE,ENABLE_FLAG,MAX_RETRIES,RETRY_DELAY,PROPERTIES,RET_TIME,QUEUE_COMMENT,SUBSCRIBERS,MEMORY_THRESHOLD,SERVICE_NAME,NETWORK_NAME,SUB_OID,SHARDED,BASE_QUEUE) values ('621AF4E212CE4151B8966409A3B689B2',19702,'AQ$_SCHEDULER$_REMDB_JOBQTAB_E',19673,1,0,0,0,0,0,'exception queue',null,null,null,null,null,0,0);
Insert into AQ$_QUEUES (OID,EVENTID,NAME,TABLE_OBJNO,USAGE,ENABLE_FLAG,MAX_RETRIES,RETRY_DELAY,PROPERTIES,RET_TIME,QUEUE_COMMENT,SUBSCRIBERS,MEMORY_THRESHOLD,SERVICE_NAME,NETWORK_NAME,SUB_OID,SHARDED,BASE_QUEUE) values ('14332BFEA6EF4530BAAD1BAC657F52CC',19703,'SCHEDULER$_REMDB_JOBQ',19673,0,3,5,0,0,0,'Scheduler remote db job queue',null,null,null,null,null,0,0);
Insert into AQ$_QUEUES (OID,EVENTID,NAME,TABLE_OBJNO,USAGE,ENABLE_FLAG,MAX_RETRIES,RETRY_DELAY,PROPERTIES,RET_TIME,QUEUE_COMMENT,SUBSCRIBERS,MEMORY_THRESHOLD,SERVICE_NAME,NETWORK_NAME,SUB_OID,SHARDED,BASE_QUEUE) values ('D9F12FFF0D824947BCCF5BD90DEE0B2A',19732,'AQ$_SCHEDULER_FILEWATCHER_QT_E',19707,1,0,0,0,0,0,'exception queue',null,null,null,null,null,0,0);
Insert into AQ$_QUEUES (OID,EVENTID,NAME,TABLE_OBJNO,USAGE,ENABLE_FLAG,MAX_RETRIES,RETRY_DELAY,PROPERTIES,RET_TIME,QUEUE_COMMENT,SUBSCRIBERS,MEMORY_THRESHOLD,SERVICE_NAME,NETWORK_NAME,SUB_OID,SHARDED,BASE_QUEUE) values ('478442A86EF64D8FA6AC3AEED3603983',19733,'SCHEDULER_FILEWATCHER_Q',19707,0,3,5,0,0,0,'Scheduler file watcher results queue',null,null,null,null,null,0,0);
Insert into AQ$_QUEUES (OID,EVENTID,NAME,TABLE_OBJNO,USAGE,ENABLE_FLAG,MAX_RETRIES,RETRY_DELAY,PROPERTIES,RET_TIME,QUEUE_COMMENT,SUBSCRIBERS,MEMORY_THRESHOLD,SERVICE_NAME,NETWORK_NAME,SUB_OID,SHARDED,BASE_QUEUE) values ('96FE5D7AB7904DCD90DEB4497C337C20',19787,'AQ$_ALERT_QT_E',19765,1,2,0,0,0,0,'exception queue',null,null,null,null,null,0,0);
Insert into AQ$_QUEUES (OID,EVENTID,NAME,TABLE_OBJNO,USAGE,ENABLE_FLAG,MAX_RETRIES,RETRY_DELAY,PROPERTIES,RET_TIME,QUEUE_COMMENT,SUBSCRIBERS,MEMORY_THRESHOLD,SERVICE_NAME,NETWORK_NAME,SUB_OID,SHARDED,BASE_QUEUE) values ('418A1B69F4CA42EBAD0C30D3581F1AD7',19788,'ALERT_QUE',19765,0,3,5,0,0,0,'Server Generated Alert Queue',null,null,null,null,null,0,0);
Insert into AQ$_QUEUES (OID,EVENTID,NAME,TABLE_OBJNO,USAGE,ENABLE_FLAG,MAX_RETRIES,RETRY_DELAY,PROPERTIES,RET_TIME,QUEUE_COMMENT,SUBSCRIBERS,MEMORY_THRESHOLD,SERVICE_NAME,NETWORK_NAME,SUB_OID,SHARDED,BASE_QUEUE) values ('100C82BBF3D747D89D2AD003C73A829B',20088,'AQ$_ORA$PREPLUGIN_BACKUP_QTB_E',20066,1,0,0,0,0,0,'exception queue',null,null,null,null,null,0,0);
Insert into AQ$_QUEUES (OID,EVENTID,NAME,TABLE_OBJNO,USAGE,ENABLE_FLAG,MAX_RETRIES,RETRY_DELAY,PROPERTIES,RET_TIME,QUEUE_COMMENT,SUBSCRIBERS,MEMORY_THRESHOLD,SERVICE_NAME,NETWORK_NAME,SUB_OID,SHARDED,BASE_QUEUE) values ('1EE38090888B47DBA6B95BA53AE4D536',20089,'ORA$PREPLUGIN_BACKUP_QUE',20066,0,3,5,0,0,0,'SYS.ORA$PREPLUGIN_BACKUP_QUE',null,null,null,null,null,0,0);
Insert into AQ$_QUEUES (OID,EVENTID,NAME,TABLE_OBJNO,USAGE,ENABLE_FLAG,MAX_RETRIES,RETRY_DELAY,PROPERTIES,RET_TIME,QUEUE_COMMENT,SUBSCRIBERS,MEMORY_THRESHOLD,SERVICE_NAME,NETWORK_NAME,SUB_OID,SHARDED,BASE_QUEUE) values ('8A7759BC235F4A35B81E0FFC7150897B',20308,'AQ$_AQ$_MEM_MC_E',20284,1,0,0,0,0,0,'exception queue',null,null,null,null,null,0,0);
Insert into AQ$_QUEUES (OID,EVENTID,NAME,TABLE_OBJNO,USAGE,ENABLE_FLAG,MAX_RETRIES,RETRY_DELAY,PROPERTIES,RET_TIME,QUEUE_COMMENT,SUBSCRIBERS,MEMORY_THRESHOLD,SERVICE_NAME,NETWORK_NAME,SUB_OID,SHARDED,BASE_QUEUE) values ('4639C35722E04719BB27CB04E4AE52B3',20309,'SRVQUEUE',20284,2,3,0,0,0,0,null,null,null,null,null,null,0,0);
Insert into AQ$_QUEUES (OID,EVENTID,NAME,TABLE_OBJNO,USAGE,ENABLE_FLAG,MAX_RETRIES,RETRY_DELAY,PROPERTIES,RET_TIME,QUEUE_COMMENT,SUBSCRIBERS,MEMORY_THRESHOLD,SERVICE_NAME,NETWORK_NAME,SUB_OID,SHARDED,BASE_QUEUE) values ('954AB41424C946E587976955AF6B2E14',20320,'AQ$_AQ_EVENT_TABLE_E',20310,1,0,0,0,0,0,'exception queue',null,null,null,null,null,0,0);
Insert into AQ$_QUEUES (OID,EVENTID,NAME,TABLE_OBJNO,USAGE,ENABLE_FLAG,MAX_RETRIES,RETRY_DELAY,PROPERTIES,RET_TIME,QUEUE_COMMENT,SUBSCRIBERS,MEMORY_THRESHOLD,SERVICE_NAME,NETWORK_NAME,SUB_OID,SHARDED,BASE_QUEUE) values ('EBB22C8AEC434E9BB1CF837B5B864F7A',20321,'AQ_EVENT_TABLE_Q',20310,0,3,5,0,0,0,'CREATING AQ_EVENT_TABLE_Q QUEUE',null,null,null,null,null,0,0);
Insert into AQ$_QUEUES (OID,EVENTID,NAME,TABLE_OBJNO,USAGE,ENABLE_FLAG,MAX_RETRIES,RETRY_DELAY,PROPERTIES,RET_TIME,QUEUE_COMMENT,SUBSCRIBERS,MEMORY_THRESHOLD,SERVICE_NAME,NETWORK_NAME,SUB_OID,SHARDED,BASE_QUEUE) values ('DFF4D9F355CD493D9D822C5E232E5D19',20344,'AQ$_AQ_PROP_TABLE_E',20322,1,0,0,0,0,0,'exception queue',null,null,null,null,null,0,0);
Insert into AQ$_QUEUES (OID,EVENTID,NAME,TABLE_OBJNO,USAGE,ENABLE_FLAG,MAX_RETRIES,RETRY_DELAY,PROPERTIES,RET_TIME,QUEUE_COMMENT,SUBSCRIBERS,MEMORY_THRESHOLD,SERVICE_NAME,NETWORK_NAME,SUB_OID,SHARDED,BASE_QUEUE) values ('453001AD73F040C79E9971211814B30C',20345,'AQ_PROP_NOTIFY',20322,0,3,5,0,0,0,'Queue for Notifying events in AQ Prop. Scheduling',null,null,null,null,null,0,0);
Insert into AQ$_QUEUES (OID,EVENTID,NAME,TABLE_OBJNO,USAGE,ENABLE_FLAG,MAX_RETRIES,RETRY_DELAY,PROPERTIES,RET_TIME,QUEUE_COMMENT,SUBSCRIBERS,MEMORY_THRESHOLD,SERVICE_NAME,NETWORK_NAME,SUB_OID,SHARDED,BASE_QUEUE) values ('BB20A76128B44CA29A196DF309AA9B01',20365,'AQ$_CQN_EVENT_TABLE_E',20355,1,0,0,0,0,0,'exception queue',null,null,null,null,null,0,0);
Insert into AQ$_QUEUES (OID,EVENTID,NAME,TABLE_OBJNO,USAGE,ENABLE_FLAG,MAX_RETRIES,RETRY_DELAY,PROPERTIES,RET_TIME,QUEUE_COMMENT,SUBSCRIBERS,MEMORY_THRESHOLD,SERVICE_NAME,NETWORK_NAME,SUB_OID,SHARDED,BASE_QUEUE) values ('51D0F599E4B34D4E8D018AF62082872B',20366,'CQN_EVENT_TABLE_Q',20355,0,3,5,0,0,0,'CREATING CQN_EVENT_TABLE_Q QUEUE',null,null,null,null,null,0,0);
Insert into AQ$_QUEUES (OID,EVENTID,NAME,TABLE_OBJNO,USAGE,ENABLE_FLAG,MAX_RETRIES,RETRY_DELAY,PROPERTIES,RET_TIME,QUEUE_COMMENT,SUBSCRIBERS,MEMORY_THRESHOLD,SERVICE_NAME,NETWORK_NAME,SUB_OID,SHARDED,BASE_QUEUE) values ('DAE87352078B4490BCFC97F743DC6D3B',20677,'AQ$_SYS$SERVICE_METRICS_TAB_E',20655,1,0,0,0,0,0,'exception queue',null,null,null,null,null,0,0);
Insert into AQ$_QUEUES (OID,EVENTID,NAME,TABLE_OBJNO,USAGE,ENABLE_FLAG,MAX_RETRIES,RETRY_DELAY,PROPERTIES,RET_TIME,QUEUE_COMMENT,SUBSCRIBERS,MEMORY_THRESHOLD,SERVICE_NAME,NETWORK_NAME,SUB_OID,SHARDED,BASE_QUEUE) values ('7812988458D24541920BA32844914254',20678,'SYS$SERVICE_METRICS',20655,0,3,5,0,0,3600,null,null,null,null,null,null,0,0);
Insert into AQ$_QUEUES (OID,EVENTID,NAME,TABLE_OBJNO,USAGE,ENABLE_FLAG,MAX_RETRIES,RETRY_DELAY,PROPERTIES,RET_TIME,QUEUE_COMMENT,SUBSCRIBERS,MEMORY_THRESHOLD,SERVICE_NAME,NETWORK_NAME,SUB_OID,SHARDED,BASE_QUEUE) values ('7489C1D385814A88971C56ABA93F06A3',20846,'AQ$_PDB_MON_EVENT_QTABLE$_E',20822,1,0,0,0,0,0,'exception queue',null,null,null,null,null,0,0);
Insert into AQ$_QUEUES (OID,EVENTID,NAME,TABLE_OBJNO,USAGE,ENABLE_FLAG,MAX_RETRIES,RETRY_DELAY,PROPERTIES,RET_TIME,QUEUE_COMMENT,SUBSCRIBERS,MEMORY_THRESHOLD,SERVICE_NAME,NETWORK_NAME,SUB_OID,SHARDED,BASE_QUEUE) values ('46C265D9AF224F42BD207F6782528A44',20847,'PDB_MON_EVENT_QUEUE$',20822,0,3,5,0,0,86400,'Queue for raw pdb event information',null,null,null,null,null,0,0);
Insert into AQ$_QUEUES (OID,EVENTID,NAME,TABLE_OBJNO,USAGE,ENABLE_FLAG,MAX_RETRIES,RETRY_DELAY,PROPERTIES,RET_TIME,QUEUE_COMMENT,SUBSCRIBERS,MEMORY_THRESHOLD,SERVICE_NAME,NETWORK_NAME,SUB_OID,SHARDED,BASE_QUEUE) values ('A73405110A2F466D8D77097D03D23F1D',20988,'AQ$_CHANGE_LOG_QUEUE_TABLE_E',20966,1,0,0,0,0,0,'exception queue',null,null,null,null,null,0,0);
Insert into AQ$_QUEUES (OID,EVENTID,NAME,TABLE_OBJNO,USAGE,ENABLE_FLAG,MAX_RETRIES,RETRY_DELAY,PROPERTIES,RET_TIME,QUEUE_COMMENT,SUBSCRIBERS,MEMORY_THRESHOLD,SERVICE_NAME,NETWORK_NAME,SUB_OID,SHARDED,BASE_QUEUE) values ('99A7C9AB7B8149D0B2A6EB05CD425E7D',20989,'CHANGE_LOG_QUEUE',20966,0,3,5,0,0,0,'GSM Change Log Queue',null,null,null,null,null,0,0);
Insert into AQ$_QUEUES (OID,EVENTID,NAME,TABLE_OBJNO,USAGE,ENABLE_FLAG,MAX_RETRIES,RETRY_DELAY,PROPERTIES,RET_TIME,QUEUE_COMMENT,SUBSCRIBERS,MEMORY_THRESHOLD,SERVICE_NAME,NETWORK_NAME,SUB_OID,SHARDED,BASE_QUEUE) values ('BC2A1BEFA2F249C9A9B6B0CA5257C17A',22724,'AQ$_WM$EVENT_QUEUE_TABLE_E',22697,1,0,0,0,0,0,'exception queue',null,null,null,null,null,0,0);
Insert into AQ$_QUEUES (OID,EVENTID,NAME,TABLE_OBJNO,USAGE,ENABLE_FLAG,MAX_RETRIES,RETRY_DELAY,PROPERTIES,RET_TIME,QUEUE_COMMENT,SUBSCRIBERS,MEMORY_THRESHOLD,SERVICE_NAME,NETWORK_NAME,SUB_OID,SHARDED,BASE_QUEUE) values ('F208D58599E34D4684CA6F92B87E2F0D',22725,'WM$EVENT_QUEUE',22697,0,3,5,0,0,0,'OWM Events Queue',null,null,null,null,null,0,0);
REM INSERTING into AQ$_QUEUE_TABLES
SET DEFINE OFF;
Insert into AQ$_QUEUE_TABLES (SCHEMA,NAME,UDATA_TYPE,OBJNO,FLAGS,SORT_COLS,TIMEZONE,TABLE_COMMENT) values ('SYS','SCHEDULER$_EVENT_QTAB',1,19646,16805897,2,'00:00','Scheduler event queue table');
Insert into AQ$_QUEUE_TABLES (SCHEMA,NAME,UDATA_TYPE,OBJNO,FLAGS,SORT_COLS,TIMEZONE,TABLE_COMMENT) values ('SYS','SCHEDULER$_REMDB_JOBQTAB',1,19673,16801801,2,'00:00','Scheduler remote db job queue table');
Insert into AQ$_QUEUE_TABLES (SCHEMA,NAME,UDATA_TYPE,OBJNO,FLAGS,SORT_COLS,TIMEZONE,TABLE_COMMENT) values ('SYS','SCHEDULER_FILEWATCHER_QT',1,19707,16805897,2,'00:00','Scheduler file watcher result queue table');
Insert into AQ$_QUEUE_TABLES (SCHEMA,NAME,UDATA_TYPE,OBJNO,FLAGS,SORT_COLS,TIMEZONE,TABLE_COMMENT) values ('SYS','ALERT_QT',1,19765,16805897,2,'00:00','Server Generated Alert Queue Table');
Insert into AQ$_QUEUE_TABLES (SCHEMA,NAME,UDATA_TYPE,OBJNO,FLAGS,SORT_COLS,TIMEZONE,TABLE_COMMENT) values ('SYS','ORA$PREPLUGIN_BACKUP_QTB',1,20066,16801801,2,'00:00','SYS.ORA$PREPLUGIN_BACKUP_QUE');
Insert into AQ$_QUEUE_TABLES (SCHEMA,NAME,UDATA_TYPE,OBJNO,FLAGS,SORT_COLS,TIMEZONE,TABLE_COMMENT) values ('SYS','AQ$_MEM_MC',3,20284,16801801,2,'00:00','table for non_persistent queues');
Insert into AQ$_QUEUE_TABLES (SCHEMA,NAME,UDATA_TYPE,OBJNO,FLAGS,SORT_COLS,TIMEZONE,TABLE_COMMENT) values ('SYS','AQ_EVENT_TABLE',1,20310,16793600,2,'00:00','CREATING AQ_EVENT_TABLE QUEUE TABLE');
Insert into AQ$_QUEUE_TABLES (SCHEMA,NAME,UDATA_TYPE,OBJNO,FLAGS,SORT_COLS,TIMEZONE,TABLE_COMMENT) values ('SYS','AQ_PROP_TABLE',1,20322,16801801,2,'00:00','Queue Table for Notification in AQ Prop. Scheduling');
Insert into AQ$_QUEUE_TABLES (SCHEMA,NAME,UDATA_TYPE,OBJNO,FLAGS,SORT_COLS,TIMEZONE,TABLE_COMMENT) values ('SYS','CQN_EVENT_TABLE',1,20355,16793600,2,'00:00','CREATING CQN_EVENT_TABLE QUEUE TABLE');
Insert into AQ$_QUEUE_TABLES (SCHEMA,NAME,UDATA_TYPE,OBJNO,FLAGS,SORT_COLS,TIMEZONE,TABLE_COMMENT) values ('SYS','SYS$SERVICE_METRICS_TAB',1,20655,16801801,2,'00:00',null);
Insert into AQ$_QUEUE_TABLES (SCHEMA,NAME,UDATA_TYPE,OBJNO,FLAGS,SORT_COLS,TIMEZONE,TABLE_COMMENT) values ('SYS','PDB_MON_EVENT_QTABLE$',1,20822,16801801,2,'00:00','Raw queue table containing event information');
Insert into AQ$_QUEUE_TABLES (SCHEMA,NAME,UDATA_TYPE,OBJNO,FLAGS,SORT_COLS,TIMEZONE,TABLE_COMMENT) values ('GSMADMIN_INTERNAL','CHANGE_LOG_QUEUE_TABLE',1,20966,16801801,2,'00:00','Creating GSM change log queue table');
Insert into AQ$_QUEUE_TABLES (SCHEMA,NAME,UDATA_TYPE,OBJNO,FLAGS,SORT_COLS,TIMEZONE,TABLE_COMMENT) values ('WMSYS','WM$EVENT_QUEUE_TABLE',1,22697,16801801,2,'00:00',null);
REM INSERTING into AQ$_SCHEDULES
SET DEFINE OFF;
REM INSERTING into BANK
SET DEFINE OFF;
Insert into BANK (BANK_ID,BANK_NAME,BANK_IFSC_CODE,BRANCH) values (3,'union','12354','vijayawada');
REM INSERTING into BANK_ACCOUNT_1
SET DEFINE OFF;
REM INSERTING into BANK_ACCOUNT_2
SET DEFINE OFF;
Insert into BANK_ACCOUNT_2 (ACCOUNT_NUMBER,NAME,JOINING_DATE,MOBILE_NUMBER,DEBIT,CREDIT,BALANCE,INREST) values (12346,'SAIBABA',to_date('05-03-24','DD-MM-RR'),1234567891,100,500,100,800);
Insert into BANK_ACCOUNT_2 (ACCOUNT_NUMBER,NAME,JOINING_DATE,MOBILE_NUMBER,DEBIT,CREDIT,BALANCE,INREST) values (12345,'sai',to_date('05-03-24','DD-MM-RR'),1234567892,100,400,100,600);
Insert into BANK_ACCOUNT_2 (ACCOUNT_NUMBER,NAME,JOINING_DATE,MOBILE_NUMBER,DEBIT,CREDIT,BALANCE,INREST) values (12344,'ramesh',to_date('05-03-24','DD-MM-RR'),1234567892,200,400,100,700);
Insert into BANK_ACCOUNT_2 (ACCOUNT_NUMBER,NAME,JOINING_DATE,MOBILE_NUMBER,DEBIT,CREDIT,BALANCE,INREST) values (12344,'ramesh',to_date('05-03-24','DD-MM-RR'),1234567892,200,400,100,700);
REM INSERTING into BANK_ACCOUNT_3
SET DEFINE OFF;
Insert into BANK_ACCOUNT_3 (ACCOUNT_NUMBER,NAME,JOINING_DATE,MOBILE_NUMBER,DEBIT,CREDIT,BALANCE,INREST) values (12347,'SATISH',to_date('05-03-24','DD-MM-RR'),1234567893,100,500,300,900);
Insert into BANK_ACCOUNT_3 (ACCOUNT_NUMBER,NAME,JOINING_DATE,MOBILE_NUMBER,DEBIT,CREDIT,BALANCE,INREST) values (12344,'ramesh',to_date('05-03-24','DD-MM-RR'),1234567892,200,400,100,700);
REM INSERTING into BANK_ACCOUNT_4
SET DEFINE OFF;
Insert into BANK_ACCOUNT_4 (ACCOUNT_NUMBER,NAME,JOINING_DATE,MOBILE_NUMBER,DEBIT,CREDIT,BALANCE,INREST) values (12348,'NARESH',to_date('05-03-24','DD-MM-RR'),1234567893,100,500,200,800);
REM INSERTING into BANK_ACCOUNT_5
SET DEFINE OFF;
Insert into BANK_ACCOUNT_5 (ACCOUNT_NUMBER,NAME,JOINING_DATE,MOBILE_NUMBER,DEBIT,CREDIT,BALANCE,INREST) values (12349,'RAMBABU',to_date('05-03-24','DD-MM-RR'),1234567892,100,500,100,700);
REM INSERTING into BIN_RANGE
SET DEFINE OFF;
REM INSERTING into BIN_SUBSCRIPTION
SET DEFINE OFF;
Insert into BIN_SUBSCRIPTION (BIN_NAME,BIN_ID,STATUS) values ('rjay',15,'c');
Insert into BIN_SUBSCRIPTION (BIN_NAME,BIN_ID,STATUS) values ('tech',10,'b');
REM INSERTING into BOOK
SET DEFINE OFF;
Insert into BOOK (ISBN,BOOKID,STATE,AVALABILITY,DEBYCOST,LOSTCOST,ADDRESS) values ('A123','B1A123','GOOD','A',5,20,'ARCHEOLOGY ROAD');
Insert into BOOK (ISBN,BOOKID,STATE,AVALABILITY,DEBYCOST,LOSTCOST,ADDRESS) values ('A123','B2A123','NEW','A',6,30,'ARCHEOLOGY ROAD');
Insert into BOOK (ISBN,BOOKID,STATE,AVALABILITY,DEBYCOST,LOSTCOST,ADDRESS) values ('B234','B1B234','NEW','A',2,15,'CHEMISTRY ROAD');
Insert into BOOK (ISBN,BOOKID,STATE,AVALABILITY,DEBYCOST,LOSTCOST,ADDRESS) values ('C321','B1C321','BAD','A',1,10,'PHYSICS ROAD');
Insert into BOOK (ISBN,BOOKID,STATE,AVALABILITY,DEBYCOST,LOSTCOST,ADDRESS) values ('H123','B1H123','GOOD','A',3,15,'CHEMISTRY ROAD');
Insert into BOOK (ISBN,BOOKID,STATE,AVALABILITY,DEBYCOST,LOSTCOST,ADDRESS) values ('Z123','B1Z123','GOOD','O',4,20,'COMPUTING ROAD');
Insert into BOOK (ISBN,BOOKID,STATE,AVALABILITY,DEBYCOST,LOSTCOST,ADDRESS) values ('L321','B1L321','NEW','O',4,20,'COMPUTING ROAD');
Insert into BOOK (ISBN,BOOKID,STATE,AVALABILITY,DEBYCOST,LOSTCOST,ADDRESS) values ('P321','B1P321','USED','A',2,12,'CHEMISTRY ROAD');
Insert into BOOK (ISBN,BOOKID,STATE,AVALABILITY,DEBYCOST,LOSTCOST,ADDRESS) values ('A123','B1A188','GOOD','A',5,20,'ARCHEOLOGY ROAD');
REM INSERTING into BRANCH
SET DEFINE OFF;
Insert into BRANCH (NAME,ADDRESS,PHONE) values ('ARCHEOLOGY','ARCHEOLOGY ROAD',645645645);
Insert into BRANCH (NAME,ADDRESS,PHONE) values ('CHEMISTRY','CHEMISTRY ROAD',622622622);
Insert into BRANCH (NAME,ADDRESS,PHONE) values ('COMPUTING','COMPUTING ROAD',644644644);
Insert into BRANCH (NAME,ADDRESS,PHONE) values ('PHYSICS','PHYSICS ROAD',666666666);
REM INSERTING into BRANCHES
SET DEFINE OFF;
Insert into BRANCHES (BRANCH_ID,BRANCH_NAME,CLIENT_ID) values (1,'Branch X',1);
Insert into BRANCHES (BRANCH_ID,BRANCH_NAME,CLIENT_ID) values (2,'Branch Y',2);
Insert into BRANCHES (BRANCH_ID,BRANCH_NAME,CLIENT_ID) values (3,'Branch Z',3);
REM INSERTING into CARD
SET DEFINE OFF;
Insert into CARD (CARDID,STATUS,FINES) values (101,'A',0);
Insert into CARD (CARDID,STATUS,FINES) values (102,'A',0);
Insert into CARD (CARDID,STATUS,FINES) values (103,'A',0);
Insert into CARD (CARDID,STATUS,FINES) values (104,'A',0);
Insert into CARD (CARDID,STATUS,FINES) values (105,'A',0);
Insert into CARD (CARDID,STATUS,FINES) values (106,'A',0);
Insert into CARD (CARDID,STATUS,FINES) values (107,'B',50);
Insert into CARD (CARDID,STATUS,FINES) values (108,'B',10);
Insert into CARD (CARDID,STATUS,FINES) values (109,'A',0);
Insert into CARD (CARDID,STATUS,FINES) values (110,'B',15.25);
Insert into CARD (CARDID,STATUS,FINES) values (151,'A',0);
Insert into CARD (CARDID,STATUS,FINES) values (152,'A',0);
Insert into CARD (CARDID,STATUS,FINES) values (153,'A',0);
Insert into CARD (CARDID,STATUS,FINES) values (154,'A',0);
Insert into CARD (CARDID,STATUS,FINES) values (155,'A',0);
REM INSERTING into CLASS
SET DEFINE OFF;
Insert into CLASS (STUD_ID,NAME,BR_ID,EMAIL,CITY_ID) values (1001,'sai',101,'sai@gmail.com',1);
Insert into CLASS (STUD_ID,NAME,BR_ID,EMAIL,CITY_ID) values (1002,'saibaba',102,'saibabab@gmail.com',2);
Insert into CLASS (STUD_ID,NAME,BR_ID,EMAIL,CITY_ID) values (1003,'bharth',103,'bharth@gmail.com',3);
REM INSERTING into CLIENTS
SET DEFINE OFF;
Insert into CLIENTS (CLIENT_ID,CLIENT_NAME) values (1,'Client A');
Insert into CLIENTS (CLIENT_ID,CLIENT_NAME) values (2,'Client B');
Insert into CLIENTS (CLIENT_ID,CLIENT_NAME) values (3,'Client C');
REM INSERTING into COUNTRIES
SET DEFINE OFF;
REM INSERTING into CUSTOMER
SET DEFINE OFF;
Insert into CUSTOMER (CUSTOMERID,NAME,CUSTOMERADDRESS,PHONE,PASSWORD,USERNAME,DATESIGNUP,CARDNUMBER) values (1,'ALFRED','BACON STREET',623623623,'alfred123','al1',to_date('12-05-18','DD-MM-RR'),101);
Insert into CUSTOMER (CUSTOMERID,NAME,CUSTOMERADDRESS,PHONE,PASSWORD,USERNAME,DATESIGNUP,CARDNUMBER) values (2,'JAMES','DOWNTOWN ABBEY',659659659,'james123','ja2',to_date('10-05-18','DD-MM-RR'),102);
Insert into CUSTOMER (CUSTOMERID,NAME,CUSTOMERADDRESS,PHONE,PASSWORD,USERNAME,DATESIGNUP,CARDNUMBER) values (3,'GEORGE','DETROIT CITY',654654654,'george123','ge3',to_date('21-06-17','DD-MM-RR'),103);
Insert into CUSTOMER (CUSTOMERID,NAME,CUSTOMERADDRESS,PHONE,PASSWORD,USERNAME,DATESIGNUP,CARDNUMBER) values (4,'TOM','WASHINGTON DC.',658658658,'tom123','tom4',to_date('05-12-16','DD-MM-RR'),104);
Insert into CUSTOMER (CUSTOMERID,NAME,CUSTOMERADDRESS,PHONE,PASSWORD,USERNAME,DATESIGNUP,CARDNUMBER) values (5,'PETER','CASTERLY ROCK',652652652,'peter123','pe5',to_date('09-08-16','DD-MM-RR'),105);
Insert into CUSTOMER (CUSTOMERID,NAME,CUSTOMERADDRESS,PHONE,PASSWORD,USERNAME,DATESIGNUP,CARDNUMBER) values (6,'JENNY','TERRAKOTA',651651651,'jenny123','je6',to_date('30-04-17','DD-MM-RR'),106);
Insert into CUSTOMER (CUSTOMERID,NAME,CUSTOMERADDRESS,PHONE,PASSWORD,USERNAME,DATESIGNUP,CARDNUMBER) values (7,'ROSE','SWEET HOME ALABAMA',657657657,'rose123','ro7',to_date('28-02-18','DD-MM-RR'),107);
Insert into CUSTOMER (CUSTOMERID,NAME,CUSTOMERADDRESS,PHONE,PASSWORD,USERNAME,DATESIGNUP,CARDNUMBER) values (8,'MONICA','FAKE STREET 123',639639639,'monica123','mo8',to_date('15-01-16','DD-MM-RR'),108);
Insert into CUSTOMER (CUSTOMERID,NAME,CUSTOMERADDRESS,PHONE,PASSWORD,USERNAME,DATESIGNUP,CARDNUMBER) values (9,'PHOEBE','CENTRAL PERK',678678678,'phoebe123','pho9',to_date('25-03-16','DD-MM-RR'),109);
Insert into CUSTOMER (CUSTOMERID,NAME,CUSTOMERADDRESS,PHONE,PASSWORD,USERNAME,DATESIGNUP,CARDNUMBER) values (10,'RACHEL','WHEREVER',687687687,'rachel123','ra10',to_date('01-09-17','DD-MM-RR'),110);
Insert into CUSTOMER (CUSTOMERID,NAME,CUSTOMERADDRESS,PHONE,PASSWORD,USERNAME,DATESIGNUP,CARDNUMBER) values (131,'sai','yeditha',783564485,'baba@123','ramisetti',to_date('02-05-24','DD-MM-RR'),101);
REM INSERTING into CUSTOMERS
SET DEFINE OFF;
Insert into CUSTOMERS (CUST_ID,NAME,CITY,INDUSTRY_ID) values (101,'Samsung Customer','hyderabab',1);
Insert into CUSTOMERS (CUST_ID,NAME,CITY,INDUSTRY_ID) values (102,'Apple Customer','mumbai',2);
Insert into CUSTOMERS (CUST_ID,NAME,CITY,INDUSTRY_ID) values (103,'Google Customer','bangaluru',3);
REM INSERTING into CUST_ADDRESS
SET DEFINE OFF;
REM INSERTING into CUST_NEW_APPLICATION
SET DEFINE OFF;
Insert into CUST_NEW_APPLICATION (FIRST_NAME,MIDDLE_NAME,LAST_NAME,EMAIL_ID,MOBILE_NUM,GENDER,IFSC_CODE,D_ID,DOC_ID,APP_ID,STATUS,CMNT) values ('satya','sai','baba','baba@gmail.com',9949990012,'m','null',1,711,2024042302,'A','null');
Insert into CUST_NEW_APPLICATION (FIRST_NAME,MIDDLE_NAME,LAST_NAME,EMAIL_ID,MOBILE_NUM,GENDER,IFSC_CODE,D_ID,DOC_ID,APP_ID,STATUS,CMNT) values ('sai','sandhya','sunkara','sai@gmail.com',9849990012,'F','null',2,347,2024042303,'A','null');
Insert into CUST_NEW_APPLICATION (FIRST_NAME,MIDDLE_NAME,LAST_NAME,EMAIL_ID,MOBILE_NUM,GENDER,IFSC_CODE,D_ID,DOC_ID,APP_ID,STATUS,CMNT) values ('prathap','reddy','kami','prathap@gmail.com',9948990012,'M','null',3,789,2024042304,'R','Dupllicate mobile_num');
Insert into CUST_NEW_APPLICATION (FIRST_NAME,MIDDLE_NAME,LAST_NAME,EMAIL_ID,MOBILE_NUM,GENDER,IFSC_CODE,D_ID,DOC_ID,APP_ID,STATUS,CMNT) values ('dasari','bharth','chowdari','dasari@gmail.com',9948990012,'M','null',4,781,2024042305,'R','Duplicate email_id');
Insert into CUST_NEW_APPLICATION (FIRST_NAME,MIDDLE_NAME,LAST_NAME,EMAIL_ID,MOBILE_NUM,GENDER,IFSC_CODE,D_ID,DOC_ID,APP_ID,STATUS,CMNT) values ('sharika','yamani','dasari','dasari@gmail.com',9948990011,'F','null',5,771,2024042306,'R','Duplicate email_id');
Insert into CUST_NEW_APPLICATION (FIRST_NAME,MIDDLE_NAME,LAST_NAME,EMAIL_ID,MOBILE_NUM,GENDER,IFSC_CODE,D_ID,DOC_ID,APP_ID,STATUS,CMNT) values ('HARI','BABU','KONDAPALLI','hari@gmail.com',9573745213,'M','null',6,123,2024042509,'A','null');
REM INSERTING into DEPARTMENTS
SET DEFINE OFF;
REM INSERTING into EMP
SET DEFINE OFF;
Insert into EMP (EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COMM,DEPTNO) values (7369,'SAI','CLERK',7902,to_date('17-12-80','DD-MM-RR'),8000,null,20);
REM INSERTING into EMPLOYEE
SET DEFINE OFF;
Insert into EMPLOYEE (EMPLOYEEID,NAME,EMPLOYEEADDRESS,PHONE,PASSWORD,USERNAME,PAYCHECK,BRANCHNAME,CARDNUMBER) values (211,'ROSS','yousfguda',99124667,'Sai@123','ro11',211,'PHYSICS',101);
Insert into EMPLOYEE (EMPLOYEEID,NAME,EMPLOYEEADDRESS,PHONE,PASSWORD,USERNAME,PAYCHECK,BRANCHNAME,CARDNUMBER) values (212,'CHANDLER','OUR HEARTHS',688688688,'chandler123','chand12',1150.5,'ARCHEOLOGY',102);
Insert into EMPLOYEE (EMPLOYEEID,NAME,EMPLOYEEADDRESS,PHONE,PASSWORD,USERNAME,PAYCHECK,BRANCHNAME,CARDNUMBER) values (213,'JOEY','LITTLE ITAYLY',628628628,'joey123','jo13',975.75,'ARCHEOLOGY',103);
Insert into EMPLOYEE (EMPLOYEEID,NAME,EMPLOYEEADDRESS,PHONE,PASSWORD,USERNAME,PAYCHECK,BRANCHNAME,CARDNUMBER) values (214,'VICTOR','SANTA FE',654321987,'victor123','vic14',2200,'COMPUTING',104);
Insert into EMPLOYEE (EMPLOYEEID,NAME,EMPLOYEEADDRESS,PHONE,PASSWORD,USERNAME,PAYCHECK,BRANCHNAME,CARDNUMBER) values (215,'JAIRO','ARMILLA',698754321,'jairo123','ja15',2200.5,'CHEMISTRY',105);
REM INSERTING into EMPLOYEES
SET DEFINE OFF;
REM INSERTING into HELP
SET DEFINE OFF;
Insert into HELP (TOPIC,SEQ,INFO) values ('@',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('@',2,' @ ("at" sign)');
Insert into HELP (TOPIC,SEQ,INFO) values ('@',3,' -------------');
Insert into HELP (TOPIC,SEQ,INFO) values ('@',4,' Runs the SQL*Plus statements in the specified script. The script can be');
Insert into HELP (TOPIC,SEQ,INFO) values ('@',5,' called from the local file system or a web server.');
Insert into HELP (TOPIC,SEQ,INFO) values ('@',6,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('@',7,' @ {url|file_name[.ext]} [arg ...]');
Insert into HELP (TOPIC,SEQ,INFO) values ('@',8,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('@',9,' where url supports HTTP and FTP protocols in the form:');
Insert into HELP (TOPIC,SEQ,INFO) values ('@',10,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('@',11,'    http://host.domain/script.sql');
Insert into HELP (TOPIC,SEQ,INFO) values ('@',12,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('@@',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('@@',2,' @@ (double "at" sign)');
Insert into HELP (TOPIC,SEQ,INFO) values ('@@',3,' ---------------------');
Insert into HELP (TOPIC,SEQ,INFO) values ('@@',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('@@',5,' Runs the specified script. This command is almost identical to');
Insert into HELP (TOPIC,SEQ,INFO) values ('@@',6,' the @ command. It is useful for running nested scripts because it');
Insert into HELP (TOPIC,SEQ,INFO) values ('@@',7,' has the additional functionality of looking for the nested script');
Insert into HELP (TOPIC,SEQ,INFO) values ('@@',8,' in the same url or path as the calling script.');
Insert into HELP (TOPIC,SEQ,INFO) values ('@@',9,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('@@',10,' @@ {url|file_name[.ext]} [arg ...]');
Insert into HELP (TOPIC,SEQ,INFO) values ('@@',11,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('/',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('/',2,' / (slash)');
Insert into HELP (TOPIC,SEQ,INFO) values ('/',3,' ---------');
Insert into HELP (TOPIC,SEQ,INFO) values ('/',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('/',5,' Executes the most recently executed SQL command or PL/SQL block');
Insert into HELP (TOPIC,SEQ,INFO) values ('/',6,' which is stored in the SQL buffer. Use slash (/) at the command');
Insert into HELP (TOPIC,SEQ,INFO) values ('/',7,' prompt or line number prompt in SQL*Plus command line. The buffer');
Insert into HELP (TOPIC,SEQ,INFO) values ('/',8,' has no command history and does not record SQL*Plus commands.');
Insert into HELP (TOPIC,SEQ,INFO) values ('/',9,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('/',10,' /');
Insert into HELP (TOPIC,SEQ,INFO) values ('/',11,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('ACCEPT',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('ACCEPT',2,' ACCEPT');
Insert into HELP (TOPIC,SEQ,INFO) values ('ACCEPT',3,' ------');
Insert into HELP (TOPIC,SEQ,INFO) values ('ACCEPT',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('ACCEPT',5,' Reads a line of input and stores it in a given substitution variable.');
Insert into HELP (TOPIC,SEQ,INFO) values ('ACCEPT',6,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('ACCEPT',7,' ACC[EPT] variable [NUM[BER] | CHAR | DATE | BINARY_FLOAT | BINARY_DOUBLE]');
Insert into HELP (TOPIC,SEQ,INFO) values ('ACCEPT',8,' [FOR[MAT] format] [DEF[AULT] default] [PROMPT text | NOPR[OMPT]] [HIDE]');
Insert into HELP (TOPIC,SEQ,INFO) values ('ACCEPT',9,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('APPEND',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('APPEND',2,' APPEND');
Insert into HELP (TOPIC,SEQ,INFO) values ('APPEND',3,' ------');
Insert into HELP (TOPIC,SEQ,INFO) values ('APPEND',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('APPEND',5,' Adds text to the end of the current line in the SQL buffer.');
Insert into HELP (TOPIC,SEQ,INFO) values ('APPEND',6,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('APPEND',7,' A[PPEND] text');
Insert into HELP (TOPIC,SEQ,INFO) values ('APPEND',8,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('ARCHIVE LOG',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('ARCHIVE LOG',2,' ARCHIVE LOG');
Insert into HELP (TOPIC,SEQ,INFO) values ('ARCHIVE LOG',3,' -----------');
Insert into HELP (TOPIC,SEQ,INFO) values ('ARCHIVE LOG',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('ARCHIVE LOG',5,' Displays information about redo log files.');
Insert into HELP (TOPIC,SEQ,INFO) values ('ARCHIVE LOG',6,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('ARCHIVE LOG',7,' ARCHIVE LOG LIST');
Insert into HELP (TOPIC,SEQ,INFO) values ('ARCHIVE LOG',8,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('ATTRIBUTE',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('ATTRIBUTE',2,' ATTRIBUTE');
Insert into HELP (TOPIC,SEQ,INFO) values ('ATTRIBUTE',3,' ---------');
Insert into HELP (TOPIC,SEQ,INFO) values ('ATTRIBUTE',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('ATTRIBUTE',5,' Specifies display characteristics for a given attribute of an Object Type');
Insert into HELP (TOPIC,SEQ,INFO) values ('ATTRIBUTE',6,' column, such as the format of NUMBER data. Columns and attributes should');
Insert into HELP (TOPIC,SEQ,INFO) values ('ATTRIBUTE',7,' not have the same names as they share a common namespace. Lists the');
Insert into HELP (TOPIC,SEQ,INFO) values ('ATTRIBUTE',8,' current display characteristics for a single attribute or all attributes.');
Insert into HELP (TOPIC,SEQ,INFO) values ('ATTRIBUTE',9,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('ATTRIBUTE',10,' ATTRIBUTE [type_name.attribute_name [option ... ]]');
Insert into HELP (TOPIC,SEQ,INFO) values ('ATTRIBUTE',11,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('ATTRIBUTE',12,' where option represents one of the following terms or clauses:');
Insert into HELP (TOPIC,SEQ,INFO) values ('ATTRIBUTE',13,'     ALI[AS] alias');
Insert into HELP (TOPIC,SEQ,INFO) values ('ATTRIBUTE',14,'     CLE[AR]');
Insert into HELP (TOPIC,SEQ,INFO) values ('ATTRIBUTE',15,'     FOR[MAT] format');
Insert into HELP (TOPIC,SEQ,INFO) values ('ATTRIBUTE',16,'     LIKE {type_name.attribute_name | alias}');
Insert into HELP (TOPIC,SEQ,INFO) values ('ATTRIBUTE',17,'     ON|OFF');
Insert into HELP (TOPIC,SEQ,INFO) values ('ATTRIBUTE',18,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('BREAK',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('BREAK',2,' BREAK');
Insert into HELP (TOPIC,SEQ,INFO) values ('BREAK',3,' -----');
Insert into HELP (TOPIC,SEQ,INFO) values ('BREAK',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('BREAK',5,' Specifies where changes occur in a report and the formatting');
Insert into HELP (TOPIC,SEQ,INFO) values ('BREAK',6,' action to perform, such as:');
Insert into HELP (TOPIC,SEQ,INFO) values ('BREAK',7,' - suppressing display of duplicate values for a given column');
Insert into HELP (TOPIC,SEQ,INFO) values ('BREAK',8,' - skipping a line each time a given column value changes');
Insert into HELP (TOPIC,SEQ,INFO) values ('BREAK',9,' - printing computed figures each time a given column value');
Insert into HELP (TOPIC,SEQ,INFO) values ('BREAK',10,'   changes or at the end of the report.');
Insert into HELP (TOPIC,SEQ,INFO) values ('BREAK',11,' Enter BREAK with no clauses to list the current BREAK definition.');
Insert into HELP (TOPIC,SEQ,INFO) values ('BREAK',12,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('BREAK',13,' BRE[AK] [ON report_element [action [action]]] ...');
Insert into HELP (TOPIC,SEQ,INFO) values ('BREAK',14,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('BREAK',15,' where report_element has the following syntax:');
Insert into HELP (TOPIC,SEQ,INFO) values ('BREAK',16,'     {column | expression | ROW | REPORT}');
Insert into HELP (TOPIC,SEQ,INFO) values ('BREAK',17,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('BREAK',18,' and where action has the following syntax:');
Insert into HELP (TOPIC,SEQ,INFO) values ('BREAK',19,'     [SKI[P] n | [SKI[P]] PAGE] [NODUP[LICATES] | DUP[LICATES]]');
Insert into HELP (TOPIC,SEQ,INFO) values ('BREAK',20,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('BTITLE',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('BTITLE',2,' BTITLE');
Insert into HELP (TOPIC,SEQ,INFO) values ('BTITLE',3,' ------');
Insert into HELP (TOPIC,SEQ,INFO) values ('BTITLE',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('BTITLE',5,' Places and formats a specified title at the bottom of each report');
Insert into HELP (TOPIC,SEQ,INFO) values ('BTITLE',6,' page, or lists the current BTITLE definition.');
Insert into HELP (TOPIC,SEQ,INFO) values ('BTITLE',7,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('BTITLE',8,' BTI[TLE] [printspec [text|variable] ...] | [OFF|ON]');
Insert into HELP (TOPIC,SEQ,INFO) values ('BTITLE',9,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('BTITLE',10,' where printspec represents one or more of the following clauses:');
Insert into HELP (TOPIC,SEQ,INFO) values ('BTITLE',11,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('BTITLE',12,'     COL n          LE[FT]        BOLD');
Insert into HELP (TOPIC,SEQ,INFO) values ('BTITLE',13,'     S[KIP] [n]     CE[NTER]      FORMAT text');
Insert into HELP (TOPIC,SEQ,INFO) values ('BTITLE',14,'     TAB n          R[IGHT]');
Insert into HELP (TOPIC,SEQ,INFO) values ('BTITLE',15,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('CHANGE',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('CHANGE',2,' CHANGE');
Insert into HELP (TOPIC,SEQ,INFO) values ('CHANGE',3,' ------');
Insert into HELP (TOPIC,SEQ,INFO) values ('CHANGE',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('CHANGE',5,' Changes the first occurrence of the specified text on the current');
Insert into HELP (TOPIC,SEQ,INFO) values ('CHANGE',6,' line of the SQL buffer. The buffer has no command history list and');
Insert into HELP (TOPIC,SEQ,INFO) values ('CHANGE',7,' does not record SQL*Plus commands.');
Insert into HELP (TOPIC,SEQ,INFO) values ('CHANGE',8,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('CHANGE',9,' C[HANGE] sepchar old [sepchar [new[sepchar]]]');
Insert into HELP (TOPIC,SEQ,INFO) values ('CHANGE',10,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('CLEAR',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('CLEAR',2,' CLEAR');
Insert into HELP (TOPIC,SEQ,INFO) values ('CLEAR',3,' -----');
Insert into HELP (TOPIC,SEQ,INFO) values ('CLEAR',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('CLEAR',5,' Resets or erases the current value or setting for the specified option.');
Insert into HELP (TOPIC,SEQ,INFO) values ('CLEAR',6,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('CLEAR',7,' CL[EAR] option ...');
Insert into HELP (TOPIC,SEQ,INFO) values ('CLEAR',8,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('CLEAR',9,' where option represents one of the following clauses:');
Insert into HELP (TOPIC,SEQ,INFO) values ('CLEAR',10,'     BRE[AKS]');
Insert into HELP (TOPIC,SEQ,INFO) values ('CLEAR',11,'     BUFF[ER]');
Insert into HELP (TOPIC,SEQ,INFO) values ('CLEAR',12,'     COL[UMNS]');
Insert into HELP (TOPIC,SEQ,INFO) values ('CLEAR',13,'     COMP[UTES]');
Insert into HELP (TOPIC,SEQ,INFO) values ('CLEAR',14,'     SCR[EEN]');
Insert into HELP (TOPIC,SEQ,INFO) values ('CLEAR',15,'     SQL');
Insert into HELP (TOPIC,SEQ,INFO) values ('CLEAR',16,'     TIMI[NG]');
Insert into HELP (TOPIC,SEQ,INFO) values ('CLEAR',17,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('COLUMN',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('COLUMN',2,' COLUMN');
Insert into HELP (TOPIC,SEQ,INFO) values ('COLUMN',3,' ------');
Insert into HELP (TOPIC,SEQ,INFO) values ('COLUMN',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('COLUMN',5,' Specifies display attributes for a given column, such as:');
Insert into HELP (TOPIC,SEQ,INFO) values ('COLUMN',6,'     - text for the column heading');
Insert into HELP (TOPIC,SEQ,INFO) values ('COLUMN',7,'     - alignment for the column heading');
Insert into HELP (TOPIC,SEQ,INFO) values ('COLUMN',8,'     - format for NUMBER data');
Insert into HELP (TOPIC,SEQ,INFO) values ('COLUMN',9,'     - wrapping of column data');
Insert into HELP (TOPIC,SEQ,INFO) values ('COLUMN',10,' Also lists the current display attributes for a single column');
Insert into HELP (TOPIC,SEQ,INFO) values ('COLUMN',11,' or all columns.');
Insert into HELP (TOPIC,SEQ,INFO) values ('COLUMN',12,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('COLUMN',13,' COL[UMN] [{column | expr} [option ...] ]');
Insert into HELP (TOPIC,SEQ,INFO) values ('COLUMN',14,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('COLUMN',15,' where option represents one of the following clauses:');
Insert into HELP (TOPIC,SEQ,INFO) values ('COLUMN',16,'     ALI[AS] alias');
Insert into HELP (TOPIC,SEQ,INFO) values ('COLUMN',17,'     CLE[AR]');
Insert into HELP (TOPIC,SEQ,INFO) values ('COLUMN',18,'     ENTMAP {ON|OFF}');
Insert into HELP (TOPIC,SEQ,INFO) values ('COLUMN',19,'     FOLD_A[FTER]');
Insert into HELP (TOPIC,SEQ,INFO) values ('COLUMN',20,'     FOLD_B[EFORE]');
Insert into HELP (TOPIC,SEQ,INFO) values ('COLUMN',21,'     FOR[MAT] format');
Insert into HELP (TOPIC,SEQ,INFO) values ('COLUMN',22,'     HEA[DING] text');
Insert into HELP (TOPIC,SEQ,INFO) values ('COLUMN',23,'     JUS[TIFY] {L[EFT] | C[ENTER] | R[IGHT]}');
Insert into HELP (TOPIC,SEQ,INFO) values ('COLUMN',24,'     LIKE {expr | alias}');
Insert into HELP (TOPIC,SEQ,INFO) values ('COLUMN',25,'     NEWL[INE]');
Insert into HELP (TOPIC,SEQ,INFO) values ('COLUMN',26,'     NEW_V[ALUE] variable');
Insert into HELP (TOPIC,SEQ,INFO) values ('COLUMN',27,'     NOPRI[NT] | PRI[NT]');
Insert into HELP (TOPIC,SEQ,INFO) values ('COLUMN',28,'     NUL[L] text');
Insert into HELP (TOPIC,SEQ,INFO) values ('COLUMN',29,'     OLD_V[ALUE] variable');
Insert into HELP (TOPIC,SEQ,INFO) values ('COLUMN',30,'     ON|OFF');
Insert into HELP (TOPIC,SEQ,INFO) values ('COLUMN',31,'     WRA[PPED] | WOR[D_WRAPPED] | TRU[NCATED]');
Insert into HELP (TOPIC,SEQ,INFO) values ('COLUMN',32,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('COMPUTE',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('COMPUTE',2,' COMPUTE');
Insert into HELP (TOPIC,SEQ,INFO) values ('COMPUTE',3,' -------');
Insert into HELP (TOPIC,SEQ,INFO) values ('COMPUTE',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('COMPUTE',5,' In combination with the BREAK command, calculates and prints');
Insert into HELP (TOPIC,SEQ,INFO) values ('COMPUTE',6,' summary lines using various standard computations. Also lists');
Insert into HELP (TOPIC,SEQ,INFO) values ('COMPUTE',7,' all COMPUTE definitions.');
Insert into HELP (TOPIC,SEQ,INFO) values ('COMPUTE',8,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('COMPUTE',9,' COMP[UTE] [function [LAB[EL] text] ...');
Insert into HELP (TOPIC,SEQ,INFO) values ('COMPUTE',10,'   OF {expr|column|alias} ...');
Insert into HELP (TOPIC,SEQ,INFO) values ('COMPUTE',11,'   ON {expr|column|alias|REPORT|ROW} ...]');
Insert into HELP (TOPIC,SEQ,INFO) values ('COMPUTE',12,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('CONNECT',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('CONNECT',2,' CONNECT');
Insert into HELP (TOPIC,SEQ,INFO) values ('CONNECT',3,' -------');
Insert into HELP (TOPIC,SEQ,INFO) values ('CONNECT',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('CONNECT',5,' Connects a given username to the Oracle Database. When you run a');
Insert into HELP (TOPIC,SEQ,INFO) values ('CONNECT',6,' CONNECT command, the site profile, glogin.sql, and the user profile,');
Insert into HELP (TOPIC,SEQ,INFO) values ('CONNECT',7,' login.sql, are processed in that order. CONNECT does not reprompt');
Insert into HELP (TOPIC,SEQ,INFO) values ('CONNECT',8,' for username or password if the initial connection does not succeed.');
Insert into HELP (TOPIC,SEQ,INFO) values ('CONNECT',9,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('CONNECT',10,' CONN[ECT] [{logon|/|proxy}');
Insert into HELP (TOPIC,SEQ,INFO) values ('CONNECT',11,' [AS {SYSASM|SYSBACKUP|SYSDBA|SYSDG|SYSOPER|SYSRAC|SYSKM}]');
Insert into HELP (TOPIC,SEQ,INFO) values ('CONNECT',12,' [edition=value]]');
Insert into HELP (TOPIC,SEQ,INFO) values ('CONNECT',13,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('CONNECT',14,' where logon has the following syntax:');
Insert into HELP (TOPIC,SEQ,INFO) values ('CONNECT',15,'     username[/password][@connect_identifier]');
Insert into HELP (TOPIC,SEQ,INFO) values ('CONNECT',16,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('CONNECT',17,' where proxy has the syntax:');
Insert into HELP (TOPIC,SEQ,INFO) values ('CONNECT',18,'     proxyuser[username][/password][@connect_identifier]');
Insert into HELP (TOPIC,SEQ,INFO) values ('CONNECT',19,' NOTE: Brackets around username in proxy are required syntax');
Insert into HELP (TOPIC,SEQ,INFO) values ('CONNECT',20,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('COPY',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('COPY',2,' COPY');
Insert into HELP (TOPIC,SEQ,INFO) values ('COPY',3,' ----');
Insert into HELP (TOPIC,SEQ,INFO) values ('COPY',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('COPY',5,' Copies data from a query to a table in the same or another');
Insert into HELP (TOPIC,SEQ,INFO) values ('COPY',6,' database. COPY supports CHAR, DATE, LONG, NUMBER and VARCHAR2.');
Insert into HELP (TOPIC,SEQ,INFO) values ('COPY',7,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('COPY',8,' COPY {FROM database | TO database | FROM database TO database}');
Insert into HELP (TOPIC,SEQ,INFO) values ('COPY',9,'            {APPEND|CREATE|INSERT|REPLACE} destination_table');
Insert into HELP (TOPIC,SEQ,INFO) values ('COPY',10,'            [(column, column, column, ...)] USING query');
Insert into HELP (TOPIC,SEQ,INFO) values ('COPY',11,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('COPY',12,' where database has the following syntax:');
Insert into HELP (TOPIC,SEQ,INFO) values ('COPY',13,'     username[/password]@connect_identifier');
Insert into HELP (TOPIC,SEQ,INFO) values ('COPY',14,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('DEFINE',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('DEFINE',2,' DEFINE');
Insert into HELP (TOPIC,SEQ,INFO) values ('DEFINE',3,' ------');
Insert into HELP (TOPIC,SEQ,INFO) values ('DEFINE',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('DEFINE',5,' Specifies a substitution variable and assigns a CHAR value to it, or');
Insert into HELP (TOPIC,SEQ,INFO) values ('DEFINE',6,' lists the value and variable type of a single variable or all variables.');
Insert into HELP (TOPIC,SEQ,INFO) values ('DEFINE',7,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('DEFINE',8,' DEF[INE] [variable] | [variable = text]');
Insert into HELP (TOPIC,SEQ,INFO) values ('DEFINE',9,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('DEL',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('DEL',2,' DEL');
Insert into HELP (TOPIC,SEQ,INFO) values ('DEL',3,' ---');
Insert into HELP (TOPIC,SEQ,INFO) values ('DEL',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('DEL',5,' Deletes one or more lines of the SQL buffer. The buffer has no');
Insert into HELP (TOPIC,SEQ,INFO) values ('DEL',6,' command history list and does not record SQL*Plus commands.');
Insert into HELP (TOPIC,SEQ,INFO) values ('DEL',7,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('DEL',8,' DEL [n | n m | n * | n LAST | * | * n | * LAST | LAST]');
Insert into HELP (TOPIC,SEQ,INFO) values ('DEL',9,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('DESCRIBE',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('DESCRIBE',2,' DESCRIBE');
Insert into HELP (TOPIC,SEQ,INFO) values ('DESCRIBE',3,' --------');
Insert into HELP (TOPIC,SEQ,INFO) values ('DESCRIBE',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('DESCRIBE',5,' Lists the column definitions for a table, view, or synonym,');
Insert into HELP (TOPIC,SEQ,INFO) values ('DESCRIBE',6,' or the specifications for a function or procedure.');
Insert into HELP (TOPIC,SEQ,INFO) values ('DESCRIBE',7,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('DESCRIBE',8,' DESC[RIBE] {[schema.]object[@connect_identifier]}');
Insert into HELP (TOPIC,SEQ,INFO) values ('DESCRIBE',9,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('DISCONNECT',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('DISCONNECT',2,' DISCONNECT');
Insert into HELP (TOPIC,SEQ,INFO) values ('DISCONNECT',3,' ----------');
Insert into HELP (TOPIC,SEQ,INFO) values ('DISCONNECT',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('DISCONNECT',5,' Commits pending changes to the database and logs the current');
Insert into HELP (TOPIC,SEQ,INFO) values ('DISCONNECT',6,' user out of Oracle, but does not exit SQL*Plus.');
Insert into HELP (TOPIC,SEQ,INFO) values ('DISCONNECT',7,' In SQL*Plus command line, use EXIT or QUIT to log out of Oracle');
Insert into HELP (TOPIC,SEQ,INFO) values ('DISCONNECT',8,' and return control to your computer''s operating system.');
Insert into HELP (TOPIC,SEQ,INFO) values ('DISCONNECT',9,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('DISCONNECT',10,' DISC[ONNECT]');
Insert into HELP (TOPIC,SEQ,INFO) values ('DISCONNECT',11,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('EDIT',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('EDIT',2,' EDIT');
Insert into HELP (TOPIC,SEQ,INFO) values ('EDIT',3,' ----');
Insert into HELP (TOPIC,SEQ,INFO) values ('EDIT',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('EDIT',5,' Invokes an operating system text editor on the contents of the');
Insert into HELP (TOPIC,SEQ,INFO) values ('EDIT',6,' specified file or on the contents of the SQL buffer. The buffer');
Insert into HELP (TOPIC,SEQ,INFO) values ('EDIT',7,' has no command history list and does not record SQL*Plus commands.');
Insert into HELP (TOPIC,SEQ,INFO) values ('EDIT',8,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('EDIT',9,' ED[IT] [file_name[.ext]]');
Insert into HELP (TOPIC,SEQ,INFO) values ('EDIT',10,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('EXECUTE',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('EXECUTE',2,' EXECUTE');
Insert into HELP (TOPIC,SEQ,INFO) values ('EXECUTE',3,' -------');
Insert into HELP (TOPIC,SEQ,INFO) values ('EXECUTE',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('EXECUTE',5,' Executes a single PL/SQL statement or runs a stored procedure.');
Insert into HELP (TOPIC,SEQ,INFO) values ('EXECUTE',6,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('EXECUTE',7,' EXEC[UTE] statement');
Insert into HELP (TOPIC,SEQ,INFO) values ('EXECUTE',8,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('EXIT',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('EXIT',2,' EXIT');
Insert into HELP (TOPIC,SEQ,INFO) values ('EXIT',3,' ----');
Insert into HELP (TOPIC,SEQ,INFO) values ('EXIT',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('EXIT',5,' Commits or rolls back all pending changes, logs out of Oracle,');
Insert into HELP (TOPIC,SEQ,INFO) values ('EXIT',6,' terminates SQL*Plus and returns control to the operating system.');
Insert into HELP (TOPIC,SEQ,INFO) values ('EXIT',7,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('EXIT',8,' {EXIT|QUIT} [SUCCESS|FAILURE|WARNING|n|variable|:BindVariable]');
Insert into HELP (TOPIC,SEQ,INFO) values ('EXIT',9,'   [COMMIT|ROLLBACK]');
Insert into HELP (TOPIC,SEQ,INFO) values ('EXIT',10,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('GET',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('GET',2,' GET');
Insert into HELP (TOPIC,SEQ,INFO) values ('GET',3,' ---');
Insert into HELP (TOPIC,SEQ,INFO) values ('GET',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('GET',5,' Loads a SQL statement or PL/SQL block from a script into the SQL buffer.');
Insert into HELP (TOPIC,SEQ,INFO) values ('GET',6,' The buffer has no command history list and does not record SQL*Plus commands.');
Insert into HELP (TOPIC,SEQ,INFO) values ('GET',7,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('GET',8,' GET [FILE] file_name[.ext] [LIST | NOLIST]');
Insert into HELP (TOPIC,SEQ,INFO) values ('GET',9,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('HELP',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('HELP',2,' HELP');
Insert into HELP (TOPIC,SEQ,INFO) values ('HELP',3,' ----');
Insert into HELP (TOPIC,SEQ,INFO) values ('HELP',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('HELP',5,' Accesses this command line help system. Enter HELP INDEX or ? INDEX');
Insert into HELP (TOPIC,SEQ,INFO) values ('HELP',6,' for a list of topics.');
Insert into HELP (TOPIC,SEQ,INFO) values ('HELP',7,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('HELP',8,' You can view SQL*Plus resources at');
Insert into HELP (TOPIC,SEQ,INFO) values ('HELP',9,'     http://www.oracle.com/technology/documentation/');
Insert into HELP (TOPIC,SEQ,INFO) values ('HELP',10,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('HELP',11,' ******************************************************************************');
Insert into HELP (TOPIC,SEQ,INFO) values ('HELP',12,' **  Top 12.2 features:                                                      **');
Insert into HELP (TOPIC,SEQ,INFO) values ('HELP',13,' **    - Fast retrieval of data as CSV for use in applications like          **');
Insert into HELP (TOPIC,SEQ,INFO) values ('HELP',14,' **      SQL*Loader. Use SQLPLUS -M "CSV ON" or SET MARKUP CSV ON            **');
Insert into HELP (TOPIC,SEQ,INFO) values ('HELP',15,' **    - Improved defaults and optimizations for reports. Use SQLPLUS -F     **');
Insert into HELP (TOPIC,SEQ,INFO) values ('HELP',16,' **    - Command recall. Use SET HISTORY ON and HISTORY to list previous     **');
Insert into HELP (TOPIC,SEQ,INFO) values ('HELP',17,' **      commands.                                                           **');
Insert into HELP (TOPIC,SEQ,INFO) values ('HELP',18,' ******************************************************************************');
Insert into HELP (TOPIC,SEQ,INFO) values ('HELP',19,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('HELP',20,' HELP|? [topic]');
Insert into HELP (TOPIC,SEQ,INFO) values ('HELP',21,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('HISTORY',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('HISTORY',2,' HISTORY');
Insert into HELP (TOPIC,SEQ,INFO) values ('HISTORY',3,' -------');
Insert into HELP (TOPIC,SEQ,INFO) values ('HISTORY',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('HISTORY',5,' Stores, lists, executes, edits of the commands');
Insert into HELP (TOPIC,SEQ,INFO) values ('HISTORY',6,' entered during the current SQL*Plus session.');
Insert into HELP (TOPIC,SEQ,INFO) values ('HISTORY',7,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('HISTORY',8,' HIST[ORY] [N {RUN | EDIT | DEL[ETE]}] | [CLEAR]');
Insert into HELP (TOPIC,SEQ,INFO) values ('HISTORY',9,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('HISTORY',10,' N is the entry number listed in the history list.');
Insert into HELP (TOPIC,SEQ,INFO) values ('HISTORY',11,' Use this number to recall, edit or delete the command.');
Insert into HELP (TOPIC,SEQ,INFO) values ('HISTORY',12,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('HISTORY',13,' Example:');
Insert into HELP (TOPIC,SEQ,INFO) values ('HISTORY',14,' HIST 3 RUN - will run the 3rd entry from the list.');
Insert into HELP (TOPIC,SEQ,INFO) values ('HISTORY',15,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('HISTORY',16,' HIST[ORY] without any option will list all entries in the list.');
Insert into HELP (TOPIC,SEQ,INFO) values ('HISTORY',17,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('HOST',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('HOST',2,' HOST');
Insert into HELP (TOPIC,SEQ,INFO) values ('HOST',3,' ----');
Insert into HELP (TOPIC,SEQ,INFO) values ('HOST',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('HOST',5,' Executes an operating system command without leaving SQL*Plus.');
Insert into HELP (TOPIC,SEQ,INFO) values ('HOST',6,' Enter HOST without command to display an operating system prompt.');
Insert into HELP (TOPIC,SEQ,INFO) values ('HOST',7,' You can then enter multiple operating system commands.');
Insert into HELP (TOPIC,SEQ,INFO) values ('HOST',8,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('HOST',9,' HO[ST] [command]');
Insert into HELP (TOPIC,SEQ,INFO) values ('HOST',10,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('INDEX',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('INDEX',2,'Enter Help [topic] for help.');
Insert into HELP (TOPIC,SEQ,INFO) values ('INDEX',3,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('INDEX',4,' @             COPY         PASSWORD                 SHOW');
Insert into HELP (TOPIC,SEQ,INFO) values ('INDEX',5,' @@            DEFINE       PAUSE                    SHUTDOWN');
Insert into HELP (TOPIC,SEQ,INFO) values ('INDEX',6,' /             DEL          PRINT                    SPOOL');
Insert into HELP (TOPIC,SEQ,INFO) values ('INDEX',7,' ACCEPT        DESCRIBE     PROMPT                   SQLPLUS');
Insert into HELP (TOPIC,SEQ,INFO) values ('INDEX',8,' APPEND        DISCONNECT   QUIT                     START');
Insert into HELP (TOPIC,SEQ,INFO) values ('INDEX',9,' ARCHIVE LOG   EDIT         RECOVER                  STARTUP');
Insert into HELP (TOPIC,SEQ,INFO) values ('INDEX',10,' ATTRIBUTE     EXECUTE      REMARK                   STORE');
Insert into HELP (TOPIC,SEQ,INFO) values ('INDEX',11,' BREAK         EXIT         REPFOOTER                TIMING');
Insert into HELP (TOPIC,SEQ,INFO) values ('INDEX',12,' BTITLE        GET          REPHEADER                TTITLE');
Insert into HELP (TOPIC,SEQ,INFO) values ('INDEX',13,' CHANGE        HELP         RESERVED WORDS (SQL)     UNDEFINE');
Insert into HELP (TOPIC,SEQ,INFO) values ('INDEX',14,' CLEAR         HISTORY      RESERVED WORDS (PL/SQL)  VARIABLE');
Insert into HELP (TOPIC,SEQ,INFO) values ('INDEX',15,' COLUMN        HOST         RUN                      WHENEVER OSERROR');
Insert into HELP (TOPIC,SEQ,INFO) values ('INDEX',16,' COMPUTE       INPUT        SAVE                     WHENEVER SQLERROR');
Insert into HELP (TOPIC,SEQ,INFO) values ('INDEX',17,' CONNECT       LIST         SET                      XQUERY');
Insert into HELP (TOPIC,SEQ,INFO) values ('INDEX',18,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('INPUT',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('INPUT',2,' INPUT');
Insert into HELP (TOPIC,SEQ,INFO) values ('INPUT',3,' -----');
Insert into HELP (TOPIC,SEQ,INFO) values ('INPUT',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('INPUT',5,' Adds one or more new lines of text after the current line in the');
Insert into HELP (TOPIC,SEQ,INFO) values ('INPUT',6,' SQL buffer. The buffer has no command history list and does not');
Insert into HELP (TOPIC,SEQ,INFO) values ('INPUT',7,' record SQL*Plus commands.');
Insert into HELP (TOPIC,SEQ,INFO) values ('INPUT',8,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('INPUT',9,' I[NPUT] [text]');
Insert into HELP (TOPIC,SEQ,INFO) values ('INPUT',10,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('LIST',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('LIST',2,' LIST');
Insert into HELP (TOPIC,SEQ,INFO) values ('LIST',3,' ----');
Insert into HELP (TOPIC,SEQ,INFO) values ('LIST',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('LIST',5,' Lists one or more lines of the most recently executed SQL command');
Insert into HELP (TOPIC,SEQ,INFO) values ('LIST',6,' or PL/SQL block which is stored in the SQL buffer. Enter LIST with');
Insert into HELP (TOPIC,SEQ,INFO) values ('LIST',7,' no clauses to list all lines. In SQL*Plus command-line you can also');
Insert into HELP (TOPIC,SEQ,INFO) values ('LIST',8,' use ";" to list all the lines in the SQL buffer. The buffer has no');
Insert into HELP (TOPIC,SEQ,INFO) values ('LIST',9,' command history list and does not record SQL*Plus commands.');
Insert into HELP (TOPIC,SEQ,INFO) values ('LIST',10,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('LIST',11,' L[IST] [n | n m | n  * | n LAST | * | * n | * LAST | LAST]');
Insert into HELP (TOPIC,SEQ,INFO) values ('LIST',12,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('MENU',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('MENU',2,' Menu');
Insert into HELP (TOPIC,SEQ,INFO) values ('MENU',3,' ----');
Insert into HELP (TOPIC,SEQ,INFO) values ('MENU',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('MENU',5,' Enter HELP INDEX for a list of help topics.');
Insert into HELP (TOPIC,SEQ,INFO) values ('MENU',6,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('PASSWORD',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('PASSWORD',2,' PASSWORD');
Insert into HELP (TOPIC,SEQ,INFO) values ('PASSWORD',3,' --------');
Insert into HELP (TOPIC,SEQ,INFO) values ('PASSWORD',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('PASSWORD',5,' Allows you to change a password without displaying it on an input device.');
Insert into HELP (TOPIC,SEQ,INFO) values ('PASSWORD',6,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('PASSWORD',7,' PASSW[ORD] [username]');
Insert into HELP (TOPIC,SEQ,INFO) values ('PASSWORD',8,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('PAUSE',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('PAUSE',2,' PAUSE');
Insert into HELP (TOPIC,SEQ,INFO) values ('PAUSE',3,' -----');
Insert into HELP (TOPIC,SEQ,INFO) values ('PAUSE',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('PAUSE',5,' Displays the specified text then waits for the user to press RETURN.');
Insert into HELP (TOPIC,SEQ,INFO) values ('PAUSE',6,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('PAUSE',7,' PAU[SE] [text]');
Insert into HELP (TOPIC,SEQ,INFO) values ('PAUSE',8,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('PRINT',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('PRINT',2,' PRINT');
Insert into HELP (TOPIC,SEQ,INFO) values ('PRINT',3,' -----');
Insert into HELP (TOPIC,SEQ,INFO) values ('PRINT',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('PRINT',5,' Displays the current values of bind variables, or lists all bind');
Insert into HELP (TOPIC,SEQ,INFO) values ('PRINT',6,' variables.');
Insert into HELP (TOPIC,SEQ,INFO) values ('PRINT',7,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('PRINT',8,' PRINT [variable ...]');
Insert into HELP (TOPIC,SEQ,INFO) values ('PRINT',9,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('PROMPT',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('PROMPT',2,' PROMPT');
Insert into HELP (TOPIC,SEQ,INFO) values ('PROMPT',3,' ------');
Insert into HELP (TOPIC,SEQ,INFO) values ('PROMPT',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('PROMPT',5,' Sends the specified message or a blank line to the user''s screen.');
Insert into HELP (TOPIC,SEQ,INFO) values ('PROMPT',6,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('PROMPT',7,' PRO[MPT] [text]');
Insert into HELP (TOPIC,SEQ,INFO) values ('PROMPT',8,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('QUIT',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('QUIT',2,' QUIT (Identical to EXIT)');
Insert into HELP (TOPIC,SEQ,INFO) values ('QUIT',3,' ----');
Insert into HELP (TOPIC,SEQ,INFO) values ('QUIT',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('QUIT',5,' Commits or rolls back all pending changes, logs out of Oracle,');
Insert into HELP (TOPIC,SEQ,INFO) values ('QUIT',6,' terminates SQL*Plus and returns control to the operating system.');
Insert into HELP (TOPIC,SEQ,INFO) values ('QUIT',7,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('QUIT',8,' {QUIT|EXIT} [SUCCESS|FAILURE|WARNING|n|variable|:BindVariable]');
Insert into HELP (TOPIC,SEQ,INFO) values ('QUIT',9,'   [COMMIT|ROLLBACK]');
Insert into HELP (TOPIC,SEQ,INFO) values ('QUIT',10,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',2,' RECOVER');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',3,' -------');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',5,' Performs media recovery on one or more tablespaces, one or more');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',6,' datafiles, or the entire database.');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',7,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',8,' RECOVER {general | managed} | BEGIN BACKUP | END BACKUP}');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',9,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',10,' where the general clause has the following syntax:');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',11,'   [AUTOMATIC] [FROM location]');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',12,'   { {full_database_recovery | partial_database_recovery |LOGFILE filename}');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',13,'   [ {TEST | ALLOW integer CORRUPTION | parallel_clause}');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',14,'   [TEST | ALLOW integer CORRUPTION | parallel_clause] ...]');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',15,'   |CONTINUE [DEFAULT]|CANCEL}');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',16,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',17,'   where the full_database_recovery clause has the following syntax:');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',18,'     [STANDBY] DATABASE');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',19,'     [{ UNTIL {CANCEL | TIME date | CHANGE integer}');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',20,'      | USING BACKUP CONTROLFILE}');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',21,'      [ UNTIL {CANCEL | TIME date | CHANGE integer}');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',22,'      | USING BACKUP CONTROLFILE] ...]');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',23,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',24,'   where the partial_database_recovery clause has the following syntax:');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',25,'     {TABLESPACE tablespace [, tablespace] ...');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',26,'      | DATAFILE filename | filenumber} [,filename | filenumber] ...');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',27,'      | STANDBY');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',28,'       {TABLESPACE tablespace [, tablespace] ...');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',29,'       | DATAFILE filename | filenumber} [,filename | filenumber] ...}');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',30,'     UNTIL [CONSISTENT WITH] CONTROLFILE }');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',31,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',32,' where the parallel clause has the following syntax:');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',33,'   {NOPARALLEL | PARALLEL [integer]}');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',34,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',35,' where the managed clause has the following syntax:');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',36,'   MANAGED STANDBY DATABASE recover_clause | cancel_clause | finish_clause');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',37,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',38,' where the recover_clause has the following syntax:');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',39,'   {{DISCONNECT [FROM SESSION] | {TIMEOUT integer | NOTIMEOUT} }');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',40,'    |{NODELAY | DEFAULT DELAY | DELAY integer} | NEXT integer');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',41,'    |{EXPIRE integer | NO EXPIRE} | parallel_clause');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',42,'    | USING CURRENT LOGFILE | UNTIL CHANGE integer');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',43,'    | THROUGH {[THREAD integer] SEQUENCE integer');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',44,'              | ALL ARCHIVELOG  | {ALL | LAST | NEXT } SWITCHOVER} }');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',45,'      [DISCONNECT [FROM SESSION ]  | {TIMEOUT integer | NOTIMEOUT}');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',46,'       | {NODELAY | DEFAULT DELAY | DELAY integer} | NEXT integer');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',47,'       | {EXPIRE integer | NO EXPIRE} | parallel_clause');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',48,'       | USING CURRENT LOGFILE | UNTIL CHANGE integer');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',49,'       | THROUGH {[THREAD integer] SEQUENCE integer');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',50,'                 | ALL ARCHIVELOG  | {ALL | LAST | NEXT } SWITCHOVER} ]...');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',51,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',52,' where the cancel_clause has the following syntax:');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',53,'   CANCEL [IMMEDIATE] [WAIT | NOWAIT]');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',54,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',55,' where the finish_clause has the following syntax:');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',56,'   [DISCONNECT [FROM SESSION]] [parallel_clause]');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',57,'   FINISH [SKIP [STANDBY LOGFILE]] [WAIT | NOWAIT]');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',58,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',59,' where the parallel_clause has the following syntax:');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',60,'   {NOPARALLEL | PARALLEL [integer] }');
Insert into HELP (TOPIC,SEQ,INFO) values ('RECOVER',61,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('REMARK',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('REMARK',2,' REMARK');
Insert into HELP (TOPIC,SEQ,INFO) values ('REMARK',3,' ------');
Insert into HELP (TOPIC,SEQ,INFO) values ('REMARK',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('REMARK',5,' Begins a comment in a script. SQL*Plus does not interpret the comment');
Insert into HELP (TOPIC,SEQ,INFO) values ('REMARK',6,' as a command.');
Insert into HELP (TOPIC,SEQ,INFO) values ('REMARK',7,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('REMARK',8,' REM[ARK]');
Insert into HELP (TOPIC,SEQ,INFO) values ('REMARK',9,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('REPFOOTER',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('REPFOOTER',2,' REPFOOTER');
Insert into HELP (TOPIC,SEQ,INFO) values ('REPFOOTER',3,' ---------');
Insert into HELP (TOPIC,SEQ,INFO) values ('REPFOOTER',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('REPFOOTER',5,' Places and formats a footer at the bottom of a report, or lists the');
Insert into HELP (TOPIC,SEQ,INFO) values ('REPFOOTER',6,' REPFOOTER definition.');
Insert into HELP (TOPIC,SEQ,INFO) values ('REPFOOTER',7,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('REPFOOTER',8,' REPF[OOTER] [PAGE] [printspec [text|variable] ...] | [OFF|ON]');
Insert into HELP (TOPIC,SEQ,INFO) values ('REPFOOTER',9,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('REPFOOTER',10,' where printspec represents one or more of the following clauses:');
Insert into HELP (TOPIC,SEQ,INFO) values ('REPFOOTER',11,'     COL n          LE[FT]        BOLD');
Insert into HELP (TOPIC,SEQ,INFO) values ('REPFOOTER',12,'     S[KIP] [n]     CE[NTER]      FORMAT text');
Insert into HELP (TOPIC,SEQ,INFO) values ('REPFOOTER',13,'     TAB n          R[IGHT]');
Insert into HELP (TOPIC,SEQ,INFO) values ('REPFOOTER',14,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('REPHEADER',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('REPHEADER',2,' REPHEADER');
Insert into HELP (TOPIC,SEQ,INFO) values ('REPHEADER',3,' ---------');
Insert into HELP (TOPIC,SEQ,INFO) values ('REPHEADER',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('REPHEADER',5,' Places and formats a header at the top of a report, or lists the');
Insert into HELP (TOPIC,SEQ,INFO) values ('REPHEADER',6,' REPHEADER definition.');
Insert into HELP (TOPIC,SEQ,INFO) values ('REPHEADER',7,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('REPHEADER',8,' REPH[EADER] [PAGE] [printspec [text|variable] ...] | [OFF|ON]');
Insert into HELP (TOPIC,SEQ,INFO) values ('REPHEADER',9,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('REPHEADER',10,' where printspec represents one or more of the following clauses:');
Insert into HELP (TOPIC,SEQ,INFO) values ('REPHEADER',11,'     COL n          LE[FT]        BOLD');
Insert into HELP (TOPIC,SEQ,INFO) values ('REPHEADER',12,'     S[KIP] [n]     CE[NTER]      FORMAT text');
Insert into HELP (TOPIC,SEQ,INFO) values ('REPHEADER',13,'     TAB n          R[IGHT]');
Insert into HELP (TOPIC,SEQ,INFO) values ('REPHEADER',14,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',2,' RESERVED WORDS (SQL)');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',3,' --------------------');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',5,' SQL Reserved Words have special meaning in SQL, and may not be used for');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',6,' identifier names unless enclosed in "quotes".');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',7,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',8,' An asterisk (*) indicates words are also ANSI Reserved Words.');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',9,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',10,' Oracle prefixes implicitly generated schema object and subobject names');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',11,' with "SYS_". To avoid name resolution conflict, Oracle discourages you');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',12,' from prefixing your schema object and subobject names with "SYS_".');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',13,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',14,' ACCESS          DEFAULT*         INTEGER*        ONLINE          START');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',15,' ADD*            DELETE*          INTERSECT*      OPTION*         SUCCESSFUL');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',16,' ALL*            DESC*            INTO*           OR*             SYNONYM');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',17,' ALTER*          DISTINCT*        IS*             ORDER*          SYSDATE');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',18,' AND*            DROP*            LEVEL*          PCTFREE         TABLE*');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',19,' ANY*            ELSE*            LIKE*           PRIOR*          THEN*');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',20,' AS*             EXCLUSIVE        LOCK            PRIVILEGES*     TO*');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',21,' ASC*            EXISTS           LONG            PUBLIC*         TRIGGER');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',22,' AUDIT           FILE             MAXEXTENTS      RAW             UID');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',23,' BETWEEN*        FLOAT*           MINUS           RENAME          UNION*');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',24,' BY*             FOR*             MLSLABEL        RESOURCE        UNIQUE*');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',25,' CHAR*           FROM*            MODE            REVOKE*         UPDATE*');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',26,' CHECK*          GRANT*           MODIFY          ROW             USER*');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',27,' CLUSTER         GROUP*           NOAUDIT         ROWID           VALIDATE');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',28,' COLUMN          HAVING*          NOCOMPRESS      ROWNUM          VALUES*');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',29,' COMMENT         IDENTIFIED       NOT*            ROWS*           VARCHAR*');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',30,' COMPRESS        IMMEDIATE*       NOWAIT          SELECT*         VARCHAR2');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',31,' CONNECT*        IN*              NULL*           SESSION*        VIEW*');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',32,' CREATE*         INCREMENT        NUMBER          SET*            WHENEVER*');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',33,' CURRENT*        INDEX            OF*             SHARE           WHERE');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',34,' DATE*           INITIAL          OFFLINE         SIZE*           WITH*');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',35,' DECIMAL*        INSERT*          ON*             SMALLINT*');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (SQL)',36,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',2,' RESERVED WORDS (PL/SQL)');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',3,' -----------------------');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',5,' PL/SQL Reserved Words have special meaning in PL/SQL, and may not be used');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',6,' for identifier names (unless enclosed in "quotes").');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',7,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',8,' An asterisk (*) indicates words are also SQL Reserved Words.');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',9,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',10,' ALL*            DESC*           JAVA            PACKAGE         SUBTYPE');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',11,' ALTER*          DISTINCT*       LEVEL*          PARTITION       SUCCESSFUL*');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',12,' AND*            DO              LIKE*           PCTFREE*        SUM');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',13,' ANY*            DROP*           LIMITED         PLS_INTEGER     SYNONYM*');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',14,' ARRAY           ELSE*           LOCK*           POSITIVE        SYSDATE*');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',15,' AS*             ELSIF           LONG*           POSITIVEN       TABLE*');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',16,' ASC*            END             LOOP            PRAGMA          THEN*');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',17,' AT              EXCEPTION       MAX             PRIOR*          TIME');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',18,' AUTHID          EXCLUSIVE*      MIN             PRIVATE         TIMESTAMP');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',19,' AVG             EXECUTE         MINUS*          PROCEDURE       TIMEZONE_ABBR');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',20,' BEGIN           EXISTS*         MINUTE          PUBLIC*         TIMEZONE_HOUR');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',21,' BETWEEN*        EXIT            MLSLABEL*       RAISE           TIMEZONE_MINUTE');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',22,' BINARY_INTEGER  EXTENDS         MOD             RANGE           TIMEZONE_REGION');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',23,' BODY            EXTRACT         MODE*           RAW*            TO*');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',24,' BOOLEAN         FALSE           MONTH           REAL            TRIGGER*');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',25,' BULK            FETCH           NATURAL         RECORD          TRUE');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',26,' BY*             FLOAT*          NATURALN        REF             TYPE');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',27,' CHAR*           FOR*            NEW             RELEASE         UI');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',28,' CHAR_BASE       FORALL          NEXTVAL         RETURN          UNION*');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',29,' CHECK*          FROM*           NOCOPY          REVERSE         UNIQUE*');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',30,' CLOSE           FUNCTION        NOT*            ROLLBACK        UPDATE*');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',31,' CLUSTER*        GOTO            NOWAIT*         ROW*            USE');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',32,' COALESCE        GROUP*          NULL*           ROWID*          USER*');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',33,' COLLECT         HAVING*         NULLIF          ROWNUM*         VALIDATE*');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',34,' COMMENT*        HEAP            NUMBER*         ROWTYPE         VALUES*');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',35,' COMMIT          HOUR            NUMBER_BASE     SAVEPOINT       VARCHAR*');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',36,' COMPRESS*       IF              OCIROWID        SECOND          VARCHAR2*');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',37,' CONNECT*        IMMEDIATE*      OF*             SELECT*         VARIANCE');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',38,' CONSTANT        IN*             ON*             SEPERATE        VIEW*');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',39,' CREATE*         INDEX*          OPAQUE          SET*            WHEN');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',40,' CURRENT*        INDICATOR       OPEN            SHARE*          WHENEVER*');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',41,' CURRVAL         INSERT*         OPERATOR        SMALLINT*       WHERE*');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',42,' CURSOR          INTEGER*        OPTION*         SPACE           WHILE');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',43,' DATE*           INTERFACE       OR*             SQL             WITH*');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',44,' DAY             INTERSECT*      ORDER*          SQLCODE         WORK');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',45,' DECIMAL*        INTERVAL        ORGANIZATION    SQLERRM         WRITE');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',46,' DECLARE         INTO*           OTHERS          START*          YEAR');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',47,' DEFAULT*        IS*             OUT             STDDEV          ZONE');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',48,' DELETE*         ISOLATION');
Insert into HELP (TOPIC,SEQ,INFO) values ('RESERVED WORDS (PL/SQL)',49,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('RUN',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('RUN',2,' RUN');
Insert into HELP (TOPIC,SEQ,INFO) values ('RUN',3,' ---');
Insert into HELP (TOPIC,SEQ,INFO) values ('RUN',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('RUN',5,' Lists and executes the most recently executed SQL command or');
Insert into HELP (TOPIC,SEQ,INFO) values ('RUN',6,' PL/SQL block which is stored in the SQL buffer. The buffer has');
Insert into HELP (TOPIC,SEQ,INFO) values ('RUN',7,' no command history list and does not record SQL*Plus commands.');
Insert into HELP (TOPIC,SEQ,INFO) values ('RUN',8,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('RUN',9,' R[UN]');
Insert into HELP (TOPIC,SEQ,INFO) values ('RUN',10,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('SAVE',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('SAVE',2,' SAVE');
Insert into HELP (TOPIC,SEQ,INFO) values ('SAVE',3,' ----');
Insert into HELP (TOPIC,SEQ,INFO) values ('SAVE',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('SAVE',5,' Saves the contents of the SQL buffer in a script. The');
Insert into HELP (TOPIC,SEQ,INFO) values ('SAVE',6,' buffer has no command history list and does not record SQL*Plus commands.');
Insert into HELP (TOPIC,SEQ,INFO) values ('SAVE',7,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('SAVE',8,' SAV[E] [FILE] file_name[.ext] [CRE[ATE] | REP[LACE] | APP[END]]');
Insert into HELP (TOPIC,SEQ,INFO) values ('SAVE',9,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',2,' SET');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',3,' ---');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',5,' Sets a system variable to alter the SQL*Plus environment settings');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',6,' for your current session. For example, to:');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',7,'     -   set the display width for data');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',8,'     -   customize HTML formatting');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',9,'     -   enable or disable printing of column headings');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',10,'     -   set the number of lines per page');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',11,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',12,' SET system_variable value');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',13,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',14,' where system_variable and value represent one of the following clauses:');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',15,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',16,'   APPI[NFO]{OFF|ON|text}                   NEWP[AGE] {1|n|NONE}');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',17,'   ARRAY[SIZE] {15|n}                       NULL text');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',18,'   AUTO[COMMIT] {OFF|ON|IMM[EDIATE]|n}      NUMF[ORMAT] format');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',19,'   AUTOP[RINT] {OFF|ON}                     NUM[WIDTH] {10|n}');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',20,'   AUTORECOVERY {OFF|ON}                    PAGES[IZE] {14|n}');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',21,'   AUTOT[RACE] {OFF|ON|TRACE[ONLY]}         PAU[SE] {OFF|ON|text}');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',22,'     [EXP[LAIN]] [STAT[ISTICS]]             RECSEP {WR[APPED]|EA[CH]|OFF}');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',23,'   BLO[CKTERMINATOR] {.|c|ON|OFF}           RECSEPCHAR {_|c}');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',24,'   CMDS[EP] {;|c|OFF|ON}                    ROWPREF[ETCH] {n}');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',25,'   COLINVI[SIBLE] {OFF|ON}                  SERVEROUT[PUT] {ON|OFF}');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',26,'   COLSEP {_|text}                            [SIZE {n | UNLIMITED}]|');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',27,'   CON[CAT] {.|c|ON|OFF}                      [FOR[MAT]  {WRA[PPED]|');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',28,'   COPYC[OMMIT] {0|n}                          WOR[D_WRAPPED]|TRU[NCATED]}]');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',29,'   COPYTYPECHECK {ON|OFF}                   SHIFT[INOUT] {VIS[IBLE] |');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',30,'   DEF[INE] {&|c|ON|OFF}                      INV[ISIBLE]}');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',31,'   DESCRIBE [DEPTH {1|n|ALL}]               SHOW[MODE] {OFF|ON}');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',32,'     [LINENUM {OFF|ON}] [INDENT {OFF|ON}]   SQLBL[ANKLINES] {OFF|ON}');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',33,'   ECHO {OFF|ON}                            SQLC[ASE] {MIX[ED] |');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',34,'   EDITF[ILE] file_name[.ext]                 LO[WER] | UP[PER]}');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',35,'   EMB[EDDED] {OFF|ON}                      SQLCO[NTINUE] {> | text}');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',36,'   ERRORL[OGGING] {ON|OFF}                  SQLN[UMBER] {ON|OFF}');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',37,'     [TABLE [schema.]tablename]             SQLPLUSCOMPAT[IBILITY] {x.y[.z]}');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',38,'     [TRUNCATE] [IDENTIFIER identifier]     SQLPRE[FIX] {#|c}');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',39,'   ESC[APE] {\|c|OFF|ON}                    SQLP[ROMPT] {SQL>|text}');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',40,'   ESCCHAR {@|?|%|$|OFF}                    SQLT[ERMINATOR] {;|c|ON|OFF}');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',41,'   EXITC[OMMIT] {ON|OFF}                    STATEMENTC[ACHE] {n}');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',42,'   FEED[BACK] {6|n|ON|OFF|ONLY}[SQL_ID]     SUF[FIX] {SQL|text}');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',43,'   FLAGGER {OFF|ENTRY|INTERMED[IATE]|FULL}  TAB {ON|OFF}');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',44,'   FLU[SH] {ON|OFF}                         TERM[OUT] {ON|OFF}');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',45,'   HEA[DING] {ON|OFF}                       TI[ME] {OFF|ON}');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',46,'   HEADS[EP] {||c|ON|OFF}                   TIMI[NG] {OFF|ON}');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',47,'   HIST[ORY] {ON|OFF|N}                     TRIM[OUT] {ON|OFF}');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',48,'   INSTANCE [instance_path|LOCAL]           TRIMS[POOL] {OFF|ON}');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',49,'   LIN[ESIZE] {80|n|WINDOW}                 UND[ERLINE] {-|c|ON|OFF}');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',50,'   LOBOF[FSET] {1|n}                        VER[IFY] {ON|OFF}');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',51,'   LOBPREF[ETCH] {n}                        WRA[P] {ON|OFF}');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',52,'   LOGSOURCE [pathname]                     XQUERY {BASEURI text|');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',53,'   LONG {80|n}                                ORDERING{UNORDERED|');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',54,'   LONGC[HUNKSIZE] {80|n}                     ORDERED|DEFAULT}|');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',55,'   MARK[UP] {HTML html_option|CSV csv_option} NODE{BYVALUE|BYREFERENCE|');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',56,'     html_option;                             DEFAULT}|CONTEXT text}');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',57,'       {ON|OFF} [HEAD text] [BODY text]');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',58,'       [TABLE {ON|OFF}] [ENTMAP {ON|OFF}]');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',59,'       [SPOOL {ON|OFF}] [PRE[FORMAT] {ON|OFF}]');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',60,'     csv_option:');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',61,'       {ON|OFF} [DELIM[ITER] {c}]');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',62,'       [QUOTE {ON|OFF}]');
Insert into HELP (TOPIC,SEQ,INFO) values ('SET',63,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('SHOW',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('SHOW',2,' SHOW');
Insert into HELP (TOPIC,SEQ,INFO) values ('SHOW',3,' ----');
Insert into HELP (TOPIC,SEQ,INFO) values ('SHOW',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('SHOW',5,' Shows the value of a SQL*Plus system variable, or the current');
Insert into HELP (TOPIC,SEQ,INFO) values ('SHOW',6,' SQL*Plus environment. SHOW SGA requires a DBA privileged login.');
Insert into HELP (TOPIC,SEQ,INFO) values ('SHOW',7,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('SHOW',8,' SHO[W] option');
Insert into HELP (TOPIC,SEQ,INFO) values ('SHOW',9,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('SHOW',10,' where option represents one of the following terms or clauses:');
Insert into HELP (TOPIC,SEQ,INFO) values ('SHOW',11,'     system_variable');
Insert into HELP (TOPIC,SEQ,INFO) values ('SHOW',12,'     ALL');
Insert into HELP (TOPIC,SEQ,INFO) values ('SHOW',13,'     BTI[TLE]');
Insert into HELP (TOPIC,SEQ,INFO) values ('SHOW',14,'     CON_ID');
Insert into HELP (TOPIC,SEQ,INFO) values ('SHOW',15,'     CON_NAME');
Insert into HELP (TOPIC,SEQ,INFO) values ('SHOW',16,'     EDITION');
Insert into HELP (TOPIC,SEQ,INFO) values ('SHOW',17,'     ERR[ORS] [{ANALYTIC VIEW | ATTRIBUTE DIMENSION | HIERARCHY | FUNCTION');
Insert into HELP (TOPIC,SEQ,INFO) values ('SHOW',18,'        | PROCEDURE | PACKAGE | PACKAGE BODY | TRIGGER | VIEW | TYPE');
Insert into HELP (TOPIC,SEQ,INFO) values ('SHOW',19,'        | TYPE BODY | DIMENSION | JAVA CLASS} [schema.]name]');
Insert into HELP (TOPIC,SEQ,INFO) values ('SHOW',20,'     LNO');
Insert into HELP (TOPIC,SEQ,INFO) values ('SHOW',21,'     PARAMETERS [parameter_name]');
Insert into HELP (TOPIC,SEQ,INFO) values ('SHOW',22,'     PDBS');
Insert into HELP (TOPIC,SEQ,INFO) values ('SHOW',23,'     PNO');
Insert into HELP (TOPIC,SEQ,INFO) values ('SHOW',24,'     RECYC[LEBIN] [original_name]');
Insert into HELP (TOPIC,SEQ,INFO) values ('SHOW',25,'     REL[EASE]');
Insert into HELP (TOPIC,SEQ,INFO) values ('SHOW',26,'     REPF[OOTER]');
Insert into HELP (TOPIC,SEQ,INFO) values ('SHOW',27,'     REPH[EADER]');
Insert into HELP (TOPIC,SEQ,INFO) values ('SHOW',28,'     SGA');
Insert into HELP (TOPIC,SEQ,INFO) values ('SHOW',29,'     SPOO[L]');
Insert into HELP (TOPIC,SEQ,INFO) values ('SHOW',30,'     SPPARAMETERS [parameter_name]');
Insert into HELP (TOPIC,SEQ,INFO) values ('SHOW',31,'     SQLCODE');
Insert into HELP (TOPIC,SEQ,INFO) values ('SHOW',32,'     TTI[TLE]');
Insert into HELP (TOPIC,SEQ,INFO) values ('SHOW',33,'     USER');
Insert into HELP (TOPIC,SEQ,INFO) values ('SHOW',34,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('SHUTDOWN',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('SHUTDOWN',2,' SHUTDOWN');
Insert into HELP (TOPIC,SEQ,INFO) values ('SHUTDOWN',3,' --------');
Insert into HELP (TOPIC,SEQ,INFO) values ('SHUTDOWN',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('SHUTDOWN',5,' Shuts down a currently running Oracle Database instance, optionally');
Insert into HELP (TOPIC,SEQ,INFO) values ('SHUTDOWN',6,' closing and dismounting a database.');
Insert into HELP (TOPIC,SEQ,INFO) values ('SHUTDOWN',7,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('SHUTDOWN',8,' SHUTDOWN [ABORT|IMMEDIATE|NORMAL|TRANSACTIONAL [LOCAL]]');
Insert into HELP (TOPIC,SEQ,INFO) values ('SHUTDOWN',9,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('SPOOL',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('SPOOL',2,' SPOOL');
Insert into HELP (TOPIC,SEQ,INFO) values ('SPOOL',3,' -----');
Insert into HELP (TOPIC,SEQ,INFO) values ('SPOOL',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('SPOOL',5,' Stores query results in a file, or optionally sends the file to a printer.');
Insert into HELP (TOPIC,SEQ,INFO) values ('SPOOL',6,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('SPOOL',7,' SPO[OL] [file_name[.ext] [CRE[ATE] | REP[LACE] | APP[END]] | OFF | OUT]');
Insert into HELP (TOPIC,SEQ,INFO) values ('SPOOL',8,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',2,' SQLPLUS');
Insert into HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',3,' -------');
Insert into HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',5,' Starts SQL*Plus from the operating system prompt.');
Insert into HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',6,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',7,' SQLPLUS [ [option] [logon|/NOLOG] [start] ]');
Insert into HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',8,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',9,' where option has the following syntax:');
Insert into HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',10,'     -H[ELP]');
Insert into HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',11,'     | -V[ERSION]');
Insert into HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',12,'     | [[-C[OMPATIBILITY] x.y[.z]] [-L[OGON]]');
Insert into HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',13,'        [-M[ARKUP] markup_option] [-NOLOGINTIME] [-R[ESTRICT] {1|2|3}]');
Insert into HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',14,'	[-S[ILENT]] ]');
Insert into HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',15,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',16,' and where markup_option has the following syntax:');
Insert into HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',17,'     {HTML html_options|CSV csv_options}');
Insert into HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',18,'     See SET MARKUP command for detailed HTML and CSV options');
Insert into HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',19,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',20,' and where logon has the following syntax:');
Insert into HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',21,'     {username[/password][@connect_identifier] | /}');
Insert into HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',22,'     [AS {SYSASM|SYSBACKUP|SYSDBA|SYSDG|SYSOPER|SYSRAC|SYSKM}]');
Insert into HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',23,'     [edition=value]');
Insert into HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',24,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',25,' and where start has the following syntax:');
Insert into HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',26,'     @{url|filename[.ext]} [arg ...]');
Insert into HELP (TOPIC,SEQ,INFO) values ('SQLPLUS',27,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('START',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('START',2,' START');
Insert into HELP (TOPIC,SEQ,INFO) values ('START',3,' -----');
Insert into HELP (TOPIC,SEQ,INFO) values ('START',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('START',5,' Runs the SQL*Plus statements in the specified script. The script can be');
Insert into HELP (TOPIC,SEQ,INFO) values ('START',6,' called from the local file system or a web server.');
Insert into HELP (TOPIC,SEQ,INFO) values ('START',7,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('START',8,' STA[RT] {url|file_name[.ext]} [arg ...]');
Insert into HELP (TOPIC,SEQ,INFO) values ('START',9,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('START',10,' where url supports HTTP and FTP protocols in the form:');
Insert into HELP (TOPIC,SEQ,INFO) values ('START',11,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('START',12,'    http://host.domain/script.sql');
Insert into HELP (TOPIC,SEQ,INFO) values ('START',13,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('STARTUP',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('STARTUP',2,' STARTUP');
Insert into HELP (TOPIC,SEQ,INFO) values ('STARTUP',3,' -------');
Insert into HELP (TOPIC,SEQ,INFO) values ('STARTUP',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('STARTUP',5,' Starts an Oracle instance with several options, including mounting,');
Insert into HELP (TOPIC,SEQ,INFO) values ('STARTUP',6,' and opening a database.');
Insert into HELP (TOPIC,SEQ,INFO) values ('STARTUP',7,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('STARTUP',8,' STARTUP db_options | cdb_options | upgrade_options');
Insert into HELP (TOPIC,SEQ,INFO) values ('STARTUP',9,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('STARTUP',10,' where db_options has the following syntax:');
Insert into HELP (TOPIC,SEQ,INFO) values ('STARTUP',11,'    [FORCE] [RESTRICT] [PFILE=filename] [QUIET] [ MOUNT [dbname] |');
Insert into HELP (TOPIC,SEQ,INFO) values ('STARTUP',12,'    [ OPEN [open_db_options] [dbname] ] |');
Insert into HELP (TOPIC,SEQ,INFO) values ('STARTUP',13,'    NOMOUNT ]');
Insert into HELP (TOPIC,SEQ,INFO) values ('STARTUP',14,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('STARTUP',15,'    where open_db_options has the following syntax:');
Insert into HELP (TOPIC,SEQ,INFO) values ('STARTUP',16,'       READ {ONLY | WRITE [RECOVER]} | RECOVER');
Insert into HELP (TOPIC,SEQ,INFO) values ('STARTUP',17,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('STARTUP',18,' where cdb_options has the following syntax:');
Insert into HELP (TOPIC,SEQ,INFO) values ('STARTUP',19,'    root_connection_options | pdb_connection_options');
Insert into HELP (TOPIC,SEQ,INFO) values ('STARTUP',20,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('STARTUP',21,' where root_connection_options has the following syntax:');
Insert into HELP (TOPIC,SEQ,INFO) values ('STARTUP',22,'    PLUGGABLE DATABASE pdbname');
Insert into HELP (TOPIC,SEQ,INFO) values ('STARTUP',23,'    [FORCE] [RESTRICT] | [OPEN [open_pdb_options]]');
Insert into HELP (TOPIC,SEQ,INFO) values ('STARTUP',24,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('STARTUP',25,' where pdb_connection_options has the following syntax:');
Insert into HELP (TOPIC,SEQ,INFO) values ('STARTUP',26,'    [FORCE] [RESTRICT] | [OPEN [open_pdb_options]]');
Insert into HELP (TOPIC,SEQ,INFO) values ('STARTUP',27,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('STARTUP',28,'    where open_pdb_options has the following syntax:');
Insert into HELP (TOPIC,SEQ,INFO) values ('STARTUP',29,'       READ WRITE | READ ONLY');
Insert into HELP (TOPIC,SEQ,INFO) values ('STARTUP',30,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('STARTUP',31,' and where upgrade_options has the following syntax:');
Insert into HELP (TOPIC,SEQ,INFO) values ('STARTUP',32,'    [PFILE=filename] {UPGRADE | DOWNGRADE} [QUIET]');
Insert into HELP (TOPIC,SEQ,INFO) values ('STARTUP',33,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('STORE',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('STORE',2,' STORE');
Insert into HELP (TOPIC,SEQ,INFO) values ('STORE',3,' -----');
Insert into HELP (TOPIC,SEQ,INFO) values ('STORE',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('STORE',5,' Saves attributes of the current SQL*Plus environment in a script.');
Insert into HELP (TOPIC,SEQ,INFO) values ('STORE',6,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('STORE',7,' STORE {SET} file_name[.ext] [CRE[ATE] | REP[LACE] | APP[END]]');
Insert into HELP (TOPIC,SEQ,INFO) values ('STORE',8,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('TIMING',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('TIMING',2,' TIMING');
Insert into HELP (TOPIC,SEQ,INFO) values ('TIMING',3,' ------');
Insert into HELP (TOPIC,SEQ,INFO) values ('TIMING',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('TIMING',5,' Records timing data for an elapsed time period, lists the current');
Insert into HELP (TOPIC,SEQ,INFO) values ('TIMING',6,' timer''s name and timing data, or lists the number of active timers.');
Insert into HELP (TOPIC,SEQ,INFO) values ('TIMING',7,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('TIMING',8,' TIMI[NG] [START text|SHOW|STOP]');
Insert into HELP (TOPIC,SEQ,INFO) values ('TIMING',9,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('TTITLE',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('TTITLE',2,' TTITLE');
Insert into HELP (TOPIC,SEQ,INFO) values ('TTITLE',3,' ------');
Insert into HELP (TOPIC,SEQ,INFO) values ('TTITLE',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('TTITLE',5,' Places and formats a title at the top of each report page.');
Insert into HELP (TOPIC,SEQ,INFO) values ('TTITLE',6,' Enter TTITLE with no clause to list its current definition.');
Insert into HELP (TOPIC,SEQ,INFO) values ('TTITLE',7,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('TTITLE',8,' The old form of TTITLE is used if only a single word or');
Insert into HELP (TOPIC,SEQ,INFO) values ('TTITLE',9,' a string in quotes follows the TTITLE command.');
Insert into HELP (TOPIC,SEQ,INFO) values ('TTITLE',10,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('TTITLE',11,' TTI[TLE] [printspec [text|variable] ...] | [OFF|ON]');
Insert into HELP (TOPIC,SEQ,INFO) values ('TTITLE',12,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('TTITLE',13,' where printspec represents one or more of the following clauses:');
Insert into HELP (TOPIC,SEQ,INFO) values ('TTITLE',14,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('TTITLE',15,'     COL n          LE[FT]        BOLD');
Insert into HELP (TOPIC,SEQ,INFO) values ('TTITLE',16,'     S[KIP] [n]     CE[NTER]      FORMAT text');
Insert into HELP (TOPIC,SEQ,INFO) values ('TTITLE',17,'     TAB n          R[IGHT]');
Insert into HELP (TOPIC,SEQ,INFO) values ('TTITLE',18,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('UNDEFINE',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('UNDEFINE',2,' UNDEFINE');
Insert into HELP (TOPIC,SEQ,INFO) values ('UNDEFINE',3,' --------');
Insert into HELP (TOPIC,SEQ,INFO) values ('UNDEFINE',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('UNDEFINE',5,' Deletes one or more substitution variables that you defined either');
Insert into HELP (TOPIC,SEQ,INFO) values ('UNDEFINE',6,' explicitly (with the DEFINE command), or implicitly (with a START');
Insert into HELP (TOPIC,SEQ,INFO) values ('UNDEFINE',7,' command argument).');
Insert into HELP (TOPIC,SEQ,INFO) values ('UNDEFINE',8,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('UNDEFINE',9,' UNDEF[INE] variable ...');
Insert into HELP (TOPIC,SEQ,INFO) values ('UNDEFINE',10,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('VARIABLE',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('VARIABLE',2,' VARIABLE');
Insert into HELP (TOPIC,SEQ,INFO) values ('VARIABLE',3,' --------');
Insert into HELP (TOPIC,SEQ,INFO) values ('VARIABLE',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('VARIABLE',5,' Declares a bind variable that can be referenced in PL/SQL, or');
Insert into HELP (TOPIC,SEQ,INFO) values ('VARIABLE',6,' lists the current display characteristics for a single variable');
Insert into HELP (TOPIC,SEQ,INFO) values ('VARIABLE',7,' or all variables.');
Insert into HELP (TOPIC,SEQ,INFO) values ('VARIABLE',8,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('VARIABLE',9,' VAR[IABLE] [<variable> [type][=value]]');
Insert into HELP (TOPIC,SEQ,INFO) values ('VARIABLE',10,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('VARIABLE',11,' where type represents one of the following:');
Insert into HELP (TOPIC,SEQ,INFO) values ('VARIABLE',12,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('VARIABLE',13,'     NUMBER         CHAR          CHAR (n [CHAR|BYTE])');
Insert into HELP (TOPIC,SEQ,INFO) values ('VARIABLE',14,'     NCHAR          NCHAR (n)     VARCHAR2 (n [CHAR|BYTE])');
Insert into HELP (TOPIC,SEQ,INFO) values ('VARIABLE',15,'     NVARCHAR2 (n)  CLOB          NCLOB');
Insert into HELP (TOPIC,SEQ,INFO) values ('VARIABLE',16,'     REFCURSOR      BINARY_FLOAT  BINARY_DOUBLE');
Insert into HELP (TOPIC,SEQ,INFO) values ('VARIABLE',17,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('VARIABLE',18,' One can assign value to a variable for input with the new syntax');
Insert into HELP (TOPIC,SEQ,INFO) values ('VARIABLE',19,' Example:');
Insert into HELP (TOPIC,SEQ,INFO) values ('VARIABLE',20,'   VARIABLE tmp_var VAHRCHAR2(10)=Smith');
Insert into HELP (TOPIC,SEQ,INFO) values ('VARIABLE',21,'   or');
Insert into HELP (TOPIC,SEQ,INFO) values ('VARIABLE',22,'   VARIABLE tmp_var VAHRCHAR2(10)');
Insert into HELP (TOPIC,SEQ,INFO) values ('VARIABLE',23,'   VARIABLE tmp_var=Smith');
Insert into HELP (TOPIC,SEQ,INFO) values ('VARIABLE',24,'   EXECUTE DBMS_OUTPUT.PUT_LINE(:tmp_var)');
Insert into HELP (TOPIC,SEQ,INFO) values ('VARIABLE',25,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('WHENEVER OSERROR',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('WHENEVER OSERROR',2,' WHENEVER OSERROR');
Insert into HELP (TOPIC,SEQ,INFO) values ('WHENEVER OSERROR',3,' ----------------');
Insert into HELP (TOPIC,SEQ,INFO) values ('WHENEVER OSERROR',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('WHENEVER OSERROR',5,' Performs the specified action (exits SQL*Plus by default) if an');
Insert into HELP (TOPIC,SEQ,INFO) values ('WHENEVER OSERROR',6,' operating system error occurs (such as a file writing error).');
Insert into HELP (TOPIC,SEQ,INFO) values ('WHENEVER OSERROR',7,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('WHENEVER OSERROR',8,' WHENEVER OSERROR {EXIT [SUCCESS|FAILURE|n|variable|:BindVariable]');
Insert into HELP (TOPIC,SEQ,INFO) values ('WHENEVER OSERROR',9,'                   [COMMIT|ROLLBACK] | CONTINUE [COMMIT|ROLLBACK|NONE]}');
Insert into HELP (TOPIC,SEQ,INFO) values ('WHENEVER OSERROR',10,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('WHENEVER SQLERROR',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('WHENEVER SQLERROR',2,' WHENEVER SQLERROR');
Insert into HELP (TOPIC,SEQ,INFO) values ('WHENEVER SQLERROR',3,' -----------------');
Insert into HELP (TOPIC,SEQ,INFO) values ('WHENEVER SQLERROR',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('WHENEVER SQLERROR',5,' Performs the specified action (exits SQL*Plus by default) if a');
Insert into HELP (TOPIC,SEQ,INFO) values ('WHENEVER SQLERROR',6,' SQL command or PL/SQL block generates an error.');
Insert into HELP (TOPIC,SEQ,INFO) values ('WHENEVER SQLERROR',7,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('WHENEVER SQLERROR',8,' WHENEVER SQLERROR {EXIT [SUCCESS|FAILURE|WARNING|n|variable|:BindVariable]');
Insert into HELP (TOPIC,SEQ,INFO) values ('WHENEVER SQLERROR',9,'                    [COMMIT|ROLLBACK] | CONTINUE [COMMIT|ROLLBACK|NONE]}');
Insert into HELP (TOPIC,SEQ,INFO) values ('WHENEVER SQLERROR',10,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('XQUERY',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('XQUERY',2,' XQUERY');
Insert into HELP (TOPIC,SEQ,INFO) values ('XQUERY',3,' ------');
Insert into HELP (TOPIC,SEQ,INFO) values ('XQUERY',4,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('XQUERY',5,' Performs an XQuery 1.0 query on a specified database. Attempting to use');
Insert into HELP (TOPIC,SEQ,INFO) values ('XQUERY',6,' XQUERY on a database earlier than Oracle Database 10g (Release 2) generates');
Insert into HELP (TOPIC,SEQ,INFO) values ('XQUERY',7,' an error.');
Insert into HELP (TOPIC,SEQ,INFO) values ('XQUERY',8,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('XQUERY',9,' XQUERY xquery_statement');
Insert into HELP (TOPIC,SEQ,INFO) values ('XQUERY',10,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',1,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',2,' Help is available on the following topics:');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',3,null);
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',11,'/');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',12,'@');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',13,'@@');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',14,'ACCEPT');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',15,'APPEND');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',16,'ARCHIVE LOG');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',17,'ATTRIBUTE');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',18,'BREAK');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',19,'BTITLE');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',20,'CHANGE');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',21,'CLEAR');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',22,'COLUMN');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',23,'COMPUTE');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',24,'CONNECT');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',25,'COPY');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',26,'DEFINE');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',27,'DEL');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',28,'DESCRIBE');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',29,'DISCONNECT');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',30,'EDIT');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',31,'EXECUTE');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',32,'EXIT');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',33,'GET');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',34,'HELP');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',35,'HISTORY');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',36,'HOST');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',37,'INDEX');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',38,'INPUT');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',39,'LIST');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',40,'MENU');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',41,'PASSWORD');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',42,'PAUSE');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',43,'PRINT');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',44,'PROMPT');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',45,'QUIT');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',46,'RECOVER');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',47,'REMARK');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',48,'REPFOOTER');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',49,'REPHEADER');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',50,'RESERVED WORDS (PL/SQL)');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',51,'RESERVED WORDS (SQL)');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',52,'RUN');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',53,'SAVE');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',54,'SET');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',55,'SHOW');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',56,'SHUTDOWN');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',57,'SPOOL');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',58,'SQLPLUS');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',59,'START');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',60,'STARTUP');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',61,'STORE');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',62,'TIMING');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',63,'TOPICS');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',64,'TTITLE');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',65,'UNDEFINE');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',66,'VARIABLE');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',67,'WHENEVER OSERROR');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',68,'WHENEVER SQLERROR');
Insert into HELP (TOPIC,SEQ,INFO) values ('TOPICS',69,'XQUERY');
REM INSERTING into INVOICES
SET DEFINE OFF;
REM INSERTING into JOBS
SET DEFINE OFF;
REM INSERTING into LOCATION
SET DEFINE OFF;
Insert into LOCATION (ADDRESS) values ('ARCHEOLOGY ROAD');
Insert into LOCATION (ADDRESS) values ('CHEMISTRY ROAD');
Insert into LOCATION (ADDRESS) values ('COMPUTING ROAD');
Insert into LOCATION (ADDRESS) values ('PHYSICS ROAD');
REM INSERTING into LOCATIONS
SET DEFINE OFF;
REM INSERTING into LOGMNRC_CONCOL_GG
SET DEFINE OFF;
REM INSERTING into LOGMNRC_CON_GG
SET DEFINE OFF;
REM INSERTING into LOGMNRC_DBNAME_UID_MAP
SET DEFINE OFF;
REM INSERTING into LOGMNRC_GSBA
SET DEFINE OFF;
REM INSERTING into LOGMNRC_GSII
SET DEFINE OFF;
REM INSERTING into LOGMNRC_GTCS
SET DEFINE OFF;
REM INSERTING into LOGMNRC_GTLO
SET DEFINE OFF;
REM INSERTING into LOGMNRC_INDCOL_GG
SET DEFINE OFF;
REM INSERTING into LOGMNRC_IND_GG
SET DEFINE OFF;
REM INSERTING into LOGMNRC_SEQ_GG
SET DEFINE OFF;
REM INSERTING into LOGMNRC_SHARD_TS
SET DEFINE OFF;
REM INSERTING into LOGMNRC_TS
SET DEFINE OFF;
REM INSERTING into LOGMNRC_TSPART
SET DEFINE OFF;
REM INSERTING into LOGMNRGGC_GTCS
SET DEFINE OFF;
REM INSERTING into LOGMNRGGC_GTLO
SET DEFINE OFF;
REM INSERTING into LOGMNRP_CTAS_PART_MAP
SET DEFINE OFF;
REM INSERTING into LOGMNRT_MDDL$
SET DEFINE OFF;
REM INSERTING into LOGMNR_AGE_SPILL$
SET DEFINE OFF;
REM INSERTING into LOGMNR_ATTRCOL$
SET DEFINE OFF;
REM INSERTING into LOGMNR_ATTRIBUTE$
SET DEFINE OFF;
REM INSERTING into LOGMNR_CCOL$
SET DEFINE OFF;
REM INSERTING into LOGMNR_CDEF$
SET DEFINE OFF;
REM INSERTING into LOGMNR_COL$
SET DEFINE OFF;
REM INSERTING into LOGMNR_COLTYPE$
SET DEFINE OFF;
REM INSERTING into LOGMNR_CON$
SET DEFINE OFF;
REM INSERTING into LOGMNR_CONTAINER$
SET DEFINE OFF;
REM INSERTING into LOGMNR_DICTIONARY$
SET DEFINE OFF;
REM INSERTING into LOGMNR_DICTSTATE$
SET DEFINE OFF;
REM INSERTING into LOGMNR_DID$
SET DEFINE OFF;
REM INSERTING into LOGMNR_ENC$
SET DEFINE OFF;
REM INSERTING into LOGMNR_ERROR$
SET DEFINE OFF;
REM INSERTING into LOGMNR_FILTER$
SET DEFINE OFF;
REM INSERTING into LOGMNR_GLOBAL$
SET DEFINE OFF;
REM INSERTING into LOGMNR_GT_TAB_INCLUDE$
SET DEFINE OFF;
REM INSERTING into LOGMNR_GT_USER_INCLUDE$
SET DEFINE OFF;
REM INSERTING into LOGMNR_GT_XID_INCLUDE$
SET DEFINE OFF;
REM INSERTING into LOGMNR_ICOL$
SET DEFINE OFF;
REM INSERTING into LOGMNR_IDNSEQ$
SET DEFINE OFF;
REM INSERTING into LOGMNR_IND$
SET DEFINE OFF;
REM INSERTING into LOGMNR_INDCOMPART$
SET DEFINE OFF;
REM INSERTING into LOGMNR_INDPART$
SET DEFINE OFF;
REM INSERTING into LOGMNR_INDSUBPART$
SET DEFINE OFF;
REM INSERTING into LOGMNR_KOPM$
SET DEFINE OFF;
REM INSERTING into LOGMNR_LOB$
SET DEFINE OFF;
REM INSERTING into LOGMNR_LOBFRAG$
SET DEFINE OFF;
REM INSERTING into LOGMNR_LOG$
SET DEFINE OFF;
REM INSERTING into LOGMNR_LOGMNR_BUILDLOG
SET DEFINE OFF;
REM INSERTING into LOGMNR_NTAB$
SET DEFINE OFF;
REM INSERTING into LOGMNR_OBJ$
SET DEFINE OFF;
REM INSERTING into LOGMNR_OPQTYPE$
SET DEFINE OFF;
REM INSERTING into LOGMNR_PARAMETER$
SET DEFINE OFF;
REM INSERTING into LOGMNR_PARTOBJ$
SET DEFINE OFF;
REM INSERTING into LOGMNR_PDB_INFO$
SET DEFINE OFF;
REM INSERTING into LOGMNR_PROCESSED_LOG$
SET DEFINE OFF;
REM INSERTING into LOGMNR_PROFILE_PLSQL_STATS$
SET DEFINE OFF;
REM INSERTING into LOGMNR_PROFILE_TABLE_STATS$
SET DEFINE OFF;
REM INSERTING into LOGMNR_PROPS$
SET DEFINE OFF;
REM INSERTING into LOGMNR_REFCON$
SET DEFINE OFF;
REM INSERTING into LOGMNR_RESTART_CKPT$
SET DEFINE OFF;
REM INSERTING into LOGMNR_RESTART_CKPT_TXINFO$
SET DEFINE OFF;
REM INSERTING into LOGMNR_SEED$
SET DEFINE OFF;
REM INSERTING into LOGMNR_SESSION$
SET DEFINE OFF;
REM INSERTING into LOGMNR_SESSION_ACTIONS$
SET DEFINE OFF;
REM INSERTING into LOGMNR_SESSION_EVOLVE$
SET DEFINE OFF;
REM INSERTING into LOGMNR_SHARD_TS
SET DEFINE OFF;
REM INSERTING into LOGMNR_SPILL$
SET DEFINE OFF;
REM INSERTING into LOGMNR_SUBCOLTYPE$
SET DEFINE OFF;
REM INSERTING into LOGMNR_TAB$
SET DEFINE OFF;
REM INSERTING into LOGMNR_TABCOMPART$
SET DEFINE OFF;
REM INSERTING into LOGMNR_TABPART$
SET DEFINE OFF;
REM INSERTING into LOGMNR_TABSUBPART$
SET DEFINE OFF;
REM INSERTING into LOGMNR_TS$
SET DEFINE OFF;
REM INSERTING into LOGMNR_TYPE$
SET DEFINE OFF;
REM INSERTING into LOGMNR_UID$
SET DEFINE OFF;
REM INSERTING into LOGMNR_USER$
SET DEFINE OFF;
REM INSERTING into LOGSTDBY$APPLY_MILESTONE
SET DEFINE OFF;
REM INSERTING into LOGSTDBY$APPLY_PROGRESS
SET DEFINE OFF;
REM INSERTING into LOGSTDBY$EDS_TABLES
SET DEFINE OFF;
REM INSERTING into LOGSTDBY$EVENTS
SET DEFINE OFF;
REM INSERTING into LOGSTDBY$FLASHBACK_SCN
SET DEFINE OFF;
REM INSERTING into LOGSTDBY$HISTORY
SET DEFINE OFF;
REM INSERTING into LOGSTDBY$PARAMETERS
SET DEFINE OFF;
REM INSERTING into LOGSTDBY$PLSQL
SET DEFINE OFF;
REM INSERTING into LOGSTDBY$SCN
SET DEFINE OFF;
REM INSERTING into LOGSTDBY$SKIP
SET DEFINE OFF;
REM INSERTING into LOGSTDBY$SKIP_SUPPORT
SET DEFINE OFF;
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','ADD_STOP_SECTION','DRVLSB','ADD_STOP_SECTION_NC',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','ADD_ATTR_SECTION','DRVLSB','ADD_ATTR_SECTION_C',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','ADD_ATTR_SECTION','DRVLSB','ADD_ATTR_SECTION_NC',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','ADD_XML_SECTION','DRVLSB','ADD_XML_SECTION_C',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','ADD_XML_SECTION','DRVLSB','ADD_XML_SECTION_NC',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','ADD_MDATA_SECTION','DRVLSB','ADD_MDATA_SECTION_C',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','ADD_MDATA_SECTION','DRVLSB','ADD_MDATA_SECTION_NC',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','ADD_NDATA_SECTION','DRVLSB','ADD_NDATA_SECTION_C',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','ADD_NDATA_SECTION','DRVLSB','ADD_NDATA_SECTION_NC',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','ADD_MVDATA_SECTION','DRVLSB','ADD_MVDATA_SECTION_C',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','ADD_MVDATA_SECTION','DRVLSB','ADD_MVDATA_SECTION_NC',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','ADD_SDATA_SECTION','DRVLSB','ADD_SDATA_SECTION_C',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','ADD_SDATA_SECTION','DRVLSB','ADD_SDATA_SECTION_NC',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','ADD_SDATA_COLUMN','DRVLSB','ADD_SDATA_COLUMN_C',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','ADD_SDATA_COLUMN','DRVLSB','ADD_SDATA_COLUMN_NC',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','ADD_MDATA_COLUMN','DRVLSB','ADD_MDATA_COLUMN_C',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','ADD_MDATA_COLUMN','DRVLSB','ADD_MDATA_COLUMN_NC',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','REMOVE_SECTION','DRVLSB','REMOVE_SECTION_C',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','REMOVE_SECTION','DRVLSB','REMOVE_SECTION_NC',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','CREATE_STOPLIST','DRVLSB','CREATE_STOPLIST_C',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','CREATE_STOPLIST','DRVLSB','CREATE_STOPLIST_NC',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','DROP_STOPLIST','DRVLSB','DROP_STOPLIST_C',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','DROP_STOPLIST','DRVLSB','DROP_STOPLIST_NC',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','ADD_STOPWORD','DRVLSB','ADD_STOPWORD_C',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','ADD_STOPWORD','DRVLSB','ADD_STOPWORD_NC',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','ADD_STOPTHEME','DRVLSB','ADD_STOPTHEME_C',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','ADD_STOPTHEME','DRVLSB','ADD_STOPTHEME_NC',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','ADD_STOPCLASS','DRVLSB','ADD_STOPCLASS_C',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','ADD_STOPCLASS','DRVLSB','ADD_STOPCLASS_NC',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','ADD_INDEX','DRVLSB','ADD_INDEX_C',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','ADD_INDEX','DRVLSB','ADD_INDEX_NC',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','CREATE_INDEX_SET','DRVLSB','CREATE_INDEX_SET_C',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','CREATE_INDEX_SET','DRVLSB','CREATE_INDEX_SET_NC',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','REMOVE_INDEX','DRVLSB','REMOVE_INDEX_C',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','REMOVE_INDEX','DRVLSB','REMOVE_INDEX_NC',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','ADD_SUB_LEXER','DRVLSB','ADD_SUB_LEXER_C',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','ADD_SUB_LEXER','DRVLSB','ADD_SUB_LEXER_NC',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','REMOVE_SUB_LEXER','DRVLSB','REMOVE_SUB_LEXER_C',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','REMOVE_SUB_LEXER','DRVLSB','REMOVE_SUB_LEXER_NC',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','UPDATE_SUB_LEXER','DRVLSB','UPDATE_SUB_LEXER_C',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','UPDATE_SUB_LEXER','DRVLSB','UPDATE_SUB_LEXER_NC',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','SET_SECTION_ATTRIBUTE','DRVLSB','SET_SECTION_ATTRIBUTE_C',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','SET_SECTION_ATTRIBUTE','DRVLSB','SET_SECTION_ATTRIBUTE_NC',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','UNSET_SECTION_ATTRIBUTE','DRVLSB','UNSET_SECTION_ATTRIBUTE_C',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','UNSET_SECTION_ATTRIBUTE','DRVLSB','UNSET_SECTION_ATTRIBUTE_NC',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','ADD_MDATA','DRVLSB','ADD_MDATA',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','REMOVE_MDATA','DRVLSB','REMOVE_MDATA',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','INSERT_MVDATA_VALUES','DRVLSB','INSERT_MVDATA_VALUES',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','DELETE_MVDATA_VALUES','DRVLSB','DELETE_MVDATA_VALUES',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','ADD_SDATA','DRVLSB','ADD_SDATA',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','REMOVE_SDATA','DRVLSB','REMOVE_SDATA',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','UPDATA_MVDATA_SET','DRVLSB','UPDATA_MVDATA_SET',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','UPDATE_SDATA','DRVLSB','UPDATE_SDATA',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','POPULATE_PENDING','DRVLSB','POPULATE_PENDING',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','RECREATE_INDEX_ONLINE','DRVLSB','RECREATE_INDEX_ONLINE',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','CREATE_SHADOW_INDEX','DRVLSB','CREATE_SHADOW_INDEX',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','EXCHANGE_SHADOW_INDEX','DRVLSB','EXCHANGE_SHADOW_INDEX',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','DROP_SHADOW_INDEX','DRVLSB','DROP_SHADOW_INDEX',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','SYNC_INDEX','DRVLSB','SYNC_INDEX',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','OPTIMIZE_INDEX','DRVLSB','OPTIMIZE_INDEX',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DOC','FILTER','DRVLSB','FILTER',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DOC','GIST','DRVLSB','GIST',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DOC','MARKUP','DRVLSB','MARKUP',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DOC','TOKENS','DRVLSB','TOKENS',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DOC','THEMES','DRVLSB','THEMES',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DOC','HIGHLIGHT','DRVLSB','HIGHLIGHT',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DOC','MARKUP_CLOB_QUERY','DRVLSB','MARKUP_CLOB_QUERY',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DOC','HIGHLIGHT_CLOB_QUERY','DRVLSB','HIGHLIGHT_CLOB_QUERY',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_ANL','ADD_DICTIONARY','DRVLSB','ADD_DICTIONARY_C',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_ANL','ADD_DICTIONARY','DRVLSB','ADD_DICTIONARY_NC',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_ANL','DROP_DICTIONARY','DRVLSB','DROP_DICTIONARY_C',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_ANL','DROP_DICTIONARY','DRVLSB','DROP_DICTIONARY_NC',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','SET_SEC_GRP_ATTR','DRVLSB','SET_SEC_GRP_ATTR_C',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','SET_SEC_GRP_ATTR','DRVLSB','SET_SEC_GRP_ATTR_NC',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','ADD_SEC_GRP_ATTR_VAL','DRVLSB','ADD_SEC_GRP_ATTR_VAL_C',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','ADD_SEC_GRP_ATTR_VAL','DRVLSB','ADD_SEC_GRP_ATTR_VAL_NC',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_THES','CREATE_THESAURUS','DRITHSC','CREATE_THESAURUS_LSB',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_THES','CREATE_PHRASE','DRITHSC','CREATE_PHRASE_LSB',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_THES','ALTER_PHRASE','DRITHS','PARSE_PHRASE',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_THES','CREATE_PHRASE','DRITHS','PARSE_PHRASE',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_THES','HAS_RELATION','DRITHS','PARSE_PHRASE',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_THES','SYN','DRITHS','PARSE_PHRASE',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_THES','SN','DRITHS','PARSE_PHRASE',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_THES','PT','DRITHS','PARSE_PHRASE',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_THES','TT','DRITHS','PARSE_PHRASE',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_THES','RT','DRITHS','PARSE_PHRASE',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_THES','BT','DRITHS','PARSE_PHRASE',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_THES','BTP','DRITHS','PARSE_PHRASE',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_THES','BTI','DRITHS','PARSE_PHRASE',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_THES','BTG','DRITHS','PARSE_PHRASE',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_THES','NT','DRITHS','PARSE_PHRASE',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_THES','NTP','DRITHS','PARSE_PHRASE',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_THES','NTI','DRITHS','PARSE_PHRASE',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_THES','NTG','DRITHS','PARSE_PHRASE',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_THES','TRSYN','DRITHS','PARSE_PHRASE',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_THES','TR','DRITHS','PARSE_PHRASE',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'SYS','DBMS_RLS',null,'DBMS_RLS_INT',null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-4,'XDB','DBMS_XDB',null,'DBMS_XLSB',null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-4,'XDB','DBMS_XDB_CONFIG',null,'DBMS_XLSB',null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-4,'XDB','DBMS_XDB_REPOS',null,'DBMS_XLSB',null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-4,'XDB','DBMS_XDBRESOURCE',null,'DBMS_XLSB',null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-4,'SYS','DBMS_AQ_IMP_INTERNAL',null,'DBMS_AQ_SYS_IMP_INTERNAL',null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-4,'SYS','DBMS_RULE_ADM',null,'DBMS_RULEADM_INTERNAL',null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-4,'SYS','DBMS_AQADM',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-4,'SYS','DBMS_AQADM',null,'DBMS_AQADM_SYS',null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-4,'SYS','DBMS_AQJMS',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-4,'SYS','DBMS_PRVTAQIS',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-4,'SYS','XS_PRINCIPAL',null,'XS_PRINCIPAL_INT',null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-4,'LBACSYS','LBAC_EVENTS',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-4,'LBACSYS','SA_AUDIT_ADMIN',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-4,'LBACSYS','SA_COMPONENTS',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-4,'LBACSYS','SA_LABEL_ADMIN',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-4,'LBACSYS','SA_POLICY_ADMIN',null,'LBAC_POLICY_ADMIN',null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-4,'LBACSYS','SA_SESSION',null,'LBAC_LGSTNDBY_UTIL',null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-4,'LBACSYS','SA_SYSDBA',null,'LBAC_LGSTNDBY_UTIL',null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-4,'LBACSYS','SA_USER_ADMIN',null,'LBAC_LGSTNDBY_UTIL',null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-5,'MDSYS','SDO_GEORASTER',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-5,'MDSYS','SDO_TOPO_GEOMETRY',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-11,'MDSYS','SDO_RDF_TRIPLE_S',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-8,'SYS','DBMS_RLS',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-9,'SYS','DBMS_RLS_INT',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-8,'SYS','DBMS_FGA',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-8,'XDB','DBMS_XMLSCHEMA',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-9,'XDB','DBMS_XMLSCHEMA_LSB',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-8,'XDB','DBMS_XMLINDEX',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-7,'XDB','DBMS_XDBZ0',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'XDB','DBMS_RESCONFIG',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'XDB','DBMS_XDBZ',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'XDB','DBMS_XDB_VERSION',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'XDB','DBMS_XDB',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-7,'XDB','DBMS_XLSB',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'XDB','DBMS_XDB_CONFIG',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'XDB','DBMS_XDB_REPOS',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'XDB','DBMS_XDBRESOURCE',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-7,'SYS','DBMS_XDS',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'SYS','DBMS_SCHEDULER',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-7,'SYS','DBMS_ISCHED',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-7,'SYS','DBMS_AQADM_SYS',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-7,'SYS','DBMS_AQ_SYS_IMP_INTERNAL',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'SYS','DBMS_AQADM',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'SYS','DBMS_AQELM',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'SYS','DBMS_RULE_ADM',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-7,'SYS','DBMS_RULEADM_INTERNAL',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-7,'SYS','DBMS_PRVTAQIS',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'SYS','DBMS_AQ',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'SYS','DBMS_AQJMS',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'SYS','DBMS_DBFS_CONTENT_ADMIN',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'SYS','DBMS_DBFS_SFS',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'SYS','DBMS_DBFS_SFS_ADMIN',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'SYS','XS_PRINCIPAL',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-7,'SYS','XS_PRINCIPAL_INT',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'SYS','XS_ACL',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'SYS','XS_ROLESET',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'SYS','XS_SECURITY_CLASS',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'SYS','XS_DATA_SECURITY',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'SYS','XS_DATA_SECURITY_UTIL',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'SYS','XS_NAMESPACE',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'SYS','XS_ADMIN_UTIL',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'CTXSYS','CTX_ANL',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'CTXSYS','CTX_DDL',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'CTXSYS','CTX_TREE',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'CTXSYS','CTX_ENTITY',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-7,'CTXSYS','DRITHSL',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-7,'CTXSYS','DRITHSC',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-7,'CTXSYS','DRITHS',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-7,'CTXSYS','DRIENTL',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'CTXSYS','CTX_ADM',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'CTXSYS','CTX_QUERY',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'CTXSYS','CTX_CLS',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'CTXSYS','CTX_THES',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'CTXSYS','CTX_OUTPUT',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'CTXSYS','CTX_DOC',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-7,'CTXSYS','DRVXMD',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-7,'CTXSYS','DRVLSB',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'CTXSYS','DRIIMP',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-8,'SYS','DBMS_DDL',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-8,'SYS','DBMS_REDEFINITION',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-8,'SYS','DBMS_SQL_TRANSLATOR',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-9,'SYS','LOGSTDBY_INTERNAL',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-9,'SYS','DBMS_INTERNAL_LOGSTDBY',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-9,'SYS','DBMS_INTERNAL_ROLLING',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-8,'SYS','DBMS_REDACT',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-8,'MDSYS','SDO_META',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'MDSYS','SDO_META_USER',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-7,'MDSYS','SDO_RDF_INTERNAL',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'MDSYS','RDF_APIS',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'MDSYS','SDO_RDF',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'MDSYS','SDO_SEM_PERF',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-7,'LBACSYS','LBAC_EVENTS',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-7,'LBACSYS','LBAC_LGSTNDBY_UTIL',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-7,'LBACSYS','LBAC_POLICY_ADMIN',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'LBACSYS','SA_AUDIT_ADMIN',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'LBACSYS','SA_COMPONENTS',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'LBACSYS','SA_LABEL_ADMIN',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'LBACSYS','SA_SYSDBA',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'LBACSYS','SA_USER_ADMIN',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-10,'DVSYS','DBMS_MACOUT',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-10,'DVSYS','DBMS_MACUTL',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'DVSYS','DBMS_MACADM',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'DVSYS','DBMS_MACAUD',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-10,'DVSYS','EVENT',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-10,'DVSYS','DBMS_MACSEC_RULES',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-10,'DVSYS','DBMS_MACSEC',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'DVSYS','DBMS_MACOLS',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-10,'DVSYS','DBMS_MACSEC_ROLES',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-10,'DVSYS','DBMS_MACOLS_SESSION',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-7,'DVSYS','CONFIGURE_DV_INTERNAL',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-7,'AUDSYS','DBMS_AUDIT_MGMT_LSBY',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-9,'SYS','DBMS_IJOB',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-6,'DVF','DBMS_MACSEC_FUNCTION',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (2,'DML',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (6,'DML',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (7,'DML',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (4,'CLUSTER',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (5,'CLUSTER',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (8,'CLUSTER',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (86,'CLUSTER',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (177,'CONTEXT',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (178,'CONTEXT',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (32,'DATABASE LINK',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (33,'DATABASE LINK',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (225,'DATABASE LINK',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (174,'DIMENSION',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (175,'DIMENSION',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (176,'DIMENSION',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (157,'DIRECTORY',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (158,'DIRECTORY',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (9,'INDEX',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (11,'INDEX',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (10,'INDEX',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (24,'PROCEDURE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (25,'PROCEDURE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (68,'PROCEDURE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (91,'PROCEDURE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (92,'PROCEDURE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (93,'PROCEDURE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (94,'PROCEDURE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (95,'PROCEDURE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (96,'PROCEDURE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (97,'PROCEDURE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (98,'PROCEDURE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (99,'PROCEDURE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (159,'PROCEDURE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (196,'PROCEDURE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (84,'PROCEDURE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (65,'PROFILE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (67,'PROFILE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (66,'PROFILE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (52,'ROLE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (79,'ROLE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (54,'ROLE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (55,'ROLE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (36,'ROLLBACK STATEMENT',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (37,'ROLLBACK STATEMENT',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (38,'ROLLBACK STATEMENT',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (13,'SEQUENCE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (14,'SEQUENCE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (16,'SEQUENCE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (19,'SYNONYM',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (20,'SYNONYM',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (110,'SYNONYM',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (111,'SYNONYM',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (1,'TABLE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (15,'TABLE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (12,'TABLE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (85,'TABLE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (39,'TABLESPACE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (40,'TABLESPACE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (41,'TABLESPACE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (59,'TRIGGER',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (60,'TRIGGER',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (61,'TRIGGER',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (118,'TRIGGER',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (119,'TRIGGER',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (120,'TRIGGER',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (121,'TRIGGER',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (77,'TYPE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (78,'TYPE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (80,'TYPE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (81,'TYPE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (82,'TYPE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (83,'TYPE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (51,'USER',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (43,'USER',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (53,'USER',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (21,'VIEW',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (22,'VIEW',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (17,'GRANT',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (18,'REVOKE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (30,'AUDIT',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (31,'AUDIT',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (212,'EDITION',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (213,'EDITION',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (214,'EDITION',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (160,'JAVA',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (161,'JAVA',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (162,'JAVA',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (1000000,'PL/SQL',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (1000001,'PL/SQL_DDL',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-1,'ADAMS',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'ANONYMOUS',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'APPQOSSYS',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'AUDSYS',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'BI',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-1,'BLAKE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-1,'CLARK',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'CTXSYS',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'DBSFWUSER',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'DIP',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'DBSNMP',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'DMSYS',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'DVSYS',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'DVF',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'EXDSYS',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'EXFSYS',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'GGSYS',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'GSMCATUSER',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'GSMROOTUSER',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'GSMUSER',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'GSMADMIN_INTERNAL',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-1,'HR',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-1,'IX',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-1,'JONES',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'LBACSYS',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-1,'MDDATA',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'MDSYS',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'MGMT_VIEW',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'MTSSYS',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'ODM',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'ODM_MTR',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-1,'OE',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'OJVMSYS',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'OLAPSYS',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'ORACLE_OCM',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'ORDDATA',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'ORDPLUGINS',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'ORDSYS',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'OUTLN',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-1,'PM',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'REMOTE_SCHEDULER_AGENT',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-1,'SCOTT',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'SI_INFORMTN_SCHEMA',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-1,'SH',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'SPATIAL_CSW_ADMIN',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'SPATIAL_CSW_ADMIN_USR',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'SPATIAL_WFS_ADMIN',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'SPATIAL_WFS_ADMIN_USR',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'SYS',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'SYSBACKUP',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'SYSDG',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'SYSKM',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'SYSRAC',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'SYS$UMF',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'SYSTEM',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'SYSMAN',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'TSMSYS',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'WKPROXY',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'WKSYS',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'WK_TEST',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'WMSYS',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'XDB',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'XS$NULL',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (0,'XTISYS',null,null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-2,'SYS','SCHEDULER$_INSTANCE_S',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-2,'SYS','SCHEDULER$_JOBSUFFIX_S',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-2,'SYSTEM','ROLLING_EVENT_SEQ$',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-2,'LBACSYS','OLS$LAB_SEQUENCE',null,null,null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'SYS','DBMS_AQ_IMP_INTERNAL',null,'DBMS_AQ_SYS_IMP_INTERNAL',null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'SYS','DBMS_AQADM',null,'DBMS_AQADM_SYS',null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'SYS','DBMS_RULE_ADM',null,'DBMS_RULEADM_INTERNAL',null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'XDB','DBMS_XMLSCHEMA','REGISTERSCHEMA','DBMS_XMLSCHEMA_LSB','REGISTERSCHEMA_STR',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'XDB','DBMS_XMLSCHEMA','REGISTERSCHEMA','DBMS_XMLSCHEMA_LSB','REGISTERSCHEMA_OID',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'XDB','DBMS_XMLSCHEMA','REGISTERSCHEMA','DBMS_XMLSCHEMA_LSB','REGISTERSCHEMA_BLOB',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'XDB','DBMS_XMLSCHEMA','REGISTERSCHEMA','DBMS_XMLSCHEMA_LSB','REGISTERSCHEMA_XML',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'XDB','DBMS_XMLSCHEMA','COMPILESCHEMA','DBMS_XMLSCHEMA_LSB','COMPILESCHEMA',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'XDB','DBMS_XMLSCHEMA','COPYEVOLVE','DBMS_XMLSCHEMA_LSB','COPYEVOLVE',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'LBACSYS','SA_SYSDBA','CREATE_POLICY','LBAC_LGSTNDBY_UTIL','CREATE_POLICY',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'LBACSYS','SA_USER_ADMIN','SET_USER_LABELS','LBAC_LGSTNDBY_UTIL','SET_USER_LABELS',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'LBACSYS','SA_SESSION','SAVE_DEFAULT_LABELS','LBAC_LGSTNDBY_UTIL','SAVE_DEFAULT_LABELS',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'LBACSYS','SA_POLICY_ADMIN',null,'LBAC_POLICY_ADMIN',null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'LBACSYS','SA_USER_ADMIN','SET_LEVELS','LBAC_LGSTNDBY_UTIL','SET_LEVELS',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'LBACSYS','SA_USER_ADMIN','SET_COMPARTMENTS','LBAC_LGSTNDBY_UTIL','SET_COMPARTMENTS',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'LBACSYS','SA_USER_ADMIN','ALTER_COMPARTMENTS','LBAC_LGSTNDBY_UTIL','ALTER_COMPARTMENTS',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'LBACSYS','SA_USER_ADMIN','SET_GROUPS','LBAC_LGSTNDBY_UTIL','SET_GROUPS',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'LBACSYS','SA_USER_ADMIN','ALTER_GROUPS','LBAC_LGSTNDBY_UTIL','ALTER_GROUPS',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'LBACSYS','SA_USER_ADMIN','ADD_COMPARTMENTS','LBAC_LGSTNDBY_UTIL','ADD_COMPARTMENTS',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'LBACSYS','SA_USER_ADMIN','DROP_COMPARTMENTS','LBAC_LGSTNDBY_UTIL','DROP_COMPARTMENTS',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'LBACSYS','SA_USER_ADMIN','DROP_ALL_COMPARTMENTS','LBAC_LGSTNDBY_UTIL','DROP_ALL_COMPARTMENTS',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'LBACSYS','SA_USER_ADMIN','ADD_GROUPS','LBAC_LGSTNDBY_UTIL','ADD_GROUPS',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'LBACSYS','SA_USER_ADMIN','DROP_GROUPS','LBAC_LGSTNDBY_UTIL','DROP_GROUPS',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'LBACSYS','SA_USER_ADMIN','DROP_ALL_GROUPS','LBAC_LGSTNDBY_UTIL','DROP_ALL_GROUPS',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'LBACSYS','SA_USER_ADMIN','SET_DEFAULT_LABEL','LBAC_LGSTNDBY_UTIL','SET_DEFAULT_LABEL',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'LBACSYS','SA_USER_ADMIN','SET_ROW_LABEL','LBAC_LGSTNDBY_UTIL','SET_ROW_LABEL',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'XDB','DBMS_XDB',null,'DBMS_XLSB',null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'XDB','DBMS_XDB_CONFIG',null,'DBMS_XLSB',null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'XDB','DBMS_XDB_REPOS',null,'DBMS_XLSB',null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'XDB','DBMS_XDBRESOURCE',null,'DBMS_XLSB',null,0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'SYS','XS_PRINCIPAL','SET_PASSWORD','XS_PRINCIPAL_INT','SET_VERIFIER_HELPER',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'SYS','XS_PRINCIPAL','SET_VERIFIER','XS_PRINCIPAL_INT','SET_VERIFIER_HELPER',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','CREATE_PREFERENCE','DRVLSB','CREATE_PREFERENCE_C',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','CREATE_PREFERENCE','DRVLSB','CREATE_PREFERENCE_NC',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','DROP_PREFERENCE','DRVLSB','DROP_PREFERENCE_C',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','DROP_PREFERENCE','DRVLSB','DROP_PREFERENCE_NC',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','SET_ATTRIBUTE','DRVLSB','SET_ATTRIBUTE_C',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','SET_ATTRIBUTE','DRVLSB','SET_ATTRIBUTE_NC',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','UNSET_ATTRIBUTE','DRVLSB','UNSET_ATTRIBUTE_C',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','UNSET_ATTRIBUTE','DRVLSB','UNSET_ATTRIBUTE_NC',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','CREATE_SECTION_GROUP','DRVLSB','CREATE_SECTION_GROUP_C',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','CREATE_SECTION_GROUP','DRVLSB','CREATE_SECTION_GROUP_NC',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','DROP_SECTION_GROUP','DRVLSB','DROP_SECTION_GROUP_C',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','DROP_SECTION_GROUP','DRVLSB','DROP_SECTION_GROUP_NC',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','ADD_ZONE_SECTION','DRVLSB','ADD_ZONE_SECTION_C',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','ADD_ZONE_SECTION','DRVLSB','ADD_ZONE_SECTION_NC',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','ADD_FIELD_SECTION','DRVLSB','ADD_FIELD_SECTION_C',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','ADD_FIELD_SECTION','DRVLSB','ADD_FIELD_SECTION_NC',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','ADD_SPECIAL_SECTION','DRVLSB','ADD_SPECIAL_SECTION_C',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','ADD_SPECIAL_SECTION','DRVLSB','ADD_SPECIAL_SECTION_NC',0,null,null,null);
Insert into LOGSTDBY$SKIP_SUPPORT (ACTION,NAME,NAME2,NAME3,NAME4,NAME5,REG,SPARE1,SPARE2,SPARE3) values (-3,'CTXSYS','CTX_DDL','ADD_STOP_SECTION','DRVLSB','ADD_STOP_SECTION_C',0,null,null,null);
REM INSERTING into LOGSTDBY$SKIP_TRANSACTION
SET DEFINE OFF;
REM INSERTING into MVIEW$_ADV_AJG
SET DEFINE OFF;
REM INSERTING into MVIEW$_ADV_BASETABLE
SET DEFINE OFF;
REM INSERTING into MVIEW$_ADV_CLIQUE
SET DEFINE OFF;
REM INSERTING into MVIEW$_ADV_ELIGIBLE
SET DEFINE OFF;
REM INSERTING into MVIEW$_ADV_EXCEPTIONS
SET DEFINE OFF;
REM INSERTING into MVIEW$_ADV_FILTER
SET DEFINE OFF;
REM INSERTING into MVIEW$_ADV_FILTERINSTANCE
SET DEFINE OFF;
REM INSERTING into MVIEW$_ADV_FJG
SET DEFINE OFF;
REM INSERTING into MVIEW$_ADV_GC
SET DEFINE OFF;
REM INSERTING into MVIEW$_ADV_INFO
SET DEFINE OFF;
REM INSERTING into MVIEW$_ADV_JOURNAL
SET DEFINE OFF;
REM INSERTING into MVIEW$_ADV_LEVEL
SET DEFINE OFF;
REM INSERTING into MVIEW$_ADV_LOG
SET DEFINE OFF;
REM INSERTING into MVIEW$_ADV_OUTPUT
SET DEFINE OFF;
REM INSERTING into MVIEW$_ADV_PARAMETERS
SET DEFINE OFF;
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('QSMSS_EXACT_DELETE',0,null,null,0.02);
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('QSMSS_EXACT_BUCKETS',0,null,null,1000);
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('QSMSS_PARTIAL_DELETE',0,null,null,0.02);
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('QSMSS_PARTIAL_BUCKETS',0,null,null,1000);
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('QSMSS_AJG_DELETE',0,null,null,0.02);
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('QSMSS_AJG_BUCKETS',0,null,null,100);
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('QSMSS_FJG_DELETE',0,null,null,0.02);
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('QSMSS_GC_DELETE',0,null,null,0.02);
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('QSMSS_MEA_DELETE',0,null,null,0.05);
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('QSMSS_TRACE_LEVEL',0,null,null,0);
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('QSMSS_REWRITE_NRF',0,null,null,10);
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('qsma.console_output',1,'True',null,0);
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('qsma.wip_interval',0,null,null,250);
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('qsma.commit_interval',0,null,null,100);
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('qsma.sql_exclusions',1,'SYSTEM.%',null,0);
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('qsma.pretty',1,'True',null,0);
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('qsma.lcase_names',1,'True',null,0);
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('qsma.lcase_keywords',1,'False',null,0);
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('qsma.add_alias',1,'False',null,0);
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('qsma.ignore_ambig',1,'True',null,0);
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('qsma.fixup_alias',1,'False',null,0);
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('qsma.optimize',1,'True',null,0);
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('qsma.ignore_columns',1,'True',null,0);
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('qsma.fixup_schema',1,'False',null,0);
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('qsma.remove_optional_keywords',1,'False',null,0);
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('qsma.dump_tree',1,'True',null,0);
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('qsma.debug_flags',1,null,null,0);
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('qsma.datetime_mask',1,'dd/MM/yyyy HH:mm',null,0);
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('QSMAE_MIN_CLQ_MF_RATIO',0,null,null,0.05);
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('QSMAE_MIN_SUM_BC_RATIO',0,null,null,0.05);
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('QSMAE_MAX_GCS',0,null,null,1000);
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('QSMAE_PCT_COMPL_POLL_INTL',0,null,null,10);
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('QSMAE_TRACE_LEVEL',0,null,null,0);
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('QSMAE_AEP_MAX_LAT_SIZE',0,null,null,1024);
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('QSMAE_AEP_MAX_FACT_TABLES',0,null,null,10);
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('qsma.report.color1',1,'#FFFFDE',null,0);
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('qsma.report.color2',1,'#336699',null,0);
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('qsma.report.color3',1,'#FFCC60',null,0);
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('qsma.report.color4',1,'white',null,0);
Insert into MVIEW$_ADV_PARAMETERS (PARAMETER_NAME,PARAMETER_TYPE,STRING_VALUE,DATE_VALUE,NUMERICAL_VALUE) values ('qsma.report.include_unused',1,'False',null,0);
REM INSERTING into MVIEW$_ADV_PLAN
SET DEFINE OFF;
REM INSERTING into MVIEW$_ADV_PRETTY
SET DEFINE OFF;
REM INSERTING into MVIEW$_ADV_ROLLUP
SET DEFINE OFF;
REM INSERTING into MVIEW$_ADV_SQLDEPEND
SET DEFINE OFF;
REM INSERTING into MVIEW$_ADV_TEMP
SET DEFINE OFF;
REM INSERTING into MVIEW$_ADV_WORKLOAD
SET DEFINE OFF;
REM INSERTING into NAME
SET DEFINE OFF;
REM INSERTING into OL$
SET DEFINE OFF;
REM INSERTING into OL$HINTS
SET DEFINE OFF;
REM INSERTING into OL$NODES
SET DEFINE OFF;
REM INSERTING into ORDERS
SET DEFINE OFF;
REM INSERTING into PRODUCTS
SET DEFINE OFF;
Insert into PRODUCTS (PRODUCT_ID,PRODUCT_NAME,PRICE,STOCK_QUANTITY) values (1,'AC',50000,50);
Insert into PRODUCTS (PRODUCT_ID,PRODUCT_NAME,PRICE,STOCK_QUANTITY) values (2,'rice cookar',5000,25);
Insert into PRODUCTS (PRODUCT_ID,PRODUCT_NAME,PRICE,STOCK_QUANTITY) values (4,'TV',50000,1);
Insert into PRODUCTS (PRODUCT_ID,PRODUCT_NAME,PRICE,STOCK_QUANTITY) values (5,'refrigerators',500000,10);
Insert into PRODUCTS (PRODUCT_ID,PRODUCT_NAME,PRICE,STOCK_QUANTITY) values (6,'LPG Gas',null,15);
REM INSERTING into REDO_DB
SET DEFINE OFF;
Insert into REDO_DB (DBID,GLOBAL_DBNAME,DBUNAME,VERSION,THREAD#,RESETLOGS_SCN_BAS,RESETLOGS_SCN_WRP,RESETLOGS_TIME,PRESETLOGS_SCN_BAS,PRESETLOGS_SCN_WRP,PRESETLOGS_TIME,SEQNO_RCV_CUR,SEQNO_RCV_LO,SEQNO_RCV_HI,SEQNO_DONE_CUR,SEQNO_DONE_LO,SEQNO_DONE_HI,GAP_SEQNO,GAP_RET,GAP_DONE,APPLY_SEQNO,APPLY_DONE,PURGE_DONE,HAS_CHILD,ERROR1,STATUS,CREATE_DATE,TS1,TS2,GAP_NEXT_SCN,GAP_NEXT_TIME,CURSCN_TIME,RESETLOGS_SCN,PRESETLOGS_SCN,GAP_RET2,CURLOG,ENDIAN,ENQIDX,SPARE4,SPARE5,SPARE6,SPARE7,TS3,CURBLKNO,SPARE8,SPARE9,SPARE10,SPARE11,SPARE12) values (0,null,null,null,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,null,0,0,0,0,0,0,0,0,0,0,0,0,null,null,null,0,0,0,0,0,0,0);
REM INSERTING into REDO_LOG
SET DEFINE OFF;
REM INSERTING into REGIONS
SET DEFINE OFF;
REM INSERTING into RENT
SET DEFINE OFF;
Insert into RENT (CARDID,ITEMID,APPORPRIATIONDATE,RETURNDATE) values (102,'B1Z123',to_date('10-05-18','DD-MM-RR'),to_date('25-05-18','DD-MM-RR'));
Insert into RENT (CARDID,ITEMID,APPORPRIATIONDATE,RETURNDATE) values (104,'V1JA15',to_date('01-05-18','DD-MM-RR'),to_date('21-05-18','DD-MM-RR'));
Insert into RENT (CARDID,ITEMID,APPORPRIATIONDATE,RETURNDATE) values (105,'V1DI00',to_date('02-05-18','DD-MM-RR'),to_date('25-05-18','DD-MM-RR'));
Insert into RENT (CARDID,ITEMID,APPORPRIATIONDATE,RETURNDATE) values (154,'B1L321',to_date('04-05-18','DD-MM-RR'),to_date('26-05-18','DD-MM-RR'));
Insert into RENT (CARDID,ITEMID,APPORPRIATIONDATE,RETURNDATE) values (155,'V1CH16',to_date('29-04-18','DD-MM-RR'),to_date('29-05-18','DD-MM-RR'));
REM INSERTING into ROLLING$CONNECTIONS
SET DEFINE OFF;
REM INSERTING into ROLLING$DATABASES
SET DEFINE OFF;
REM INSERTING into ROLLING$DIRECTIVES
SET DEFINE OFF;
REM INSERTING into ROLLING$EVENTS
SET DEFINE OFF;
REM INSERTING into ROLLING$PARAMETERS
SET DEFINE OFF;
REM INSERTING into ROLLING$PLAN
SET DEFINE OFF;
REM INSERTING into ROLLING$STATISTICS
SET DEFINE OFF;
REM INSERTING into ROLLING$STATUS
SET DEFINE OFF;
REM INSERTING into SALESMEN
SET DEFINE OFF;
Insert into SALESMEN (SALESMAN_ID,NAME,AGE,SALARY) values (201,'sai',30,50000);
Insert into SALESMEN (SALESMAN_ID,NAME,AGE,SALARY) values (202,'ramesh',30,60000);
Insert into SALESMEN (SALESMAN_ID,NAME,AGE,SALARY) values (203,'suresh',30,70000);
REM INSERTING into SCHEDULER_JOB_ARGS_TBL
SET DEFINE OFF;
REM INSERTING into SCHEDULER_PROGRAM_ARGS_TBL
SET DEFINE OFF;
REM INSERTING into SQLPLUS_PRODUCT_PROFILE
SET DEFINE OFF;
REM INSERTING into STUDENT
SET DEFINE OFF;
Insert into STUDENT (STUD_ID,NAME,BR_ID,EMAIL,CITY_ID) values (1001,'sai',101,'sai@gmail.com',1);
Insert into STUDENT (STUD_ID,NAME,BR_ID,EMAIL,CITY_ID) values (1002,'saibaba',102,'saibabab@gmail.com',2);
Insert into STUDENT (STUD_ID,NAME,BR_ID,EMAIL,CITY_ID) values (1003,'bharth',103,'bharth@gmail.com',3);
Insert into STUDENT (STUD_ID,NAME,BR_ID,EMAIL,CITY_ID) values (1004,'ramesh',104,'ramesh@gmail.com',4);
Insert into STUDENT (STUD_ID,NAME,BR_ID,EMAIL,CITY_ID) values (1004,'ramesh',104,'ramesh@gmail.com',4);
REM INSERTING into STUDENTS
SET DEFINE OFF;
Insert into STUDENTS (ROLL_NUMBER,NAME,TELUGU,ENGLISH,MATHS,HINDI,SCIENCE,SOCIAL,TOTAL_MARKS) values (1,'sai',85,80,90,75,70,95,495);
Insert into STUDENTS (ROLL_NUMBER,NAME,TELUGU,ENGLISH,MATHS,HINDI,SCIENCE,SOCIAL,TOTAL_MARKS) values (2,'sathis',86,81,91,76,71,96,501);
Insert into STUDENTS (ROLL_NUMBER,NAME,TELUGU,ENGLISH,MATHS,HINDI,SCIENCE,SOCIAL,TOTAL_MARKS) values (3,'bharth',100,100,100,100,100,99,599);
Insert into STUDENTS (ROLL_NUMBER,NAME,TELUGU,ENGLISH,MATHS,HINDI,SCIENCE,SOCIAL,TOTAL_MARKS) values (4,'bhargavi',50,50,50,50,50,60,310);
REM INSERTING into TRNS
SET DEFINE OFF;
REM INSERTING into VIDEO
SET DEFINE OFF;
Insert into VIDEO (TITLE,YEAR,VIDEOID,STATE,AVALABILITY,DEBYCOST,LOSTCOST,ADDRESS) values ('CHEMISTRY FOR DUMMIES',2016,'V1CH16','NEW','O',10,50,'CHEMISTRY ROAD');
Insert into VIDEO (TITLE,YEAR,VIDEOID,STATE,AVALABILITY,DEBYCOST,LOSTCOST,ADDRESS) values ('CHEMISTRY FOR DUMMIES',2016,'V2CH16','BAD','A',5,20,'CHEMISTRY ROAD');
Insert into VIDEO (TITLE,YEAR,VIDEOID,STATE,AVALABILITY,DEBYCOST,LOSTCOST,ADDRESS) values ('COMPUTING MANAGER',2014,'V1CO14','GOOD','A',4,20,'COMPUTING ROAD');
Insert into VIDEO (TITLE,YEAR,VIDEOID,STATE,AVALABILITY,DEBYCOST,LOSTCOST,ADDRESS) values ('JAVA LANGUAGE',2015,'V1JA15','USED','O',4,20,'COMPUTING ROAD');
Insert into VIDEO (TITLE,YEAR,VIDEOID,STATE,AVALABILITY,DEBYCOST,LOSTCOST,ADDRESS) values ('DINOSAURS',2000,'V1DI00','GOOD','O',5,25,'ARCHEOLOGY ROAD');
Insert into VIDEO (TITLE,YEAR,VIDEOID,STATE,AVALABILITY,DEBYCOST,LOSTCOST,ADDRESS) values ('T-REX, DEADLY KING',1992,'V1TR92','USED','A',10,50,'ARCHEOLOGY ROAD');
Insert into VIDEO (TITLE,YEAR,VIDEOID,STATE,AVALABILITY,DEBYCOST,LOSTCOST,ADDRESS) values ('ANCESTORS OF THE HUMANITY',1998,'V1AN98','BAD','A',3,15,'ARCHEOLOGY ROAD');
Insert into VIDEO (TITLE,YEAR,VIDEOID,STATE,AVALABILITY,DEBYCOST,LOSTCOST,ADDRESS) values ('PHYSICS, MOST BORING SH*T',2018,'V1PH18','NEW','A',1,5,'PHYSICS ROAD');
Insert into VIDEO (TITLE,YEAR,VIDEOID,STATE,AVALABILITY,DEBYCOST,LOSTCOST,ADDRESS) values ('CHEMISTRY FOR DUMMIES',2016,'V1CH19','NEW','A',5,28,'PHYSICS ROAD');
--------------------------------------------------------
--  DDL for Trigger ADDCARDCUSTO_LIBRARY
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER "ADDCARDCUSTO_LIBRARY" 
AFTER INSERT
ON customer
FOR EACH ROW
DECLARE
BEGIN
  INSERT INTO card
  VALUES (:new.cardnumber,'A',0);

  DBMS_OUTPUT.PUT_LINE('Card created');
END;
ALTER TRIGGER "ADDCARDCUSTO_LIBRARY" ENABLE
--------------------------------------------------------
--  DDL for Trigger ADDCARDEMP_LIBRARY
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER "ADDCARDEMP_LIBRARY" 
AFTER INSERT
ON employee
FOR EACH ROW
DECLARE
BEGIN
  INSERT INTO card
  VALUES (:new.cardnumber,'A',0);

  DBMS_OUTPUT.PUT_LINE('Card created');
END;
ALTER TRIGGER "ADDCARDEMP_LIBRARY" ENABLE
--------------------------------------------------------
--  DDL for Trigger MODIFYFINES_LIBRARY
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER "MODIFYFINES_LIBRARY" 
AFTER DELETE
ON rent
FOR EACH ROW
DECLARE
  auxCardID NUMBER;
  auxItemID VARCHAR2(6);
  auxBook NUMBER;
  auxVideo NUMBER;
  auxDeby NUMBER;
BEGIN  
  SELECT cardid, itemid INTO auxCardID, auxItemID
  FROM rent
  WHERE cardid LIKE :old.cardid;

  SELECT COUNT(*) INTO auxBook
  FROM book
  WHERE bookid LIKE auxItemID;

  SELECT COUNT(*) INTO auxVideo
  FROM video
  WHERE videoid LIKE auxItemID;

  IF sysdate > :old.returndate THEN
    IF auxVideo > 0 THEN 
      SELECT debyCost INTO auxDeby
      FROM video
      WHERE videoid LIKE auxItemID;
    ELSIF auxBook > 0 THEN
      SELECT debyCost INTO auxDeby
      FROM book
      WHERE bookid LIKE auxItemID;
    END IF;

    UPDATE card
    SET status = 'B', fines = (fines + auxDeby)
    WHERE cardid LIKE auxCardID;
  ELSE
    DBMS_OUTPUT.PUT_LINE('The item has been return before deadline');
  END IF;
END;

ALTER TRIGGER "MODIFYFINES_LIBRARY" ENABLE
--------------------------------------------------------
--  DDL for Procedure ADDBOOK_LIBRARY
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "ADDBOOK_LIBRARY" (auxISBN IN VARCHAR2, auxBookID IN VARCHAR2, auxState IN VARCHAR2, auxDebyCost IN NUMBER,
auxLostCost IN NUMBER, auxAddress IN VARCHAR2)
IS
BEGIN
  INSERT INTO book
  VALUES(auxISBN,auxBookID,auxState,'A',auxDebyCost,auxLostCost,auxAddress);
  DBMS_OUTPUT.PUT_LINE('Book inserted correctly');
END;
--------------------------------------------------------
--  DDL for Procedure ADDCUSTOMER_LIBRARY
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "ADDCUSTOMER_LIBRARY" (auxCustomerId IN NUMBER, auxName IN VARCHAR2, auxCustomerAddress IN VARCHAR2, auxPhone IN NUMBER,
auxPass IN VARCHAR2, auxUserName IN VARCHAR2, auxCardNumber IN NUMBER)
IS
BEGIN
  INSERT INTO customer
  VALUES (auxCustomerId,auxName,auxCustomerAddress,auxPhone,auxPass,auxUserName,sysdate,auxCardNumber);
END;
--------------------------------------------------------
--  DDL for Procedure ADDVIDEO_LIBRARY
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "ADDVIDEO_LIBRARY" (auxTitle IN VARCHAR2, auxYear IN INT, auxVideoID IN VARCHAR2, auxState IN VARCHAR2, auxDebyCost IN NUMBER,
auxLostCost IN NUMBER, auxAddress IN VARCHAR2)
IS
BEGIN
  INSERT INTO video
  VALUES(auxTitle,auxYear,auxVideoID,auxState,'A',auxDebyCost,auxLostCost,auxAddress);
  DBMS_OUTPUT.PUT_LINE('Video inserted correctly');
END;
--------------------------------------------------------
--  DDL for Procedure ALLMEDIA_LIBRARY
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "ALLMEDIA_LIBRARY" (mediaType VARCHAR2)
IS
  CURSOR cBooks
  IS
    SELECT *
    FROM book;

  CURSOR cVideos
  IS
    SELECT *
    FROM video;

  xBooks cBooks%ROWTYPE;
  xVideos cVideos%ROWTYPE;
BEGIN
  IF mediaType LIKE 'books' THEN
    OPEN cBooks;

    DBMS_OUTPUT.PUT_LINE('ISBN     ID     STATE     AVALABILITY     DEBY_COST     LOST_COST    LOCATION');
    DBMS_OUTPUT.PUT_LINE('-----------------------------------------------------------------------------');

    LOOP
      FETCH cBooks
      INTO xBooks;
      EXIT WHEN cBooks%NOTFOUND;

      DBMS_OUTPUT.PUT_LINE(xBooks.isbn || '     ' || xBooks.bookid || '     ' || xBooks.state || '     ' || xBooks.avalability || '     ' || xBooks.debycost || '     ' ||
      xBooks.lostcost || '     ' || xBooks.address);
    END LOOP;
  ELSIF mediaType LIKE 'videos' THEN
    OPEN cVideos;
    DBMS_OUTPUT.PUT_LINE('TITLE     YEAR     ID     STATE     AVALABILITY     DEBY_COST     LOST_COST    LOCATION');
    DBMS_OUTPUT.PUT_LINE('---------------------------------------------------------------------------------------');
    LOOP
      FETCH cVideos
      INTO xVideos;
      EXIT WHEN cVideos%NOTFOUND;

      DBMS_OUTPUT.PUT_LINE(xVideos.title || '     ' || xVideos.year || '     ' || xVideos.videoid || '     ' || xVideos.state || '     ' || xVideos.avalability || '     ' || xVideos.debycost || '     ' ||
      xVideos.lostcost || '     ' || xVideos.address);
    END LOOP;
  ELSE
    DBMS_OUTPUT.PUT_LINE('TYPE INCORRECT, you must choose between books or videos');
  END IF;
END;
--------------------------------------------------------
--  DDL for Procedure CUSTOMERACCOUNT_LIBRARY
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "CUSTOMERACCOUNT_LIBRARY" (custoID IN customer.customerid%TYPE)
    is
     auxCard NUMBER;
  auxFines NUMBER;
  auxItem VARCHAR(6);
  rented number := 0;
  BEGIN
  SELECT cardnumber INTO auxCard
  FROM customer
  WHERE customerid LIKE custoID;

  SELECT COUNT(*) INTO rented
  FROM rent
  WHERE rent.cardid LIKE auxcard;

  DBMS_OUTPUT.PUT_LINE('The user card is ' || auxCard);  
  IF (rented > 0) THEN
    SELECT rent.itemid INTO auxItem
    FROM rent,card
    WHERE card.cardid = rent.cardid
    AND card.cardid LIKE auxCard;    

    DBMS_OUTPUT.PUT_LINE('The user has ' || auxItem || ' rented');
  ELSE    
    DBMS_OUTPUT.PUT_LINE('This user has no rents'); 
  END IF;

  SELECT fines INTO auxFines
  FROM card
  WHERE cardid LIKE auxcard;

  DBMS_OUTPUT.PUT_LINE('The user fines are ' || auxFines);

  EXCEPTION WHEN no_data_found THEN 
  DBMS_OUTPUT.PUT_LINE('NOT DATA FOUND');
END;
--------------------------------------------------------
--  DDL for Procedure EMPLOYEEACCOUNT_LIBRARY
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "EMPLOYEEACCOUNT_LIBRARY" (emploID IN employee.employeeid%TYPE)
IS
  auxCard NUMBER;
  auxFines NUMBER;
  auxItem VARCHAR(6);
  rented number := 0;
BEGIN
  SELECT cardnumber INTO auxCard
  FROM employee
  WHERE employeeid LIKE emploID;

  SELECT COUNT(*) INTO rented
  FROM rent
  WHERE rent.cardid LIKE auxcard;

  DBMS_OUTPUT.PUT_LINE('The user card is ' || auxCard);  
  IF (rented > 0) THEN
    SELECT rent.itemid INTO auxItem
    FROM rent,card
    WHERE card.cardid = rent.cardid
    AND card.cardid LIKE auxCard;    

    DBMS_OUTPUT.PUT_LINE('The user has ' || auxItem || ' rented');
  ELSE    
    DBMS_OUTPUT.PUT_LINE('This user has no rents'); 
  END IF;

  SELECT fines INTO auxFines
  FROM card
  WHERE cardid LIKE auxcard;

  DBMS_OUTPUT.PUT_LINE('The user fines are ' || auxFines);

  EXCEPTION WHEN no_data_found THEN 
  DBMS_OUTPUT.PUT_LINE('NOT DATA FOUND');
END;
--------------------------------------------------------
--  DDL for Procedure HANDLERETURNS_LIBRARY
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "HANDLERETURNS_LIBRARY" (auxItemID IN VARCHAR2)
IS
  auxRented NUMBER;
  auxBook NUMBER;
  auxVideo NUMBER;
BEGIN
  SELECT COUNT(*) INTO auxRented
  FROM rent
  WHERE itemid LIKE auxItemID;

  SELECT COUNT(*) INTO auxBook
  FROM book
  WHERE bookid LIKE auxItemID;

  SELECT COUNT(*) INTO auxVideo
  FROM video
  WHERE videoid LIKE auxItemID;

  IF auxRented > 0 THEN
    DELETE FROM rent
    WHERE itemid = auxItemID;
    IF auxBook > 0 THEN
      UPDATE book
      SET avalability = 'A'
      WHERE bookid LIKE auxItemID;
      DBMS_OUTPUT.PUT_LINE('The book ' || auxItemID || ' is now avaible.');
    ELSIF auxVideo > 0 THEN
      UPDATE video
      SET avalability = 'A'
      WHERE videoid LIKE auxItemID;
      DBMS_OUTPUT.PUT_LINE('The video ' || auxItemID || ' is now avaible.');
    END IF;
  ELSE
    DBMS_OUTPUT.PUT_LINE('This item is not rented at the moment');
  END IF;
  EXCEPTION WHEN no_data_found THEN 
  DBMS_OUTPUT.PUT_LINE('Item ID incorrect');    
END;
--------------------------------------------------------
--  DDL for Procedure LOGINCUSTOMER_LIBRARY
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "LOGINCUSTOMER_LIBRARY" (user IN VARCHAR2, pass IN VARCHAR2)
       is
        passAux customer.password%type;
        incorrect_password EXCEPTION;
   begin
   select password into passaux
   from customer
     WHERE username LIKE user;

  IF passAux LIKE pass THEN
    DBMS_OUTPUT.PUT_LINE('User ' || user || ' loging succesfull');
  ELSE
    RAISE incorrect_password;
  END IF;

  EXCEPTION
  WHEN no_data_found OR incorrect_password THEN 
       DBMS_OUTPUT.PUT_LINE('Incorrect username or password');

END;
--------------------------------------------------------
--  DDL for Procedure LOGINEMPLOYEE_LIBRARY
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "LOGINEMPLOYEE_LIBRARY" (user IN VARCHAR2, pass IN VARCHAR2)
       is
        passAux customer.password%type;
        incorrect_password EXCEPTION;
   begin
   select password into passaux
   from employee
     WHERE username LIKE user;

  IF passAux LIKE pass THEN
    DBMS_OUTPUT.PUT_LINE('User ' || user || ' loging succesfull');
  ELSE
    RAISE incorrect_password;
  END IF;

  EXCEPTION
  WHEN no_data_found OR incorrect_password THEN 
       DBMS_OUTPUT.PUT_LINE('Incorrect username or password');

END;
--------------------------------------------------------
--  DDL for Procedure PAYFINES_LIBRARY
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "PAYFINES_LIBRARY" (auxCard IN card.cardid%TYPE, money IN NUMBER)
IS
  finesAmount NUMBER;
  total NUMBER;
BEGIN
  SELECT fines INTO finesAmount
  FROM card
  WHERE cardid LIKE auxCard;

  IF finesAmount < money THEN
    total := money - finesAmount;
    DBMS_OUTPUT.PUT_LINE('YOU PAY ALL YOUR FINES AND YOU HAVE ' || total || ' MONEY BACK');

    UPDATE card
    SET status = 'A', fines = 0
    WHERE cardid = auxCard;

  ELSIF finesAmount = money THEN
    total := money - finesAmount;
    DBMS_OUTPUT.PUT_LINE('YOU PAY ALL YOUR FINES');

    UPDATE card
    SET status = 'A', fines = 0
    WHERE cardid = auxCard;

  ELSE
    total := finesAmount - money;
    DBMS_OUTPUT.PUT_LINE('YOU WILL NEED TO PAY ' || total || ' MORE DOLLARS TO UNLOCK YOUR CARD');

    UPDATE card
    SET fines = total
    WHERE cardid = auxCard;
  END IF;
END;
--------------------------------------------------------
--  DDL for Procedure PRC_APPL_VALIDATION
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "PRC_APPL_VALIDATION" 
AS
CURSOR cur_appl IS SELECT * FROM   cust_new_application WHERE status = 'p';
TYPE ty_appl is table OF cur_appl%rowtype;
v_appl ty_appl:=  ty_appl();
v_cnt number;
BEGIN
    OPEN cur_appl;
        LOOP
            FETCH cur_appl BULK COLLECT INTO v_appl;
            EXIT WHEN v_appl.count = 0;
                IF v_appl.count >= 1 THEN
                    for i in v_appl.first..v_appl.last
                    loop
                    --validating email_id
                        select COUNT(1) INTO v_cnt from cust_new_application WHERE email_id=v_appl(i).email_id;
                            IF v_cnt>1 THEN
                                UPDATE cust_new_application SET status = 'R', cmnt = 'Duplicate email_id'
                                WHERE email_id = v_appl(i).email_id;
                            END IF;
                    --validating mobile number
                        SELECT COUNT(1) INTO v_cnt FROM cust_new_application WHERE mobile_num = v_appl(i).mobile_num;
                            IF v_cnt > 1 THEN
                                UPDATE cust_new_application SET status = 'R', cmnt = 'Dupllicate mobile_num'
                                WHERE mobile_num = v_appl(i).mobile_num;
                            END IF;
                    --validating document number
                        SELECT COUNT(1) INTO v_cnt FROM cust_new_application WHERE d_id = v_appl(i).d_id and doc_id = v_appl(i).doc_id;
                            IF v_cnt > 1 THEN
                                UPDATE cust_new_application SET status = 'C', cmnt = 'Confermation from customer pending'
                                WHERE doc_id =v_appl(i).doc_id;
                            END IF;
                    END LOOP;
                    COMMIT;
                END IF;
        END LOOP;
    CLOSE cur_appl;
     UPDATE cust_new_application SET status ='A' WHERE status='p';
     commit;
END;
--------------------------------------------------------
--  DDL for Procedure PRC_DB
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "PRC_DB" (var VARCHAR2) IS

      BEGIN
          dbms.output.put_line(var);


      END ;
--------------------------------------------------------
--  DDL for Procedure PRC_DEBUG
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "PRC_DEBUG" (var varchar2)
as
begin
dbms_output.put_line(var);
end;
--------------------------------------------------------
--  DDL for Procedure PRC_EMP
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "PRC_EMP" 
AS
V_EMPNO NUMBER;
BEGIN
 SELECT EMPNO INTO V_EMPNO FROM EMP WHERE EMPNO = V_EMPNO;

  UPDATE EMP SET SAL =9000 WHERE EMPNO = 7369;

END;
--------------------------------------------------------
--  DDL for Procedure PRC_EMPLOYEE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "PRC_EMPLOYEE" (var VARCHAR2) IS

      BEGIN
          dbms.output.put_line(var);
      END ;
--------------------------------------------------------
--  DDL for Procedure PRC_EMP_DML
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "PRC_EMP_DML" (pempno number)
as
v_sal number;
v_comm number;
begin
    select sal, comm 
        into v_sal, v_comm
     from emp where empno=pempno;
        if v_comm is null then
            update emp set sal=sal+100 where empno=pempno;
        else
            update emp set sal=sal+comm where empno=pempno;
        end if;
    commit;
end
--------------------------------------------------------
--  DDL for Procedure PRC_NEW_APPLICATION
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "PRC_NEW_APPLICATION" (
	P_First_name VARCHAR2,
    p_Middle_name VARCHAR2,
    p_Last_name VARCHAR2,
    p_email_id VARCHAR2,
    p_mobile_num NUMBER,
    p_gender VARCHAR2,
    p_IFSC_code VARCHAR2,
    p_D_id NUMBER,
    p_doc_id NUMBER, 
    p_application_id out NUMBER)
AS
v_application_id NUMBER;
BEGIN
	v_application_id:=to_NUMBER(to_char(sysdate,'yyyymmdd') || lpad(seq_app_id.nextval,2,0));
    insert into cust_new_application(
		app_id,
		First_name,
		Middle_name,
		Last_name,
		email_id,
		mobile_num,
		gender,
		IFSC_code,
		D_id,
		doc_id)
    values(
		v_application_id,
		P_First_name,
		p_Middle_name,
		p_Last_name,
		p_email_id,
		p_mobile_num,
		p_gender,
		p_IFSC_code,
		p_D_id,
		p_doc_id);
end;
--------------------------------------------------------
--  DDL for Procedure PRC_PRINT_EVEN_NUMBERS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "PRC_PRINT_EVEN_NUMBERS" (pnumber number)
as
begin
    for i in 1..pnumber loop
        if mod(i,2) =0 then
                dbms_output.put_line(i);
        end if;
    end loop;
end;
--------------------------------------------------------
--  DDL for Procedure PRC_PRINT_NUMBER
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "PRC_PRINT_NUMBER" (pnumber number)
as
begin
for i in 1..pnumber loop
    dbms_output.put_line(i);
end loop;
end;
--------------------------------------------------------
--  DDL for Procedure PRC__NEW_APPLICATION
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "PRC__NEW_APPLICATION" (INPUT_TEST VARCHAR2)
AS
BEGIN
DBMS_OUTPUT.PUT_LINE(INPUT_TEST);
END;
--------------------------------------------------------
--  DDL for Procedure PRINT_EMPLOYEE_DETAILS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "PRINT_EMPLOYEE_DETAILS" (
    p_job VARCHAR2,
    p_dept_no NUMBER,
    p_emp OUT SYS_REFCURSOR
)
IS
BEGIN
    OPEN p_emp FOR
    SELECT *
    FROM employees
    WHERE job = p_job
    AND dept_no = p_dept_no;
END Print_Employee_Details;
--------------------------------------------------------
--  DDL for Procedure REMOVEITEM_LIBRARY
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "REMOVEITEM_LIBRARY" (auxItemID IN VARCHAR2)
IS
  auxBook NUMBER;
  auxVideo NUMBER;
BEGIN
  SELECT COUNT(*) INTO auxBook
  FROM book
  WHERE bookid LIKE auxItemID;

  SELECT COUNT(*) INTO auxVideo
  FROM video
  WHERE videoid LIKE auxItemID;

  IF auxBook > 0 THEN
    DELETE FROM book
    WHERE bookid LIKE auxItemID;
    DBMS_OUTPUT.PUT_LINE('Book removed correctly');
  ELSIF auxVideo > 0 THEN
    DELETE FROM video
    WHERE videoid LIKE auxItemID;
    DBMS_OUTPUT.PUT_LINE('Video removed correctly');
  END IF;
END;
--------------------------------------------------------
--  DDL for Procedure RENTITEM_LIBRARY
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "RENTITEM_LIBRARY" (auxCard IN NUMBER, auxItemID IN VARCHAR2, itemType IN VARCHAR2, auxDate IN DATE)
IS
  statusAux VARCHAR2(1);
  itemStatus VARCHAR2(1);
BEGIN

  SELECT status INTO statusAux
  FROM card
  WHERE cardid LIKE auxCard;

  IF statusAux LIKE 'A' THEN
    IF itemType LIKE 'book' THEN
      SELECT avalability INTO itemStatus
      FROM book
      WHERE bookid LIKE auxItemID;
      END IF;
      IF itemStatus LIKE 'A' THEN
        UPDATE book
        SET avalability = 'O'
        WHERE bookid LIKE auxItemID;

        INSERT INTO rent
        VALUES (auxCard,auxItemID,sysdate,auxDate);
        DBMS_OUTPUT.PUT_LINE('Item ' || auxItemID || ' rented');
      ELSE
        DBMS_OUTPUT.PUT_LINE('The item is already rented');
      END IF;

    ELSIF itemType LIKE 'video' THEN

      SELECT avalability INTO itemStatus
      FROM video
      WHERE videoid LIKE auxItemID;

      IF itemStatus LIKE 'A' THEN
        UPDATE video
        SET avalability = 'O'
        WHERE videoid LIKE auxItemID;

        INSERT INTO rent
        VALUES (auxCard,auxItemID,sysdate,auxDate);
        DBMS_OUTPUT.PUT_LINE('Item ' || auxItemID || ' rented');
      ELSE
        DBMS_OUTPUT.PUT_LINE('The item is already rented');
      END IF;

  ELSE
    DBMS_OUTPUT.PUT_LINE('The user is blocked');
  END IF;    
END;
--------------------------------------------------------
--  DDL for Procedure UPDATEINFOCUSTO_LIBRARY
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "UPDATEINFOCUSTO_LIBRARY" (auxCustomer IN customer.customerid%TYPE, pNumber NUMBER, address VARCHAR2, newPass VARCHAR2)
IS
BEGIN
  UPDATE customer
  SET phone = pNumber, customeraddress = address, password = newPass
  WHERE customerid = auxCustomer;
END;
--------------------------------------------------------
--  DDL for Procedure UPDATEINFOEMP_LIBRARY
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "UPDATEINFOEMP_LIBRARY" (auxEmployee IN employee.employeeid%TYPE, pNumber NUMBER, address VARCHAR2, newPass VARCHAR2, newPayCheck NUMBER,
newBranch VARCHAR2)
IS
BEGIN
  UPDATE employee
  SET phone = pNumber, EMPLOYEEADDRESS = address, password = newPass, paycheck = auxEmployee, branchname = newBranch

  WHERE employeeid = auxEmployee;
END;
--------------------------------------------------------
--  DDL for Procedure UPDATE_CUST_DETAILS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "UPDATE_CUST_DETAILS" (
    p_mobile_num NUMBER DEFAULT NULL,
    p_email_id VARCHAR2  DEFAULT NULL,
    p_doc_id NUMBER  DEFAULT NULL,
    p_app_id NUMBER)      
as
begin 
    if 
        p_mobile_num is not null then 
      update cust_new_application set
      mobile_num = p_mobile_num where
      APP_ID= p_app_id;
      end if;

      if 
      p_email_id is not null then 
      update cust_new_application set
      email_id=p_email_id where
      APP_ID= p_app_id;
      end if;

      if 
      p_doc_id is  not null then 
      update cust_new_application set
      doc_id=p_doc_id where
      APP_ID= p_app_id;
      end if;


end;
--------------------------------------------------------
--  DDL for Procedure VIEWCUSTOMER_LIBRARY
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "VIEWCUSTOMER_LIBRARY" (auxCustomerID IN NUMBER)
IS
  custoName VARCHAR2(40);
  custoAdd VARCHAR2(50);
  custoPhone NUMBER(9);
  userNaM VARCHAR2(10);
  custoDate DATE;
  custoCard NUMBER;
BEGIN
  SELECT name,customeraddress,phone,username,datesignup,cardnumber
  INTO custoName, custoAdd, custoPhone, userNaM, custoDate, custoCard
  FROM customer
  WHERE customerid LIKE auxCustomerID;

  DBMS_OUTPUT.PUT_LINE('CUSTOMER ' || auxCustomerID || ' INFO');
  DBMS_OUTPUT.PUT_LINE('------------------------------------------');
  DBMS_OUTPUT.PUT_LINE('NAME: ' || custoName);
  DBMS_OUTPUT.PUT_LINE('ADDRESS: ' || custoAdd);
  DBMS_OUTPUT.PUT_LINE('PHONE: ' || custoPhone);
  DBMS_OUTPUT.PUT_LINE('USER NAME: ' || userNaM);
  DBMS_OUTPUT.PUT_LINE('DATE OF SIGN UP: ' || custoDate);
  DBMS_OUTPUT.PUT_LINE('CARD NUMBER: ' || custoCard);
  DBMS_OUTPUT.PUT_LINE('------------------------------------------');

END;
--------------------------------------------------------
--  DDL for Procedure VIEWITEM_LIBRARY
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "VIEWITEM_LIBRARY" (auxItemID IN VARCHAR2)
  IS
   auxISBN VARCHAR2(4);
  auxTitle VARCHAR2(50);
  auxYear NUMBER;
  auxState VARCHAR2(10);
  auxDebyCost NUMBER(10,2);
  auxLostCost NUMBER(10,2);
  auxAddress VARCHAR2(50);
  auxAbala VARCHAR2(1);
  auxVideo NUMBER;
  auxBook NUMBER;
BEGIN
          SELECT COUNT(*) INTO auxBook
  FROM book
  WHERE bookid LIKE auxItemID;

  SELECT COUNT(*) INTO auxVideo
  FROM video
  WHERE videoid LIKE auxItemID;

  IF auxBook > 0 THEN
    SELECT isbn, state, avalability, debycost, lostcost, address
    INTO auxISBN, auxState, auxAbala, auxDebyCost, auxLostCost, auxAddress
    FROM book
    WHERE bookid LIKE auxItemID;

    DBMS_OUTPUT.PUT_LINE('BOOK ' || auxItemID || ' INFO');
    DBMS_OUTPUT.PUT_LINE('------------------------------------------');
    DBMS_OUTPUT.PUT_LINE('ISBN: ' || auxISBN);
    DBMS_OUTPUT.PUT_LINE('STATE: ' || auxState);
    DBMS_OUTPUT.PUT_LINE('AVALABILITY: ' || auxAbala);
    DBMS_OUTPUT.PUT_LINE('DEBY COST: ' || auxDebyCost);
    DBMS_OUTPUT.PUT_LINE('LOST COST: ' || auxLostCost);
    DBMS_OUTPUT.PUT_LINE('ADDRESS: ' || auxAddress);
    DBMS_OUTPUT.PUT_LINE('------------------------------------------');
  ELSIF auxVideo > 0 THEN
    SELECT title, year, state, avalability, debycost, lostcost, address
    INTO auxTitle, auxYear, auxState, auxAbala, auxDebyCost, auxLostCost, auxAddress
    FROM video
    WHERE videoid LIKE auxItemID;

    DBMS_OUTPUT.PUT_LINE('VIDEO ' || auxItemID || ' INFO');
    DBMS_OUTPUT.PUT_LINE('------------------------------------------');
    DBMS_OUTPUT.PUT_LINE('TITLE: ' || auxTitle);
    DBMS_OUTPUT.PUT_LINE('YEAR: ' || auxYear);
    DBMS_OUTPUT.PUT_LINE('STATE: ' || auxState);
    DBMS_OUTPUT.PUT_LINE('AVALABILITY: ' || auxAbala);
    DBMS_OUTPUT.PUT_LINE('DEBY COST: ' || auxDebyCost);
    DBMS_OUTPUT.PUT_LINE('LOST COST: ' || auxLostCost);
    DBMS_OUTPUT.PUT_LINE('ADDRESS: ' || auxAddress);
    DBMS_OUTPUT.PUT_LINE('------------------------------------------');
  END IF;
END;
--------------------------------------------------------
--  DDL for Function FN_GEN_NUMBERS
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE FUNCTION "FN_GEN_NUMBERS" 
return boolean
as
begin
    for i in 1..100 loop
        dbms_output.put_line(i);
    end loop;
    dbms_output.put_line('After Return value');
    return true;

end;
--------------------------------------------------------
--  DDL for Function FN_NEW_SAL_UPDATE
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE FUNCTION "FN_NEW_SAL_UPDATE" (pempno number)
return number
as
v_sal number;
v_comm number;
v_new_sal number;
begin
select sal, comm 
        into v_sal, v_comm
            from emp where empno=pempno;
    if v_comm is null then 
        v_new_sal:= v_sal+100;
    else
        v_new_sal := v_sal+v_comm;
    end if;  

    update emp set sal=v_new_sal
    where empno=pempno;

    commit;

    return v_new_sal;

end;


SELECT * FROM emp;
--------------------------------------------------------
--  DDL for Function FN_UPSAL_WITH_COMM
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE FUNCTION "FN_UPSAL_WITH_COMM" (pempno number)
RETURN NUMBER 
AS
v_sal NUMBER;
BEGIN
UPDATE emp set sal= sal+nvl(comm,0),
               comm=null
                            where empno=pempno;

select sal into v_sal from emp where empno=pempno;
return v_sal;                  
end;
--------------------------------------------------------
--  DDL for Function LOGMNR$COL_GG_TABF_PUBLIC
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE FUNCTION "LOGMNR$COL_GG_TABF_PUBLIC" wrapped
a000000
1
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
8
237 185
nkvJV1w6wH1y7mRApzf9mGuebNUwgxDILkhGfHQCmP8+Vi4fyqh3SG1Fyq+pCts1OlgnK761
YuzKBA4JE5DNwZzBIF/Y4ZM5eUlquVyTkOg+AodK3vQJt9NLvPITXbP42O37gO+zKr4BQEJk
ypwrP1U/Pf6MLZONN8LUaVqHCN87T14HqHs5taX7LhLXQ2lCVBE1Ll8dyB9CDOlbyvQS/lrb
+0n1pQi9IJAWySL85ChAqnTaqFJm0YeToD4lZ8UUPQqIZNoX0x73WK9OzsmdBrvEC97iduxe
PEXVkxF6xklPod6yOGBvW7DAFMBgf+LajDLVKOAwB2EAiKCXYMuTUTtMYYkCFFf4sj1rCpsj
TLth6TSru530aM2HP6bEbm3m
--------------------------------------------------------
--  DDL for Function LOGMNR$GSBA_GG_TABF_PUBLIC
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE FUNCTION "LOGMNR$GSBA_GG_TABF_PUBLIC" wrapped
a000000
1
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
8
206 171
6gxi/CQwK1I5Rfwuw/SXrOGpVRYwgwLI1yfbfHRGEjNe54OE4QwRZCoA20oG536tzgcBrj+1
xE3tE8jIhAoTlUdUmkdYMmZycO1SdiJZwwt/6BrM1wHXl/E5+3Ip2NXzC9j8v4+KjkD9d5AT
p05eEsEWjU1CBTMSpjZZrXzbgFl9QNnQ+zJGjSug21f76ajs78m6anxz7vFcTcem6XpAgKjc
EXzd/ijP8qiOqwblTfnXcRslJn3MljD02u+5fh9NBctOmnaw/tOjRCFPUhY8I9gCoMptjG7U
rHEIFzHOFyxBEdulRGq4ngSgcm7l2yOdSHgNM8rO2vUH4gozvJoLE1S8GBBzG/wrvHPhACQ/
2w==
--------------------------------------------------------
--  DDL for Function LOGMNR$KEY_GG_TABF_PUBLIC
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE FUNCTION "LOGMNR$KEY_GG_TABF_PUBLIC" wrapped
a000000
1
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
8
2a0 1a1
3O4I5hDO715d8A2tqbxMCflFW0owg/D319xqfC9Grfg+K6yE71zMvtNS45AyRXBk77WpI5v4
nUSfE2lbvUYgk3JHySIe28XxC3xIYYpPGQjxwa3GzPw0FN5aN6kerQQTHUBp29Dd+vLSgBaC
2pAFrq059ZvN0ZPN11XG/2RuDY7HaTQu/QffhnY8rVlNxpFmbkVidwtZQahx5qIFu9Uww/tv
o1AvhjaORi898/KiPtOqv7LpsPFbyNuMnZEG48cxtZuesMBJFP/bKtgU2DN69xiT8Pxf+N2n
g0D2ximYzZqwY/4dBQj9dyQDuXRFo40hdqtWw0L96zV6723aQ8Xp0cqBaZj2wWTI4+6Ikry9
zY0Mdm3bV8TYqsOa+zT4fnikGO0eYbTFHEiW9QUbl/UwzuERwk8p
--------------------------------------------------------
--  DDL for Function LOGMNR$SEQ_GG_TABF_PUBLIC
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE FUNCTION "LOGMNR$SEQ_GG_TABF_PUBLIC" wrapped
a000000
1
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
8
249 181
++dDv/cHZatK7/vHG9lvR8DQCpYwg/D3AEhqfHQC2h6ONoOvOeHvTNX1S5GDyajM4j8vkSVz
IMw+LbYS3goujprvmrB/LUpdBF8TVvjEqZpC7MCKPXWcGnTeL7ja8C2tcOdjOpRXkwL5NmPJ
B0KqMvwepdiQDY7HUDQrBddQC1lBqHGEogWkwRJ3+2+jUC+Gpo5GTazIWS0V551NkSl3+h0W
BhkPglLbvQDPzxWTnmu4ZuJIlTiNwTf1R0WxghyyKFjES9CJsCrGT8Fn7prlF4Mr5kx1YBGf
5xaODtRnmVJgb65RlKbAN9+Xxf2QnQjKQL99RZAgsEwGVKNfx9lFKwHLGUwzjOxmIAXXYd/Z
+L9osPQJjZYkNrD0pQ==
--------------------------------------------------------
--  DDL for Function LOGMNR$TAB_GG_TABF_PUBLIC
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE FUNCTION "LOGMNR$TAB_GG_TABF_PUBLIC" wrapped
a000000
1
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
8
22e 181
PRVt0FiLRPgjIhZlCZcQhnOHXQ4wgzJp2UhGfHSKrQ843hKm3gKD9swoFAS4jVcW0CsSl7W1
6banVWdjktOVM18XyRjY4ZM5eRdquSp0ZdfHl3KJPBYqPi9LXIwum30Qh7ymgO+zTKj+R1N2
nSs/TPnknfYLwcUdAfBryDQGEIMisMuE9XT5ix3sudhHa5tLJRjsBIDKlqL7zk2CH0C1NRAZ
XrP7WgavVdNS3Yikz88VupZG21hTuAGspJBgCagmNWIwi9pgCIWP3rxF4p+uMps/ABEg+MBP
6Iykm62kO6hWhVHJXkfKF/jrQFjYBTTzatr1VTcOXt/AFuagDR7isNtb//lnXh8TXyAFWyCT
ubv6GXL0aM0PP/t+DfSl
--------------------------------------------------------
--  DDL for Function LOGMNR$USER_GG_TABF_PUBLIC
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE FUNCTION "LOGMNR$USER_GG_TABF_PUBLIC" wrapped
a000000
1
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
abcd
8
272 191
Vc+i+Mga8m7/BSlvXl0J+GmParYwg/D319wCfC8CTE6Ot30G8QRR0WzR8ohw8Z/y6DuL4pL5
IDjZApnCaZgeKa1OTjLj2B2tOYZg2ZuOAPKrxo7DeBqtn0Ahw0tubS36jP4xc+d2eQebdJMD
c/U0JxdiAl0qIPzsltBjeoGAEsxUk0aubCMJmysgc2d8ojil6ixQ37D7RA0HWMkh27QdOuXF
vSwuufDunMMT8Hue9dvy4vRXj+PhuyylJSukStsxyIb234EahCXyrjDlnzbC91eoU7v5sb4D
OvtDmggQCEViyhFXwspP9P0dOObin8JENsDJeFZYr/oVAgSHa97LRKvNZgd+f//XHlpEAOP4
rNm5mF0wTCABbb7tc5c7uo09M+79i7en8g==
